{
  "contractName": "AMLToken",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        },
        {
          "name": "state",
          "type": "bool"
        }
      ],
      "name": "setTransferAgent",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "mintingFinished",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "setReleaseAgent",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "releaseTokenTransfer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finishMinting",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "transferAgents",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "released",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "releaseAgent",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "claimedBy",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "fromWhom",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ReclaimedAllAndBurned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "claimedBy",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "fromWhom",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ReclaimAndBurned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "MintFinished",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "fromWhom",
          "type": "address"
        }
      ],
      "name": "reclaimAllAndBurn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "fromWhom",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "reclaimAndBurn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60606040526004805460a060020a60ff02191690556006805460ff1916905560038054600160a060020a03191633600160a060020a0316179055610e8f806100486000396000f30060606040526004361061011c5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166302f652a3811461012157806305d2035b14610147578063095ea7b31461016e57806318160ddd1461019057806323b872dd146101b55780632a724f2a146101dd5780633e96d28e146101fc57806340c10f191461020f5780635f412d4f14610231578063661884631461024457806370a08231146102665780637d64bcb414610285578063867c2857146102985780638da5cb5b146102b757806396132521146102e6578063a9059cbb146102f9578063d1f276d31461031b578063d73dd6231461032e578063dd62ed3e14610350578063f2fde38b14610375578063fb920ad114610394575b600080fd5b341561012c57600080fd5b610145600160a060020a036004351660243515156103b6565b005b341561015257600080fd5b61015a610417565b604051901515815260200160405180910390f35b341561017957600080fd5b61015a600160a060020a0360043516602435610420565b341561019b57600080fd5b6101a361048c565b60405190815260200160405180910390f35b34156101c057600080fd5b61015a600160a060020a0360043581169060243516604435610492565b34156101e857600080fd5b610145600160a060020a03600435166104e5565b341561020757600080fd5b6101456105ad565b341561021a57600080fd5b61015a600160a060020a0360043516602435610614565b341561023c57600080fd5b61014561071a565b341561024f57600080fd5b61015a600160a060020a036004351660243561075b565b341561027157600080fd5b6101a3600160a060020a0360043516610855565b341561029057600080fd5b61015a610870565b34156102a357600080fd5b61015a600160a060020a03600435166108dd565b34156102c257600080fd5b6102ca6108f2565b604051600160a060020a03909116815260200160405180910390f35b34156102f157600080fd5b61015a610901565b341561030457600080fd5b61015a600160a060020a0360043516602435610911565b341561032657600080fd5b6102ca610962565b341561033957600080fd5b61015a600160a060020a0360043516602435610971565b341561035b57600080fd5b6101a3600160a060020a0360043581169060243516610a15565b341561038057600080fd5b610145600160a060020a0360043516610a40565b341561039f57600080fd5b610145600160a060020a0360043516602435610adb565b60045433600160a060020a039081169116146103d157600080fd5b60045460009060a060020a900460ff16156103eb57600080fd5b50600160a060020a03919091166000908152600560205260409020805460ff1916911515919091179055565b60065460ff1681565b600160a060020a03338116600081815260026020908152604080832094871680845294909152808220859055909291907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a350600192915050565b60005481565b600454600090849060a060020a900460ff1615156104d157600160a060020a03811660009081526005602052604090205460ff1615156104d157600080fd5b6104dc858585610bbe565b95945050505050565b60045460009033600160a060020a0390811691161461050357600080fd5b60045460009060a060020a900460ff161561051d57600080fd5b61052683610855565b600160a060020a038416600090815260016020526040812081905554909250610555908363ffffffff610d4016565b6000557f99dac1e42583126a1fd369c8a7c5bd04067b92ad15c37d50ee75083c7da24989338484604051600160a060020a039384168152919092166020820152604080820192909252606001905180910390a1505050565b60035433600160a060020a039081169116146105c857600080fd5b60045460009060a060020a900460ff16156105e257600080fd5b506003546004805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03909216919091179055565b60035460009033600160a060020a0390811691161461063257600080fd5b60065460ff161561064257600080fd5b600054610655908363ffffffff610d5216565b6000908155600160a060020a038416815260016020526040902054610680908363ffffffff610d5216565b600160a060020a0384166000818152600160205260409081902092909255907f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d41213968859084905190815260200160405180910390a2600160a060020a03831660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405190815260200160405180910390a350600192915050565b60045433600160a060020a0390811691161461073557600080fd5b6004805474ff0000000000000000000000000000000000000000191660a060020a179055565b600160a060020a033381166000908152600260209081526040808320938616835292905290812054808311156107b857600160a060020a0333811660009081526002602090815260408083209388168352929052908120556107ef565b6107c8818463ffffffff610d4016565b600160a060020a033381166000908152600260209081526040808320938916835292905220555b600160a060020a0333811660008181526002602090815260408083209489168084529490915290819020547f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925915190815260200160405180910390a35060019392505050565b600160a060020a031660009081526001602052604090205490565b60035460009033600160a060020a0390811691161461088e57600080fd5b60065460ff161561089e57600080fd5b6006805460ff191660011790557fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0860405160405180910390a150600190565b60056020526000908152604090205460ff1681565b600354600160a060020a031681565b60045460a060020a900460ff1681565b600454600090339060a060020a900460ff16151561095057600160a060020a03811660009081526005602052604090205460ff16151561095057600080fd5b61095a8484610d68565b949350505050565b600454600160a060020a031681565b600160a060020a0333811660009081526002602090815260408083209386168352929052908120546109a9908363ffffffff610d5216565b600160a060020a0333811660008181526002602090815260408083209489168084529490915290819020849055919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591905190815260200160405180910390a350600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b60035433600160a060020a03908116911614610a5b57600080fd5b600160a060020a0381161515610a7057600080fd5b600354600160a060020a0380831691167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60045433600160a060020a03908116911614610af657600080fd5b60045460009060a060020a900460ff1615610b1057600080fd5b600160a060020a038316600090815260016020526040902054610b39908363ffffffff610d4016565b600160a060020a03841660009081526001602052604081209190915554610b66908363ffffffff610d4016565b6000557f695f34178667d2b4fce11a766e0c9d745bad9429aa5f435302ff673c30d81541338484604051600160a060020a039384168152919092166020820152604080820192909252606001905180910390a1505050565b6000600160a060020a0383161515610bd557600080fd5b600160a060020a038416600090815260016020526040902054821115610bfa57600080fd5b600160a060020a0380851660009081526002602090815260408083203390941683529290522054821115610c2d57600080fd5b600160a060020a038416600090815260016020526040902054610c56908363ffffffff610d4016565b600160a060020a038086166000908152600160205260408082209390935590851681522054610c8b908363ffffffff610d5216565b600160a060020a03808516600090815260016020908152604080832094909455878316825260028152838220339093168252919091522054610cd3908363ffffffff610d4016565b600160a060020a03808616600081815260026020908152604080832033861684529091529081902093909355908516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a35060019392505050565b600082821115610d4c57fe5b50900390565b600082820183811015610d6157fe5b9392505050565b6000600160a060020a0383161515610d7f57600080fd5b600160a060020a033316600090815260016020526040902054821115610da457600080fd5b600160a060020a033316600090815260016020526040902054610dcd908363ffffffff610d4016565b600160a060020a033381166000908152600160205260408082209390935590851681522054610e02908363ffffffff610d5216565b600160a060020a0380851660008181526001602052604090819020939093559133909116907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a3506001929150505600a165627a7a72305820f165914ade87d9a5b9ba2ca8582796c4c2d659b3c5c0b59f028e480a57228e8c0029",
  "deployedBytecode": "0x60606040526004361061011c5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166302f652a3811461012157806305d2035b14610147578063095ea7b31461016e57806318160ddd1461019057806323b872dd146101b55780632a724f2a146101dd5780633e96d28e146101fc57806340c10f191461020f5780635f412d4f14610231578063661884631461024457806370a08231146102665780637d64bcb414610285578063867c2857146102985780638da5cb5b146102b757806396132521146102e6578063a9059cbb146102f9578063d1f276d31461031b578063d73dd6231461032e578063dd62ed3e14610350578063f2fde38b14610375578063fb920ad114610394575b600080fd5b341561012c57600080fd5b610145600160a060020a036004351660243515156103b6565b005b341561015257600080fd5b61015a610417565b604051901515815260200160405180910390f35b341561017957600080fd5b61015a600160a060020a0360043516602435610420565b341561019b57600080fd5b6101a361048c565b60405190815260200160405180910390f35b34156101c057600080fd5b61015a600160a060020a0360043581169060243516604435610492565b34156101e857600080fd5b610145600160a060020a03600435166104e5565b341561020757600080fd5b6101456105ad565b341561021a57600080fd5b61015a600160a060020a0360043516602435610614565b341561023c57600080fd5b61014561071a565b341561024f57600080fd5b61015a600160a060020a036004351660243561075b565b341561027157600080fd5b6101a3600160a060020a0360043516610855565b341561029057600080fd5b61015a610870565b34156102a357600080fd5b61015a600160a060020a03600435166108dd565b34156102c257600080fd5b6102ca6108f2565b604051600160a060020a03909116815260200160405180910390f35b34156102f157600080fd5b61015a610901565b341561030457600080fd5b61015a600160a060020a0360043516602435610911565b341561032657600080fd5b6102ca610962565b341561033957600080fd5b61015a600160a060020a0360043516602435610971565b341561035b57600080fd5b6101a3600160a060020a0360043581169060243516610a15565b341561038057600080fd5b610145600160a060020a0360043516610a40565b341561039f57600080fd5b610145600160a060020a0360043516602435610adb565b60045433600160a060020a039081169116146103d157600080fd5b60045460009060a060020a900460ff16156103eb57600080fd5b50600160a060020a03919091166000908152600560205260409020805460ff1916911515919091179055565b60065460ff1681565b600160a060020a03338116600081815260026020908152604080832094871680845294909152808220859055909291907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a350600192915050565b60005481565b600454600090849060a060020a900460ff1615156104d157600160a060020a03811660009081526005602052604090205460ff1615156104d157600080fd5b6104dc858585610bbe565b95945050505050565b60045460009033600160a060020a0390811691161461050357600080fd5b60045460009060a060020a900460ff161561051d57600080fd5b61052683610855565b600160a060020a038416600090815260016020526040812081905554909250610555908363ffffffff610d4016565b6000557f99dac1e42583126a1fd369c8a7c5bd04067b92ad15c37d50ee75083c7da24989338484604051600160a060020a039384168152919092166020820152604080820192909252606001905180910390a1505050565b60035433600160a060020a039081169116146105c857600080fd5b60045460009060a060020a900460ff16156105e257600080fd5b506003546004805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03909216919091179055565b60035460009033600160a060020a0390811691161461063257600080fd5b60065460ff161561064257600080fd5b600054610655908363ffffffff610d5216565b6000908155600160a060020a038416815260016020526040902054610680908363ffffffff610d5216565b600160a060020a0384166000818152600160205260409081902092909255907f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d41213968859084905190815260200160405180910390a2600160a060020a03831660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405190815260200160405180910390a350600192915050565b60045433600160a060020a0390811691161461073557600080fd5b6004805474ff0000000000000000000000000000000000000000191660a060020a179055565b600160a060020a033381166000908152600260209081526040808320938616835292905290812054808311156107b857600160a060020a0333811660009081526002602090815260408083209388168352929052908120556107ef565b6107c8818463ffffffff610d4016565b600160a060020a033381166000908152600260209081526040808320938916835292905220555b600160a060020a0333811660008181526002602090815260408083209489168084529490915290819020547f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925915190815260200160405180910390a35060019392505050565b600160a060020a031660009081526001602052604090205490565b60035460009033600160a060020a0390811691161461088e57600080fd5b60065460ff161561089e57600080fd5b6006805460ff191660011790557fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0860405160405180910390a150600190565b60056020526000908152604090205460ff1681565b600354600160a060020a031681565b60045460a060020a900460ff1681565b600454600090339060a060020a900460ff16151561095057600160a060020a03811660009081526005602052604090205460ff16151561095057600080fd5b61095a8484610d68565b949350505050565b600454600160a060020a031681565b600160a060020a0333811660009081526002602090815260408083209386168352929052908120546109a9908363ffffffff610d5216565b600160a060020a0333811660008181526002602090815260408083209489168084529490915290819020849055919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591905190815260200160405180910390a350600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b60035433600160a060020a03908116911614610a5b57600080fd5b600160a060020a0381161515610a7057600080fd5b600354600160a060020a0380831691167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60045433600160a060020a03908116911614610af657600080fd5b60045460009060a060020a900460ff1615610b1057600080fd5b600160a060020a038316600090815260016020526040902054610b39908363ffffffff610d4016565b600160a060020a03841660009081526001602052604081209190915554610b66908363ffffffff610d4016565b6000557f695f34178667d2b4fce11a766e0c9d745bad9429aa5f435302ff673c30d81541338484604051600160a060020a039384168152919092166020820152604080820192909252606001905180910390a1505050565b6000600160a060020a0383161515610bd557600080fd5b600160a060020a038416600090815260016020526040902054821115610bfa57600080fd5b600160a060020a0380851660009081526002602090815260408083203390941683529290522054821115610c2d57600080fd5b600160a060020a038416600090815260016020526040902054610c56908363ffffffff610d4016565b600160a060020a038086166000908152600160205260408082209390935590851681522054610c8b908363ffffffff610d5216565b600160a060020a03808516600090815260016020908152604080832094909455878316825260028152838220339093168252919091522054610cd3908363ffffffff610d4016565b600160a060020a03808616600081815260026020908152604080832033861684529091529081902093909355908516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a35060019392505050565b600082821115610d4c57fe5b50900390565b600082820183811015610d6157fe5b9392505050565b6000600160a060020a0383161515610d7f57600080fd5b600160a060020a033316600090815260016020526040902054821115610da457600080fd5b600160a060020a033316600090815260016020526040902054610dcd908363ffffffff610d4016565b600160a060020a033381166000908152600160205260408082209390935590851681522054610e02908363ffffffff610d5216565b600160a060020a0380851660008181526001602052604090819020939093559133909116907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a3506001929150505600a165627a7a72305820f165914ade87d9a5b9ba2ca8582796c4c2d659b3c5c0b59f028e480a57228e8c0029",
  "sourceMap": "830:1512:0:-;;;819:28:13;;;-1:-1:-1;;;;;;819:28:13;;;589:35:9;;;-1:-1:-1;;589:35:9;;;499:5:10;:18;;-1:-1:-1;;;;;;499:18:10;507:10;-1:-1:-1;;;;;499:18:10;;;;830:1512:0;;;-1:-1:-1;830:1512:0;;",
  "deployedSourceMap": "830:1512:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1799:137:13;;;;;;;;;;-1:-1:-1;;;;;1799:137:13;;;;;;;;;;;589:35:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1798:183:16;;;;;;;;;;-1:-1:-1;;;;;1798:183:16;;;;;;;178:26:6;;;;;;;;;;;;;;;;;;;;;;;;;;;2825:209:13;;;;;;;;;;-1:-1:-1;;;;;2825:209:13;;;;;;;;;;;;1474:272:0;;;;;;;;;;-1:-1:-1;;;;;1474:272:0;;;;;1463:208:13;;;;;;;;;;;;927:262:9;;;;;;;;;;-1:-1:-1;;;;;927:262:9;;;;;;;2172:82:13;;;;;;;;;;;;2927:398:16;;;;;;;;;;-1:-1:-1;;;;;2927:398:16;;;;;;;1011:107:1;;;;;;;;;;-1:-1:-1;;;;;1011:107:1;;;;;1303:135:9;;;;;;;;;;;;1016:47:13;;;;;;;;;;-1:-1:-1;;;;;1016:47:13;;;;;238:20:10;;;;;;;;;;;;;;;-1:-1:-1;;;;;238:20:10;;;;;;;;;;;;;;819:28:13;;;;;;;;;;;;2642:179;;;;;;;;;;-1:-1:-1;;;;;2642:179:13;;;;;;;667:27;;;;;;;;;;;;2666:257:16;;;;;;;;;;-1:-1:-1;;;;;2666:257:16;;;;;;;2300:126;;;;;;;;;;-1:-1:-1;;;;;2300:126:16;;;;;;;;;;831:169:10;;;;;;;;;;-1:-1:-1;;;;;831:169:10;;;;;2067:273:0;;;;;;;;;;-1:-1:-1;;;;;2067:273:0;;;;;;;1799:137:13;2588:12;;2574:10;-1:-1:-1;;;;;2574:26:13;;;2588:12;;2574:26;2571:56;;2612:8;;;2571:56;2414:8;;1883:5;;-1:-1:-1;;;2414:8:13;;;;2398:24;2395:54;;2434:8;;;2395:54;-1:-1:-1;;;;;;1903:20:13;;;;;;;;:14;:20;;;;;:28;;-1:-1:-1;;1903:28:13;;;;;;;;;;1799:137::o;589:35:9:-;;;;;;:::o;1798:183:16:-;-1:-1:-1;;;;;1885:10:16;1877:19;;1865:4;1877:19;;;:7;:19;;;;;;;;:29;;;;;;;;;;;;;:38;;;1865:4;;1877:29;:19;1921:38;;1909:6;;1921:38;;;;;;;;;;;;;-1:-1:-1;1972:4:16;1798:183;;;;:::o;178:26:6:-;;;;:::o;2825:209:13:-;1188:8;;2923:12;;2900:5;;-1:-1:-1;;;1188:8:13;;;;1187:9;1184:92;;;-1:-1:-1;;;;;1212:23:13;;;;;;:14;:23;;;;;;;;1211:24;1208:62;;;1251:8;;;1208:62;2991:38;3010:5;3017:3;3022:6;2991:18;:38::i;:::-;2984:45;2825:209;-1:-1:-1;;;;;2825:209:13:o;1474:272:0:-;2588:12:13;;1571:11:0;;2574:10:13;-1:-1:-1;;;;;2574:26:13;;;2588:12;;2574:26;2571:56;;2612:8;;;2571:56;2414:8;;1558:5:0;;-1:-1:-1;;;2414:8:13;;;;2398:24;2395:54;;2434:8;;;2395:54;1585:19:0;1595:8;1585:9;:19::i;:::-;-1:-1:-1;;;;;1614:18:0;;1635:1;1614:18;;;:8;:18;;;;;:22;;;1656:11;1571:33;;-1:-1:-1;1656:23:0;;1571:33;1656:23;:15;:23;:::i;:::-;1642:11;:37;1690:51;1712:10;1724:8;1734:6;1690:51;;-1:-1:-1;;;;;1690:51:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2632:1:13;1474:272:0;;:::o;1463:208:13:-;651:5:10;;637:10;-1:-1:-1;;;;;637:19:10;;;651:5;;637:19;629:28;;;;;;2414:8:13;;1515:5;;-1:-1:-1;;;2414:8:13;;;;2398:24;2395:54;;2434:8;;;2395:54;-1:-1:-1;1661:5:13;;1646:12;:20;;-1:-1:-1;;1646:20:13;-1:-1:-1;;;;;1661:5:13;;;1646:20;;;;;;1463:208::o;927:262:9:-;651:5:10;;1005:4:9;;637:10:10;-1:-1:-1;;;;;637:19:10;;;651:5;;637:19;629:28;;;;;;663:15:9;;;;662:16;654:25;;;;;;1031:11;;:24;;1047:7;1031:24;:15;:24;:::i;:::-;1017:11;:38;;;-1:-1:-1;;;;;1077:13:9;;;;:8;:13;;;;;;:26;;1095:7;1077:26;:17;:26;:::i;:::-;-1:-1:-1;;;;;1061:13:9;;;;;;:8;:13;;;;;;;:42;;;;:13;1109:18;;1119:7;;1109:18;;;;;;;;;;;;;-1:-1:-1;;;;;1133:34:9;;1150:1;1133:34;1159:7;1133:34;;;;;;;;;;;;;;-1:-1:-1;1180:4:9;927:262;;;;:::o;2172:82:13:-;2588:12;;2574:10;-1:-1:-1;;;;;2574:26:13;;;2588:12;;2574:26;2571:56;;2612:8;;;2571:56;2234:8;:15;;-1:-1:-1;;2234:15:13;-1:-1:-1;;;2234:15:13;;;2172:82::o;2927:398:16:-;-1:-1:-1;;;;;3046:10:16;3038:19;;3010:4;3038:19;;;:7;:19;;;;;;;;:29;;;;;;;;;;;;3077:27;;;3073:164;;;-1:-1:-1;;;;;3122:10:16;3114:19;;3146:1;3114:19;;;:7;:19;;;;;;;;:29;;;;;;;;;;;:33;3073:164;;;3200:30;:8;3213:16;3200:30;:12;:30;:::i;:::-;-1:-1:-1;;;;;3176:10:16;3168:19;;;;;;:7;:19;;;;;;;;:29;;;;;;;;;:62;3073:164;-1:-1:-1;;;;;3251:10:16;3242:61;;3273:19;;;;:7;:19;;;;;;;;3242:61;;;3273:29;;;;;;;;;;;;3242:61;;;;;;;;;;;;;;;-1:-1:-1;3316:4:16;;2927:398;-1:-1:-1;;;2927:398:16:o;1011:107:1:-;-1:-1:-1;;;;;1097:16:1;1067:15;1097:16;;;:8;:16;;;;;;;1011:107::o;1303:135:9:-;651:5:10;;1362:4:9;;637:10:10;-1:-1:-1;;;;;637:19:10;;;651:5;;637:19;629:28;;;;;;663:15:9;;;;662:16;654:25;;;;;;1374:15;:22;;-1:-1:-1;;1374:22:9;1392:4;1374:22;;;1402:14;;;;;;;;;;-1:-1:-1;1429:4:9;1303:135;:::o;1016:47:13:-;;;;;;;;;;;;;;;:::o;238:20:10:-;;;-1:-1:-1;;;;;238:20:10;;:::o;819:28:13:-;;;-1:-1:-1;;;819:28:13;;;;;:::o;2642:179::-;1188:8;;2726:12;;2698:10;;-1:-1:-1;;;1188:8:13;;;;1187:9;1184:92;;;-1:-1:-1;;;;;1212:23:13;;;;;;:14;:23;;;;;;;;1211:24;1208:62;;;1251:8;;;1208:62;2789:27;2804:3;2809:6;2789:14;:27::i;:::-;2782:34;2642:179;-1:-1:-1;;;;2642:179:13:o;667:27::-;;;-1:-1:-1;;;;;667:27:13;;:::o;2666:257:16:-;-1:-1:-1;;;;;2796:10:16;2788:19;;2744:4;2788:19;;;:7;:19;;;;;;;;:29;;;;;;;;;;;;:46;;2822:11;2788:46;:33;:46;:::i;:::-;-1:-1:-1;;;;;2764:10:16;2756:19;;;;;;:7;:19;;;;;;;;:29;;;;;;;;;;;;;;:78;;;:29;;:19;;2840:61;;2756:78;2840:61;;;;;;;;;;;;;-1:-1:-1;2914:4:16;2666:257;;;;:::o;2300:126::-;-1:-1:-1;;;;;2396:15:16;;;2374:7;2396:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;2300:126::o;831:169:10:-;651:5;;637:10;-1:-1:-1;;;;;637:19:10;;;651:5;;637:19;629:28;;;;;;-1:-1:-1;;;;;907:22:10;;;;899:31;;;;;;957:5;;-1:-1:-1;;;;;936:37:10;;;;957:5;936:37;;;;;;;;;;979:5;:16;;-1:-1:-1;;979:16:10;-1:-1:-1;;;;;979:16:10;;;;;;;;;;831:169::o;2067:273:0:-;2588:12:13;;2574:10;-1:-1:-1;;;;;2574:26:13;;;2588:12;;2574:26;2571:56;;2612:8;;;2571:56;2414:8;;2164:5:0;;-1:-1:-1;;;2414:8:13;;;;2398:24;2395:54;;2434:8;;;2395:54;-1:-1:-1;;;;;2205:18:0;;;;;;:8;:18;;;;;;:30;;2228:6;2205:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;2184:18:0;;;;;;:8;:18;;;;;:51;;;;2255:11;:23;;2271:6;2255:23;:15;:23;:::i;:::-;2241:11;:37;2289:46;2306:10;2318:8;2328:6;2289:46;;-1:-1:-1;;;;;2289:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2632:1:13;2067:273:0;;:::o;736:439:16:-;818:4;-1:-1:-1;;;;;838:17:16;;;;830:26;;;;;;-1:-1:-1;;;;;880:15:16;;;;;;:8;:15;;;;;;870:25;;;862:34;;;;;;-1:-1:-1;;;;;920:14:16;;;;;;;:7;:14;;;;;;;;935:10;920:26;;;;;;;;;;910:36;;;902:45;;;;;;-1:-1:-1;;;;;972:15:16;;;;;;:8;:15;;;;;;:27;;992:6;972:27;:19;:27;:::i;:::-;-1:-1:-1;;;;;954:15:16;;;;;;;:8;:15;;;;;;:45;;;;1021:13;;;;;;;:25;;1039:6;1021:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;1005:13:16;;;;;;;:8;:13;;;;;;;;:41;;;;1081:14;;;;;:7;:14;;;;;1096:10;1081:26;;;;;;;;;;;:38;;1112:6;1081:38;:30;:38;:::i;:::-;-1:-1:-1;;;;;1052:14:16;;;;;;;:7;:14;;;;;;;;1067:10;1052:26;;;;;;;;;;;:67;;;;1125:28;;;;;;1146:6;;1125:28;;;;;;;;;;;;;-1:-1:-1;1166:4:16;736:439;;;;;:::o;634:120:14:-;692:7;718:6;;;;711:14;;;;-1:-1:-1;742:5:14;;;634:120::o;760:143::-;818:7;849:5;;;871:6;;;;864:14;;;;895:1;760:143;-1:-1:-1;;;760:143:14:o;430:379:1:-;493:4;-1:-1:-1;;;;;513:17:1;;;;505:26;;;;;;-1:-1:-1;;;;;564:10:1;555:20;;;;;:8;:20;;;;;;545:30;;;537:39;;;;;;-1:-1:-1;;;;;678:10:1;669:20;;;;;:8;:20;;;;;;:32;;694:6;669:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;655:10:1;646:20;;;;;;:8;:20;;;;;;:55;;;;723:13;;;;;;;:25;;741:6;723:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;707:13:1;;;;;;;:8;:13;;;;;;;:41;;;;:13;763:10;754:33;;;;;;780:6;;754:33;;;;;;;;;;;;;-1:-1:-1;800:4:1;430:379;;;;:::o",
  "source": "/**\n * This contract has been written by Pickeringware ltd in some areas to facilitate custom crwodsale features\n */\n\npragma solidity 0.4.21;\n\nimport \"./MintableToken.sol\";\n\n\n/**\n * The AML Token\n *\n * This subset of MintableCrowdsaleToken gives the Owner a possibility to\n * reclaim tokens from a participant before the token is released\n * after a participant has failed a prolonged AML process.\n *\n * It is assumed that the anti-money laundering process depends on blockchain data.\n * The data is not available before the transaction and not for the smart contract.\n * Thus, we need to implement logic to handle AML failure cases post payment.\n * We give a time window before the token release for the token sale owners to\n * complete the AML and claw back all token transactions that were\n * caused by rejected purchases.\n */\ncontract AMLToken is MintableToken {\n\n  // An event when the owner has reclaimed non-released tokens\n  event ReclaimedAllAndBurned(address claimedBy, address fromWhom, uint amount);\n\n    // An event when the owner has reclaimed non-released tokens\n  event ReclaimAndBurned(address claimedBy, address fromWhom, uint amount);\n\n  /// @dev Here the owner can reclaim the tokens from a participant if\n  ///      the token is not released yet. Refund will be handled in sale contract.\n  /// We also burn the tokens in the interest of economic value to the token holder\n  /// @param fromWhom address of the participant whose tokens we want to claim\n  function reclaimAllAndBurn(address fromWhom) public onlyReleaseAgent inReleaseState(false) {\n    uint amount = balanceOf(fromWhom);    \n    balances[fromWhom] = 0;\n    totalSupply = totalSupply.sub(amount);\n    \n    ReclaimedAllAndBurned(msg.sender, fromWhom, amount);\n  }\n\n  /// @dev Here the owner can reclaim the tokens from a participant if\n  ///      the token is not released yet. Refund will be handled in sale contract.\n  /// We also burn the tokens in the interest of economic value to the token holder\n  /// @param fromWhom address of the participant whose tokens we want to claim\n  function reclaimAndBurn(address fromWhom, uint256 amount) public onlyReleaseAgent inReleaseState(false) {       \n    balances[fromWhom] = balances[fromWhom].sub(amount);\n    totalSupply = totalSupply.sub(amount);\n    \n    ReclaimAndBurned(msg.sender, fromWhom, amount);\n  }\n}",
  "sourcePath": "/Users/jackpickering/Desktop/Development/AX1 versions/AX1_portal_staging/contracts/AMLToken.sol",
  "ast": {
    "absolutePath": "/Users/jackpickering/Desktop/Development/AX1 versions/AX1_portal_staging/contracts/AMLToken.sol",
    "exportedSymbols": {
      "AMLToken": [
        96
      ]
    },
    "id": 97,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "118:23:0"
      },
      {
        "absolutePath": "/Users/jackpickering/Desktop/Development/AX1 versions/AX1_portal_staging/contracts/MintableToken.sol",
        "file": "./MintableToken.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 97,
        "sourceUnit": 1642,
        "src": "143:29:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "MintableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1641,
              "src": "851:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintableToken_$1641",
                "typeString": "contract MintableToken"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "851:13:0"
          }
        ],
        "contractDependencies": [
          182,
          959,
          988,
          1641,
          1697,
          2624,
          3330
        ],
        "contractKind": "contract",
        "documentation": "The AML Token\n * This subset of MintableCrowdsaleToken gives the Owner a possibility to\nreclaim tokens from a participant before the token is released\nafter a participant has failed a prolonged AML process.\n * It is assumed that the anti-money laundering process depends on blockchain data.\nThe data is not available before the transaction and not for the smart contract.\nThus, we need to implement logic to handle AML failure cases post payment.\nWe give a time window before the token release for the token sale owners to\ncomplete the AML and claw back all token transactions that were\ncaused by rejected purchases.",
        "fullyImplemented": true,
        "id": 96,
        "linearizedBaseContracts": [
          96,
          1641,
          2624,
          1697,
          3330,
          182,
          959,
          988
        ],
        "name": "AMLToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 12,
            "name": "ReclaimedAllAndBurned",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6,
                  "indexed": false,
                  "name": "claimedBy",
                  "nodeType": "VariableDeclaration",
                  "scope": 12,
                  "src": "961:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "961:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8,
                  "indexed": false,
                  "name": "fromWhom",
                  "nodeType": "VariableDeclaration",
                  "scope": 12,
                  "src": "980:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "980:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 12,
                  "src": "998:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "998:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "960:50:0"
            },
            "src": "933:78:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 20,
            "name": "ReclaimAndBurned",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14,
                  "indexed": false,
                  "name": "claimedBy",
                  "nodeType": "VariableDeclaration",
                  "scope": 20,
                  "src": "1103:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1103:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16,
                  "indexed": false,
                  "name": "fromWhom",
                  "nodeType": "VariableDeclaration",
                  "scope": 20,
                  "src": "1122:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1122:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 20,
                  "src": "1140:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1140:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1102:50:0"
            },
            "src": "1080:73:0"
          },
          {
            "body": {
              "id": 56,
              "nodeType": "Block",
              "src": "1565:181:0",
              "statements": [
                {
                  "assignments": [
                    31
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31,
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 57,
                      "src": "1571:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1571:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 35,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 33,
                        "name": "fromWhom",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "1595:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 32,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        181
                      ],
                      "referencedDeclaration": 181,
                      "src": "1585:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 34,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1585:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1571:33:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 36,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109,
                        "src": "1614:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 38,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 37,
                        "name": "fromWhom",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "1623:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1614:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 39,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1635:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1614:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 41,
                  "nodeType": "ExpressionStatement",
                  "src": "1614:22:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 42,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 963,
                      "src": "1642:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 45,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "1672:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 43,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 963,
                          "src": "1656:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 44,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2697,
                        "src": "1656:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 46,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1656:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1642:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48,
                  "nodeType": "ExpressionStatement",
                  "src": "1642:37:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 50,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3390,
                          "src": "1712:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 51,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1712:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 52,
                        "name": "fromWhom",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "1724:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 53,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "1734:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 49,
                      "name": "ReclaimedAllAndBurned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "1690:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1690:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55,
                  "nodeType": "ExpressionStatement",
                  "src": "1690:51:0"
                }
              ]
            },
            "documentation": "@dev Here the owner can reclaim the tokens from a participant if\n      the token is not released yet. Refund will be handled in sale contract.\n We also burn the tokens in the interest of economic value to the token holder\n @param fromWhom address of the participant whose tokens we want to claim",
            "id": 57,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 25,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 24,
                  "name": "onlyReleaseAgent",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2581,
                  "src": "1526:16:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1526:16:0"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 27,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1558:5:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  }
                ],
                "id": 28,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 26,
                  "name": "inReleaseState",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2568,
                  "src": "1543:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bool_$",
                    "typeString": "modifier (bool)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1543:21:0"
              }
            ],
            "name": "reclaimAllAndBurn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22,
                  "name": "fromWhom",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "1501:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1501:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1500:18:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1565:0:0"
            },
            "scope": 96,
            "src": "1474:272:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 94,
              "nodeType": "Block",
              "src": "2171:169:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 69,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109,
                        "src": "2184:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 71,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 70,
                        "name": "fromWhom",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "2193:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2184:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 76,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61,
                          "src": "2228:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 72,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 109,
                            "src": "2205:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 74,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 73,
                            "name": "fromWhom",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59,
                            "src": "2214:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2205:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2697,
                        "src": "2205:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 77,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2205:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2184:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 79,
                  "nodeType": "ExpressionStatement",
                  "src": "2184:51:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 80,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 963,
                      "src": "2241:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 83,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61,
                          "src": "2271:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 81,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 963,
                          "src": "2255:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 82,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2697,
                        "src": "2255:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 84,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2255:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2241:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "2241:37:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 88,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3390,
                          "src": "2306:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 89,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2306:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 90,
                        "name": "fromWhom",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "2318:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 91,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61,
                        "src": "2328:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 87,
                      "name": "ReclaimAndBurned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "2289:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2289:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "2289:46:0"
                }
              ]
            },
            "documentation": "@dev Here the owner can reclaim the tokens from a participant if\n      the token is not released yet. Refund will be handled in sale contract.\n We also burn the tokens in the interest of economic value to the token holder\n @param fromWhom address of the participant whose tokens we want to claim",
            "id": 95,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 64,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 63,
                  "name": "onlyReleaseAgent",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2581,
                  "src": "2132:16:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2132:16:0"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2164:5:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  }
                ],
                "id": 67,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 65,
                  "name": "inReleaseState",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2568,
                  "src": "2149:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bool_$",
                    "typeString": "modifier (bool)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2149:21:0"
              }
            ],
            "name": "reclaimAndBurn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59,
                  "name": "fromWhom",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "2091:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2091:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "2109:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2109:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2090:34:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2171:0:0"
            },
            "scope": 96,
            "src": "2067:273:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 97,
        "src": "830:1512:0"
      }
    ],
    "src": "118:2224:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/jackpickering/Desktop/Development/AX1 versions/AX1_portal_staging/contracts/AMLToken.sol",
    "exportedSymbols": {
      "AMLToken": [
        96
      ]
    },
    "id": 97,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "118:23:0"
      },
      {
        "absolutePath": "/Users/jackpickering/Desktop/Development/AX1 versions/AX1_portal_staging/contracts/MintableToken.sol",
        "file": "./MintableToken.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 97,
        "sourceUnit": 1642,
        "src": "143:29:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "MintableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1641,
              "src": "851:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintableToken_$1641",
                "typeString": "contract MintableToken"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "851:13:0"
          }
        ],
        "contractDependencies": [
          182,
          959,
          988,
          1641,
          1697,
          2624,
          3330
        ],
        "contractKind": "contract",
        "documentation": "The AML Token\n * This subset of MintableCrowdsaleToken gives the Owner a possibility to\nreclaim tokens from a participant before the token is released\nafter a participant has failed a prolonged AML process.\n * It is assumed that the anti-money laundering process depends on blockchain data.\nThe data is not available before the transaction and not for the smart contract.\nThus, we need to implement logic to handle AML failure cases post payment.\nWe give a time window before the token release for the token sale owners to\ncomplete the AML and claw back all token transactions that were\ncaused by rejected purchases.",
        "fullyImplemented": true,
        "id": 96,
        "linearizedBaseContracts": [
          96,
          1641,
          2624,
          1697,
          3330,
          182,
          959,
          988
        ],
        "name": "AMLToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 12,
            "name": "ReclaimedAllAndBurned",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6,
                  "indexed": false,
                  "name": "claimedBy",
                  "nodeType": "VariableDeclaration",
                  "scope": 12,
                  "src": "961:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "961:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8,
                  "indexed": false,
                  "name": "fromWhom",
                  "nodeType": "VariableDeclaration",
                  "scope": 12,
                  "src": "980:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "980:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 12,
                  "src": "998:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "998:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "960:50:0"
            },
            "src": "933:78:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 20,
            "name": "ReclaimAndBurned",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14,
                  "indexed": false,
                  "name": "claimedBy",
                  "nodeType": "VariableDeclaration",
                  "scope": 20,
                  "src": "1103:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1103:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16,
                  "indexed": false,
                  "name": "fromWhom",
                  "nodeType": "VariableDeclaration",
                  "scope": 20,
                  "src": "1122:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1122:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 20,
                  "src": "1140:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1140:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1102:50:0"
            },
            "src": "1080:73:0"
          },
          {
            "body": {
              "id": 56,
              "nodeType": "Block",
              "src": "1565:181:0",
              "statements": [
                {
                  "assignments": [
                    31
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31,
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 57,
                      "src": "1571:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1571:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 35,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 33,
                        "name": "fromWhom",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "1595:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 32,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        181
                      ],
                      "referencedDeclaration": 181,
                      "src": "1585:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 34,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1585:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1571:33:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 36,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109,
                        "src": "1614:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 38,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 37,
                        "name": "fromWhom",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "1623:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1614:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 39,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1635:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1614:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 41,
                  "nodeType": "ExpressionStatement",
                  "src": "1614:22:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 42,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 963,
                      "src": "1642:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 45,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "1672:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 43,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 963,
                          "src": "1656:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 44,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2697,
                        "src": "1656:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 46,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1656:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1642:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48,
                  "nodeType": "ExpressionStatement",
                  "src": "1642:37:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 50,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3390,
                          "src": "1712:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 51,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1712:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 52,
                        "name": "fromWhom",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "1724:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 53,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "1734:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 49,
                      "name": "ReclaimedAllAndBurned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "1690:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1690:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55,
                  "nodeType": "ExpressionStatement",
                  "src": "1690:51:0"
                }
              ]
            },
            "documentation": "@dev Here the owner can reclaim the tokens from a participant if\n      the token is not released yet. Refund will be handled in sale contract.\n We also burn the tokens in the interest of economic value to the token holder\n @param fromWhom address of the participant whose tokens we want to claim",
            "id": 57,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 25,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 24,
                  "name": "onlyReleaseAgent",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2581,
                  "src": "1526:16:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1526:16:0"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 27,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1558:5:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  }
                ],
                "id": 28,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 26,
                  "name": "inReleaseState",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2568,
                  "src": "1543:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bool_$",
                    "typeString": "modifier (bool)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1543:21:0"
              }
            ],
            "name": "reclaimAllAndBurn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22,
                  "name": "fromWhom",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "1501:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1501:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1500:18:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1565:0:0"
            },
            "scope": 96,
            "src": "1474:272:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 94,
              "nodeType": "Block",
              "src": "2171:169:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 69,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109,
                        "src": "2184:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 71,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 70,
                        "name": "fromWhom",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "2193:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2184:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 76,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61,
                          "src": "2228:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 72,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 109,
                            "src": "2205:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 74,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 73,
                            "name": "fromWhom",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59,
                            "src": "2214:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2205:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2697,
                        "src": "2205:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 77,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2205:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2184:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 79,
                  "nodeType": "ExpressionStatement",
                  "src": "2184:51:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 80,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 963,
                      "src": "2241:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 83,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61,
                          "src": "2271:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 81,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 963,
                          "src": "2255:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 82,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2697,
                        "src": "2255:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 84,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2255:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2241:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "2241:37:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 88,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3390,
                          "src": "2306:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 89,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2306:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 90,
                        "name": "fromWhom",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "2318:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 91,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61,
                        "src": "2328:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 87,
                      "name": "ReclaimAndBurned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "2289:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2289:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "2289:46:0"
                }
              ]
            },
            "documentation": "@dev Here the owner can reclaim the tokens from a participant if\n      the token is not released yet. Refund will be handled in sale contract.\n We also burn the tokens in the interest of economic value to the token holder\n @param fromWhom address of the participant whose tokens we want to claim",
            "id": 95,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 64,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 63,
                  "name": "onlyReleaseAgent",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2581,
                  "src": "2132:16:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2132:16:0"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2164:5:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  }
                ],
                "id": 67,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 65,
                  "name": "inReleaseState",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2568,
                  "src": "2149:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bool_$",
                    "typeString": "modifier (bool)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2149:21:0"
              }
            ],
            "name": "reclaimAndBurn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59,
                  "name": "fromWhom",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "2091:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2091:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "2109:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2109:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2090:34:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2171:0:0"
            },
            "scope": 96,
            "src": "2067:273:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 97,
        "src": "830:1512:0"
      }
    ],
    "src": "118:2224:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.21+commit.dfe3193c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-04-04T17:00:34.212Z"
}