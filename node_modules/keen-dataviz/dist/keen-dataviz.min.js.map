{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./lib/utils/each.js","webpack:///./lib/utils/escape-html.js","webpack:///./lib/utils/extend.js","webpack:///./node_modules/d3/dist/package.js","webpack:///./node_modules/d3-array/src/ascending.js","webpack:///./node_modules/d3-array/src/bisector.js","webpack:///./node_modules/d3-array/src/bisect.js","webpack:///./node_modules/d3-array/src/pairs.js","webpack:///./node_modules/d3-array/src/cross.js","webpack:///./node_modules/d3-array/src/descending.js","webpack:///./node_modules/d3-array/src/number.js","webpack:///./node_modules/d3-array/src/variance.js","webpack:///./node_modules/d3-array/src/deviation.js","webpack:///./node_modules/d3-array/src/extent.js","webpack:///./node_modules/d3-array/src/array.js","webpack:///./node_modules/d3-array/src/constant.js","webpack:///./node_modules/d3-array/src/identity.js","webpack:///./node_modules/d3-array/src/range.js","webpack:///./node_modules/d3-array/src/ticks.js","webpack:///./node_modules/d3-array/src/threshold/sturges.js","webpack:///./node_modules/d3-array/src/histogram.js","webpack:///./node_modules/d3-array/src/quantile.js","webpack:///./node_modules/d3-array/src/threshold/freedmanDiaconis.js","webpack:///./node_modules/d3-array/src/threshold/scott.js","webpack:///./node_modules/d3-array/src/max.js","webpack:///./node_modules/d3-array/src/mean.js","webpack:///./node_modules/d3-array/src/median.js","webpack:///./node_modules/d3-array/src/merge.js","webpack:///./node_modules/d3-array/src/min.js","webpack:///./node_modules/d3-array/src/permute.js","webpack:///./node_modules/d3-array/src/scan.js","webpack:///./node_modules/d3-array/src/shuffle.js","webpack:///./node_modules/d3-array/src/sum.js","webpack:///./node_modules/d3-array/src/transpose.js","webpack:///./node_modules/d3-array/src/zip.js","webpack:///./node_modules/d3-axis/src/array.js","webpack:///./node_modules/d3-axis/src/identity.js","webpack:///./node_modules/d3-axis/src/axis.js","webpack:///./node_modules/d3-dispatch/src/dispatch.js","webpack:///./node_modules/d3-selection/src/namespaces.js","webpack:///./node_modules/d3-selection/src/namespace.js","webpack:///./node_modules/d3-selection/src/creator.js","webpack:///./node_modules/d3-selection/src/selector.js","webpack:///./node_modules/d3-selection/src/selectorAll.js","webpack:///./node_modules/d3-selection/src/matcher.js","webpack:///./node_modules/d3-selection/src/selection/sparse.js","webpack:///./node_modules/d3-selection/src/selection/enter.js","webpack:///./node_modules/d3-selection/src/constant.js","webpack:///./node_modules/d3-selection/src/selection/data.js","webpack:///./node_modules/d3-selection/src/selection/sort.js","webpack:///./node_modules/d3-selection/src/selection/attr.js","webpack:///./node_modules/d3-selection/src/window.js","webpack:///./node_modules/d3-selection/src/selection/style.js","webpack:///./node_modules/d3-selection/src/selection/classed.js","webpack:///./node_modules/d3-selection/src/selection/text.js","webpack:///./node_modules/d3-selection/src/selection/html.js","webpack:///./node_modules/d3-selection/src/selection/raise.js","webpack:///./node_modules/d3-selection/src/selection/lower.js","webpack:///./node_modules/d3-selection/src/selection/insert.js","webpack:///./node_modules/d3-selection/src/selection/remove.js","webpack:///./node_modules/d3-selection/src/selection/clone.js","webpack:///./node_modules/d3-selection/src/selection/on.js","webpack:///./node_modules/d3-selection/src/selection/dispatch.js","webpack:///./node_modules/d3-selection/src/selection/index.js","webpack:///./node_modules/d3-selection/src/selection/select.js","webpack:///./node_modules/d3-selection/src/selection/selectAll.js","webpack:///./node_modules/d3-selection/src/selection/filter.js","webpack:///./node_modules/d3-selection/src/selection/exit.js","webpack:///./node_modules/d3-selection/src/selection/merge.js","webpack:///./node_modules/d3-selection/src/selection/order.js","webpack:///./node_modules/d3-selection/src/selection/call.js","webpack:///./node_modules/d3-selection/src/selection/nodes.js","webpack:///./node_modules/d3-selection/src/selection/node.js","webpack:///./node_modules/d3-selection/src/selection/size.js","webpack:///./node_modules/d3-selection/src/selection/empty.js","webpack:///./node_modules/d3-selection/src/selection/each.js","webpack:///./node_modules/d3-selection/src/selection/property.js","webpack:///./node_modules/d3-selection/src/selection/append.js","webpack:///./node_modules/d3-selection/src/selection/datum.js","webpack:///./node_modules/d3-selection/src/select.js","webpack:///./node_modules/d3-selection/src/create.js","webpack:///./node_modules/d3-selection/src/local.js","webpack:///./node_modules/d3-selection/src/sourceEvent.js","webpack:///./node_modules/d3-selection/src/point.js","webpack:///./node_modules/d3-selection/src/mouse.js","webpack:///./node_modules/d3-selection/src/selectAll.js","webpack:///./node_modules/d3-selection/src/touch.js","webpack:///./node_modules/d3-selection/src/touches.js","webpack:///./node_modules/d3-drag/src/noevent.js","webpack:///./node_modules/d3-drag/src/nodrag.js","webpack:///./node_modules/d3-drag/src/constant.js","webpack:///./node_modules/d3-drag/src/event.js","webpack:///./node_modules/d3-drag/src/drag.js","webpack:///./node_modules/d3-color/src/define.js","webpack:///./node_modules/d3-color/src/color.js","webpack:///./node_modules/d3-color/src/math.js","webpack:///./node_modules/d3-color/src/lab.js","webpack:///./node_modules/d3-color/src/cubehelix.js","webpack:///./node_modules/d3-interpolate/src/basis.js","webpack:///./node_modules/d3-interpolate/src/basisClosed.js","webpack:///./node_modules/d3-interpolate/src/constant.js","webpack:///./node_modules/d3-interpolate/src/color.js","webpack:///./node_modules/d3-interpolate/src/rgb.js","webpack:///./node_modules/d3-interpolate/src/array.js","webpack:///./node_modules/d3-interpolate/src/date.js","webpack:///./node_modules/d3-interpolate/src/number.js","webpack:///./node_modules/d3-interpolate/src/object.js","webpack:///./node_modules/d3-interpolate/src/string.js","webpack:///./node_modules/d3-interpolate/src/transform/parse.js","webpack:///./node_modules/d3-interpolate/src/value.js","webpack:///./node_modules/d3-interpolate/src/round.js","webpack:///./node_modules/d3-interpolate/src/transform/decompose.js","webpack:///./node_modules/d3-interpolate/src/transform/index.js","webpack:///./node_modules/d3-interpolate/src/zoom.js","webpack:///./node_modules/d3-interpolate/src/hsl.js","webpack:///./node_modules/d3-interpolate/src/lab.js","webpack:///./node_modules/d3-interpolate/src/hcl.js","webpack:///./node_modules/d3-interpolate/src/cubehelix.js","webpack:///./node_modules/d3-interpolate/src/piecewise.js","webpack:///./node_modules/d3-interpolate/src/quantize.js","webpack:///./node_modules/d3-timer/src/timer.js","webpack:///./node_modules/d3-timer/src/timeout.js","webpack:///./node_modules/d3-timer/src/interval.js","webpack:///./node_modules/d3-transition/src/transition/schedule.js","webpack:///./node_modules/d3-transition/src/interrupt.js","webpack:///./node_modules/d3-transition/src/transition/tween.js","webpack:///./node_modules/d3-transition/src/transition/interpolate.js","webpack:///./node_modules/d3-transition/src/transition/remove.js","webpack:///./node_modules/d3-transition/src/transition/selection.js","webpack:///./node_modules/d3-transition/src/transition/text.js","webpack:///./node_modules/d3-transition/src/transition/index.js","webpack:///./node_modules/d3-ease/src/linear.js","webpack:///./node_modules/d3-ease/src/quad.js","webpack:///./node_modules/d3-ease/src/cubic.js","webpack:///./node_modules/d3-transition/src/transition/select.js","webpack:///./node_modules/d3-transition/src/transition/selectAll.js","webpack:///./node_modules/d3-transition/src/transition/filter.js","webpack:///./node_modules/d3-transition/src/transition/merge.js","webpack:///./node_modules/d3-transition/src/transition/transition.js","webpack:///./node_modules/d3-transition/src/transition/on.js","webpack:///./node_modules/d3-transition/src/transition/attr.js","webpack:///./node_modules/d3-transition/src/transition/attrTween.js","webpack:///./node_modules/d3-transition/src/transition/style.js","webpack:///./node_modules/d3-transition/src/transition/styleTween.js","webpack:///./node_modules/d3-transition/src/transition/delay.js","webpack:///./node_modules/d3-transition/src/transition/duration.js","webpack:///./node_modules/d3-transition/src/transition/ease.js","webpack:///./node_modules/d3-ease/src/poly.js","webpack:///./node_modules/d3-ease/src/sin.js","webpack:///./node_modules/d3-ease/src/exp.js","webpack:///./node_modules/d3-ease/src/circle.js","webpack:///./node_modules/d3-ease/src/bounce.js","webpack:///./node_modules/d3-ease/src/back.js","webpack:///./node_modules/d3-ease/src/elastic.js","webpack:///./node_modules/d3-transition/src/selection/transition.js","webpack:///./node_modules/d3-transition/src/selection/index.js","webpack:///./node_modules/d3-transition/src/selection/interrupt.js","webpack:///./node_modules/d3-transition/src/active.js","webpack:///./node_modules/d3-brush/src/constant.js","webpack:///./node_modules/d3-brush/src/event.js","webpack:///./node_modules/d3-brush/src/noevent.js","webpack:///./node_modules/d3-brush/src/brush.js","webpack:///./node_modules/d3-chord/src/math.js","webpack:///./node_modules/d3-chord/src/chord.js","webpack:///./node_modules/d3-chord/src/array.js","webpack:///./node_modules/d3-chord/src/constant.js","webpack:///./node_modules/d3-path/src/path.js","webpack:///./node_modules/d3-chord/src/ribbon.js","webpack:///./node_modules/d3-collection/src/map.js","webpack:///./node_modules/d3-collection/src/nest.js","webpack:///./node_modules/d3-collection/src/set.js","webpack:///./node_modules/d3-collection/src/keys.js","webpack:///./node_modules/d3-collection/src/values.js","webpack:///./node_modules/d3-collection/src/entries.js","webpack:///./node_modules/d3-contour/src/array.js","webpack:///./node_modules/d3-contour/src/ascending.js","webpack:///./node_modules/d3-contour/src/area.js","webpack:///./node_modules/d3-contour/src/constant.js","webpack:///./node_modules/d3-contour/src/contains.js","webpack:///./node_modules/d3-contour/src/noop.js","webpack:///./node_modules/d3-contour/src/contours.js","webpack:///./node_modules/d3-contour/src/blur.js","webpack:///./node_modules/d3-contour/src/density.js","webpack:///./node_modules/d3-dsv/src/dsv.js","webpack:///./node_modules/d3-dsv/src/csv.js","webpack:///./node_modules/d3-dsv/src/tsv.js","webpack:///./node_modules/d3-fetch/src/blob.js","webpack:///./node_modules/d3-fetch/src/buffer.js","webpack:///./node_modules/d3-fetch/src/text.js","webpack:///./node_modules/d3-fetch/src/dsv.js","webpack:///./node_modules/d3-fetch/src/image.js","webpack:///./node_modules/d3-fetch/src/json.js","webpack:///./node_modules/d3-fetch/src/xml.js","webpack:///./node_modules/d3-force/src/center.js","webpack:///./node_modules/d3-force/src/constant.js","webpack:///./node_modules/d3-force/src/jiggle.js","webpack:///./node_modules/d3-quadtree/src/add.js","webpack:///./node_modules/d3-quadtree/src/cover.js","webpack:///./node_modules/d3-quadtree/src/quad.js","webpack:///./node_modules/d3-quadtree/src/x.js","webpack:///./node_modules/d3-quadtree/src/y.js","webpack:///./node_modules/d3-quadtree/src/quadtree.js","webpack:///./node_modules/d3-force/src/collide.js","webpack:///./node_modules/d3-quadtree/src/data.js","webpack:///./node_modules/d3-quadtree/src/extent.js","webpack:///./node_modules/d3-quadtree/src/find.js","webpack:///./node_modules/d3-quadtree/src/remove.js","webpack:///./node_modules/d3-quadtree/src/root.js","webpack:///./node_modules/d3-quadtree/src/size.js","webpack:///./node_modules/d3-quadtree/src/visit.js","webpack:///./node_modules/d3-quadtree/src/visitAfter.js","webpack:///./node_modules/d3-force/src/link.js","webpack:///./node_modules/d3-force/src/simulation.js","webpack:///./node_modules/d3-force/src/manyBody.js","webpack:///./node_modules/d3-force/src/radial.js","webpack:///./node_modules/d3-force/src/x.js","webpack:///./node_modules/d3-force/src/y.js","webpack:///./node_modules/d3-format/src/formatDecimal.js","webpack:///./node_modules/d3-format/src/exponent.js","webpack:///./node_modules/d3-format/src/formatSpecifier.js","webpack:///./node_modules/d3-format/src/formatTrim.js","webpack:///./node_modules/d3-format/src/formatPrefixAuto.js","webpack:///./node_modules/d3-format/src/defaultLocale.js","webpack:///./node_modules/d3-format/src/formatRounded.js","webpack:///./node_modules/d3-format/src/formatTypes.js","webpack:///./node_modules/d3-format/src/identity.js","webpack:///./node_modules/d3-format/src/locale.js","webpack:///./node_modules/d3-format/src/formatGroup.js","webpack:///./node_modules/d3-format/src/formatNumerals.js","webpack:///./node_modules/d3-format/src/precisionFixed.js","webpack:///./node_modules/d3-format/src/precisionPrefix.js","webpack:///./node_modules/d3-format/src/precisionRound.js","webpack:///./node_modules/d3-geo/src/adder.js","webpack:///./node_modules/d3-geo/src/math.js","webpack:///./node_modules/d3-geo/src/noop.js","webpack:///./node_modules/d3-geo/src/stream.js","webpack:///./node_modules/d3-geo/src/area.js","webpack:///./node_modules/d3-geo/src/cartesian.js","webpack:///./node_modules/d3-geo/src/bounds.js","webpack:///./node_modules/d3-geo/src/centroid.js","webpack:///./node_modules/d3-geo/src/constant.js","webpack:///./node_modules/d3-geo/src/compose.js","webpack:///./node_modules/d3-geo/src/rotation.js","webpack:///./node_modules/d3-geo/src/circle.js","webpack:///./node_modules/d3-geo/src/clip/buffer.js","webpack:///./node_modules/d3-geo/src/pointEqual.js","webpack:///./node_modules/d3-geo/src/clip/rejoin.js","webpack:///./node_modules/d3-geo/src/polygonContains.js","webpack:///./node_modules/d3-geo/src/clip/index.js","webpack:///./node_modules/d3-geo/src/clip/antimeridian.js","webpack:///./node_modules/d3-geo/src/clip/circle.js","webpack:///./node_modules/d3-geo/src/clip/line.js","webpack:///./node_modules/d3-geo/src/clip/rectangle.js","webpack:///./node_modules/d3-geo/src/clip/extent.js","webpack:///./node_modules/d3-geo/src/length.js","webpack:///./node_modules/d3-geo/src/distance.js","webpack:///./node_modules/d3-geo/src/contains.js","webpack:///./node_modules/d3-geo/src/graticule.js","webpack:///./node_modules/d3-geo/src/interpolate.js","webpack:///./node_modules/d3-geo/src/path/area.js","webpack:///./node_modules/d3-geo/src/identity.js","webpack:///./node_modules/d3-geo/src/path/bounds.js","webpack:///./node_modules/d3-geo/src/path/centroid.js","webpack:///./node_modules/d3-geo/src/path/context.js","webpack:///./node_modules/d3-geo/src/path/measure.js","webpack:///./node_modules/d3-geo/src/path/string.js","webpack:///./node_modules/d3-geo/src/path/index.js","webpack:///./node_modules/d3-geo/src/transform.js","webpack:///./node_modules/d3-geo/src/projection/fit.js","webpack:///./node_modules/d3-geo/src/projection/resample.js","webpack:///./node_modules/d3-geo/src/projection/index.js","webpack:///./node_modules/d3-geo/src/projection/conic.js","webpack:///./node_modules/d3-geo/src/projection/conicEqualArea.js","webpack:///./node_modules/d3-geo/src/projection/cylindricalEqualArea.js","webpack:///./node_modules/d3-geo/src/projection/albers.js","webpack:///./node_modules/d3-geo/src/projection/albersUsa.js","webpack:///./node_modules/d3-geo/src/projection/azimuthal.js","webpack:///./node_modules/d3-geo/src/projection/azimuthalEqualArea.js","webpack:///./node_modules/d3-geo/src/projection/azimuthalEquidistant.js","webpack:///./node_modules/d3-geo/src/projection/mercator.js","webpack:///./node_modules/d3-geo/src/projection/conicConformal.js","webpack:///./node_modules/d3-geo/src/projection/equirectangular.js","webpack:///./node_modules/d3-geo/src/projection/conicEquidistant.js","webpack:///./node_modules/d3-geo/src/projection/gnomonic.js","webpack:///./node_modules/d3-geo/src/projection/identity.js","webpack:///./node_modules/d3-geo/src/projection/naturalEarth1.js","webpack:///./node_modules/d3-geo/src/projection/orthographic.js","webpack:///./node_modules/d3-geo/src/projection/stereographic.js","webpack:///./node_modules/d3-geo/src/projection/transverseMercator.js","webpack:///./node_modules/d3-hierarchy/src/cluster.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/count.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/index.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/each.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/sum.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/sort.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/path.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/ancestors.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/descendants.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/leaves.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/links.js","webpack:///./node_modules/d3-hierarchy/src/array.js","webpack:///./node_modules/d3-hierarchy/src/pack/enclose.js","webpack:///./node_modules/d3-hierarchy/src/pack/siblings.js","webpack:///./node_modules/d3-hierarchy/src/accessors.js","webpack:///./node_modules/d3-hierarchy/src/constant.js","webpack:///./node_modules/d3-hierarchy/src/pack/index.js","webpack:///./node_modules/d3-hierarchy/src/treemap/round.js","webpack:///./node_modules/d3-hierarchy/src/treemap/dice.js","webpack:///./node_modules/d3-hierarchy/src/partition.js","webpack:///./node_modules/d3-hierarchy/src/stratify.js","webpack:///./node_modules/d3-hierarchy/src/tree.js","webpack:///./node_modules/d3-hierarchy/src/treemap/slice.js","webpack:///./node_modules/d3-hierarchy/src/treemap/squarify.js","webpack:///./node_modules/d3-hierarchy/src/treemap/index.js","webpack:///./node_modules/d3-hierarchy/src/treemap/binary.js","webpack:///./node_modules/d3-hierarchy/src/treemap/sliceDice.js","webpack:///./node_modules/d3-hierarchy/src/treemap/resquarify.js","webpack:///./node_modules/d3-polygon/src/area.js","webpack:///./node_modules/d3-polygon/src/centroid.js","webpack:///./node_modules/d3-polygon/src/cross.js","webpack:///./node_modules/d3-polygon/src/hull.js","webpack:///./node_modules/d3-polygon/src/contains.js","webpack:///./node_modules/d3-polygon/src/length.js","webpack:///./node_modules/d3-random/src/defaultSource.js","webpack:///./node_modules/d3-random/src/uniform.js","webpack:///./node_modules/d3-random/src/normal.js","webpack:///./node_modules/d3-random/src/logNormal.js","webpack:///./node_modules/d3-random/src/irwinHall.js","webpack:///./node_modules/d3-random/src/bates.js","webpack:///./node_modules/d3-random/src/exponential.js","webpack:///./node_modules/d3-scale/src/array.js","webpack:///./node_modules/d3-scale/src/ordinal.js","webpack:///./node_modules/d3-scale/src/band.js","webpack:///./node_modules/d3-scale/src/constant.js","webpack:///./node_modules/d3-scale/src/number.js","webpack:///./node_modules/d3-scale/src/continuous.js","webpack:///./node_modules/d3-scale/src/tickFormat.js","webpack:///./node_modules/d3-scale/src/linear.js","webpack:///./node_modules/d3-scale/src/identity.js","webpack:///./node_modules/d3-scale/src/nice.js","webpack:///./node_modules/d3-scale/src/log.js","webpack:///./node_modules/d3-scale/src/pow.js","webpack:///./node_modules/d3-scale/src/quantile.js","webpack:///./node_modules/d3-scale/src/quantize.js","webpack:///./node_modules/d3-scale/src/threshold.js","webpack:///./node_modules/d3-time/src/interval.js","webpack:///./node_modules/d3-time/src/millisecond.js","webpack:///./node_modules/d3-time/src/duration.js","webpack:///./node_modules/d3-time/src/second.js","webpack:///./node_modules/d3-time/src/minute.js","webpack:///./node_modules/d3-time/src/hour.js","webpack:///./node_modules/d3-time/src/day.js","webpack:///./node_modules/d3-time/src/week.js","webpack:///./node_modules/d3-time/src/month.js","webpack:///./node_modules/d3-time/src/year.js","webpack:///./node_modules/d3-time/src/utcMinute.js","webpack:///./node_modules/d3-time/src/utcHour.js","webpack:///./node_modules/d3-time/src/utcDay.js","webpack:///./node_modules/d3-time/src/utcWeek.js","webpack:///./node_modules/d3-time/src/utcMonth.js","webpack:///./node_modules/d3-time/src/utcYear.js","webpack:///./node_modules/d3-time-format/src/locale.js","webpack:///./node_modules/d3-time-format/src/defaultLocale.js","webpack:///./node_modules/d3-time-format/src/isoFormat.js","webpack:///./node_modules/d3-time-format/src/isoParse.js","webpack:///./node_modules/d3-scale/src/time.js","webpack:///./node_modules/d3-scale/src/utcTime.js","webpack:///./node_modules/d3-scale/src/sequential.js","webpack:///./node_modules/d3-scale-chromatic/src/colors.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack:///./node_modules/d3-scale-chromatic/src/ramp.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack:///./node_modules/d3-shape/src/constant.js","webpack:///./node_modules/d3-shape/src/math.js","webpack:///./node_modules/d3-shape/src/arc.js","webpack:///./node_modules/d3-shape/src/curve/linear.js","webpack:///./node_modules/d3-shape/src/point.js","webpack:///./node_modules/d3-shape/src/line.js","webpack:///./node_modules/d3-shape/src/area.js","webpack:///./node_modules/d3-shape/src/descending.js","webpack:///./node_modules/d3-shape/src/identity.js","webpack:///./node_modules/d3-shape/src/pie.js","webpack:///./node_modules/d3-shape/src/curve/radial.js","webpack:///./node_modules/d3-shape/src/lineRadial.js","webpack:///./node_modules/d3-shape/src/areaRadial.js","webpack:///./node_modules/d3-shape/src/pointRadial.js","webpack:///./node_modules/d3-shape/src/array.js","webpack:///./node_modules/d3-shape/src/link/index.js","webpack:///./node_modules/d3-shape/src/symbol/circle.js","webpack:///./node_modules/d3-shape/src/symbol/cross.js","webpack:///./node_modules/d3-shape/src/symbol/diamond.js","webpack:///./node_modules/d3-shape/src/symbol/star.js","webpack:///./node_modules/d3-shape/src/symbol/square.js","webpack:///./node_modules/d3-shape/src/symbol/triangle.js","webpack:///./node_modules/d3-shape/src/symbol/wye.js","webpack:///./node_modules/d3-shape/src/symbol.js","webpack:///./node_modules/d3-shape/src/noop.js","webpack:///./node_modules/d3-shape/src/curve/basis.js","webpack:///./node_modules/d3-shape/src/curve/basisClosed.js","webpack:///./node_modules/d3-shape/src/curve/basisOpen.js","webpack:///./node_modules/d3-shape/src/curve/bundle.js","webpack:///./node_modules/d3-shape/src/curve/cardinal.js","webpack:///./node_modules/d3-shape/src/curve/cardinalClosed.js","webpack:///./node_modules/d3-shape/src/curve/cardinalOpen.js","webpack:///./node_modules/d3-shape/src/curve/catmullRom.js","webpack:///./node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack:///./node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack:///./node_modules/d3-shape/src/curve/linearClosed.js","webpack:///./node_modules/d3-shape/src/curve/monotone.js","webpack:///./node_modules/d3-shape/src/curve/natural.js","webpack:///./node_modules/d3-shape/src/curve/step.js","webpack:///./node_modules/d3-shape/src/offset/none.js","webpack:///./node_modules/d3-shape/src/order/none.js","webpack:///./node_modules/d3-shape/src/stack.js","webpack:///./node_modules/d3-shape/src/offset/expand.js","webpack:///./node_modules/d3-shape/src/offset/diverging.js","webpack:///./node_modules/d3-shape/src/offset/silhouette.js","webpack:///./node_modules/d3-shape/src/offset/wiggle.js","webpack:///./node_modules/d3-shape/src/order/ascending.js","webpack:///./node_modules/d3-shape/src/order/descending.js","webpack:///./node_modules/d3-shape/src/order/insideOut.js","webpack:///./node_modules/d3-shape/src/order/reverse.js","webpack:///./node_modules/d3-voronoi/src/constant.js","webpack:///./node_modules/d3-voronoi/src/point.js","webpack:///./node_modules/d3-voronoi/src/RedBlackTree.js","webpack:///./node_modules/d3-voronoi/src/Edge.js","webpack:///./node_modules/d3-voronoi/src/Cell.js","webpack:///./node_modules/d3-voronoi/src/Circle.js","webpack:///./node_modules/d3-voronoi/src/Beach.js","webpack:///./node_modules/d3-voronoi/src/Diagram.js","webpack:///./node_modules/d3-voronoi/src/voronoi.js","webpack:///./node_modules/d3-zoom/src/constant.js","webpack:///./node_modules/d3-zoom/src/transform.js","webpack:///./node_modules/d3-zoom/src/noevent.js","webpack:///./node_modules/d3-zoom/src/zoom.js","webpack:///./node_modules/d3-zoom/src/event.js","webpack:///./lib/utils/assert-date-string.js","webpack:///./lib/dataset/utils/create-null-list.js","webpack:///./lib/dataset/modifiers/append.js","webpack:///./lib/utils/strip-html-tags.js","webpack:///./lib/dataset/utils/analyses.js","webpack:///./lib/dataset/index.js","webpack:///./lib/libraries/default/spinner.js","webpack:///./lib/libraries/default/table.js","webpack:///./lib/utils/pretty-number.js","webpack:///./lib/libraries/default/metric.js","webpack:///./lib/libraries/default/message.js","webpack:///./lib/libraries/c3/extensions/tooltip-contents.js","webpack:///./lib/libraries/c3/extensions/paginating-legend.js","webpack:///./lib/libraries/c3/extensions/default-date-format.js","webpack:///./lib/utils/extend-deep.js","webpack:///./node_modules/c3/c3.js","webpack:///./lib/libraries/index.js","webpack:///./lib/data.js","webpack:///./lib/dataset/utils/object.js","webpack:///./lib/dataset/utils/flatten.js","webpack:///./lib/dataset/utils/parsers.js","webpack:///./lib/dataset/modifiers/update.js","webpack:///./lib/dataset/modifiers/sort.js","webpack:///./lib/dataset/modifiers/select.js","webpack:///./lib/dataset/modifiers/insert.js","webpack:///./lib/dataset/modifiers/filter.js","webpack:///./lib/dataset/modifiers/delete.js","webpack:///./lib/index.js","webpack:///(webpack)/buildin/global.js","webpack:///./lib/browser.js"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","each","cb","Array","length","escapeHtml","string","escape","str","match","matchHtmlRegExp","exec","html","index","lastIndex","charCodeAt","substring","extend","target","arguments","prop","ascending","b","NaN","bisector","compare","f","x","left","lo","hi","mid","right","ascendingBisect","bisectRight","bisectLeft","bisect","pairs","array","pair","cross","values0","values1","reduce","i0","i1","value0","n0","n1","values","descending","number","variance","valueof","delta","mean","sum","isNaN","deviation","v","Math","sqrt","src_extent","min","max","array_array","slice","map","constant","identity","src_range","start","stop","step","ceil","range","e10","e5","e2","ticks","count","reverse","tickIncrement","isFinite","floor","power","log","LN10","error","pow","tickStep","step0","abs","step1","sturges","LN2","src_histogram","domain","threshold","histogram","data","xz","x0","x1","tz","isArray","shift","pop","bin","bins","push","_","thresholds","quantile","freedmanDiaconis","sort","scott","src_max","src_mean","median","numbers","src_merge","arrays","merged","j","src_min","permute","indexes","permutes","scan","xi","xj","shuffle","t","random","src_sum","src_transpose","matrix","transpose_length","transpose","row","zip","array_slice","src_identity","axis_top","axis_right","axis_bottom","axis_left","epsilon","translateX","translateY","y","entering","this","__axis","axis_axis","orient","scale","tickArguments","tickValues","tickFormat","tickSizeInner","tickSizeOuter","tickPadding","k","transform","axis","context","apply","format","spacing","range0","range1","position","bandwidth","offset","round","copy","selection","path","selectAll","tick","order","tickExit","exit","tickEnter","enter","append","attr","line","select","text","merge","insert","transition","getAttribute","parentNode","remove","filter","tickSize","axisTop","axisRight","axisBottom","axisLeft","noop","dispatch","Error","Dispatch","type","set","callback","concat","constructor","on","typename","types","T","trim","split","indexOf","that","args","src_dispatch","xhtml","namespaces","svg","xlink","xml","xmlns","namespace","prefix","space","local","creator","fullname","ownerDocument","createElementNS","document","uri","namespaceURI","documentElement","createElement","none","src_selector","selector","querySelector","selectorAll_empty","selectorAll","querySelectorAll","matcher","matches","matcher_element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","src_matcher","sparse","update","EnterNode","parent","datum","_next","_parent","__data__","appendChild","child","insertBefore","next","keyPrefix","bindIndex","group","node","groupLength","dataLength","bindKey","key","keyValue","nodeByKeyValue","keyValues","sort_ascending","src_window","defaultView","styleValue","style","getPropertyValue","getComputedStyle","classArray","classList","ClassList","_node","_names","classedAdd","names","list","add","classedRemove","setAttribute","join","splice","contains","textRemove","textContent","htmlRemove","innerHTML","raise","nextSibling","lower","previousSibling","firstChild","constantNull","removeChild","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","on_event","mouseenter","mouseleave","filterContextListener","listener","contextListener","event","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","__on","removeEventListener","capture","onAdd","wrap","addEventListener","customEvent","sourceEvent","dispatchEvent","params","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","selection_root","Selection","groups","parents","_groups","_parents","selection_selection","subgroups","subnode","subgroup","size","bind","enterGroup","updateGroup","previous","_enter","_exit","groups0","groups1","m0","m1","merges","group0","group1","compareNode","sortgroups","sortgroup","nodes","empty","getAttributeNS","removeAttributeNS","removeAttribute","setAttributeNS","priority","removeProperty","setProperty","classed","create","before","clone","deep","typenames","on_parseTypenames","src_selection","src_select","src_create","nextId","Local","toString","id","source","current","src_point","ownerSVGElement","createSVGPoint","point","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","top","clientTop","mouse","changedTouches","src_selectAll","src_touch","touches","identifier","touch","src_touches","points","nopropagation","stopImmediatePropagation","noevent","preventDefault","nodrag","view","__noselect","MozUserSelect","yesdrag","noclick","setTimeout","d3_drag_src_constant","DragEvent","subject","active","dx","dy","defaultFilter","button","defaultContainer","defaultSubject","defaultTouchable","src_drag","mousedownx","mousedowny","mousemoving","touchending","container","touchable","gestures","listeners","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mousemoved","mouseupped","clearTimeout","sublisteners","p0","clickDistance","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","RegExp","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color_color","toLowerCase","Rgb","parseInt","rgbn","rgba","hsla","g","rgbConvert","rgb","opacity","color_rgb","hex","h","Hsl","hsl","hslConvert","hsl2rgb","m2","displayable","brighter","darker","deg2rad","PI","rad2deg","Xn","Yn","Zn","lab_t0","lab_t1","lab_t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","lch","hcl","C","cubehelix_D","cubehelix_E","ED","EB","BC_DA","cubehelix_cubehelix","Cubehelix","bl","cubehelixConvert","basis","t1","v0","v1","v2","v3","t2","cosh","sinh","src_basis","basisClosed","d3_interpolate_src_constant","linear","color_hue","gamma","nogamma","exponential","rgbGamma","color","end","rgbSpline","spline","colors","rgbBasis","rgbBasisClosed","src_array","nb","na","src_value","src_date","Date","setTime","src_number","src_object","reA","reB","cssNode","cssRoot","cssView","svgNode","src_string","am","bm","bs","bi","q","one","string_zero","src_rgb","valueOf","src_round","degrees","decompose_identity","rotate","skewX","scaleX","scaleY","decompose","e","atan","interpolateTransform","parse","pxComma","pxParen","degParen","xa","ya","xb","yb","translate","interpolateTransformCss","interpolateTransformSvg","baseVal","consolidate","rho","SQRT2","zoom_cosh","exp","src_zoom","p1","S","ux0","uy0","w0","ux1","uy1","w1","d2","d1","b0","b1","r0","r1","coshr0","u","zoom_sinh","duration","hsl_hsl","hue","src_hsl","hslLong","lab_lab","hcl_hcl","src_hcl","hclLong","src_cubehelix_cubehelix","cubehelixGamma","cubehelix","src_cubehelix","cubehelixLong","piecewise_piecewise","interpolate","I","taskHead","taskTail","quantize","interpolator","samples","timer_frame","timeout","timer_interval","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","now","setFrame","requestAnimationFrame","clearNow","Timer","_call","_time","timer","delay","time","restart","timerFlush","wake","t0","Infinity","sleep","nap","poke","clearInterval","setInterval","TypeError","src_timeout","elapsed","src_interval","total","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","self","tween","state","ease","schedule_create","schedule_init","schedule","schedule_get","schedule_set","interrupt","tweenValue","_id","transition_interpolate","selection_Selection","transition_id","Transition","_name","src_transition_transition","newId","selection_prototype","linear_linear","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","children","inherit","id0","id1","on0","on1","sit","every","on_start","onFunction","attrTween","value00","value10","interpolate0","value1","_value","styleTween","style_styleRemove","styleRemoveEnd","style_styleFunction","style_styleConstant","text_textFunction","text_textConstant","tween0","tween1","easeConstant","polyIn","custom","exponent","polyOut","polyInOut","pi","halfPi","sinIn","sinOut","sinInOut","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","bounce_b1","b2","b3","b4","b5","b6","b7","b8","b9","bounce_b0","bounceIn","bounceOut","bounceInOut","backIn","overshoot","backOut","backInOut","tau","elasticIn","asin","amplitude","period","elasticOut","elasticInOut","defaultTiming","transition_inherit","active_root","src_active","d3_brush_src_constant","src_event","noevent_nopropagation","src_noevent","MODE_DRAG","MODE_SPACE","MODE_HANDLE","MODE_CENTER","brush_X","handles","brush_type","input","output","xy","brush_Y","XY","cursors","overlay","w","nw","ne","se","sw","flipX","flipY","signsX","signsY","brush_defaultFilter","defaultExtent","width","height","brush_local","__brush","brush_empty","extent","brushSelection","dim","brushX","brush_brush","brushY","brush","handleSize","initialize","handle","redraw","started","emitter","Emitter","e0","e1","s0","s1","moving","lockX","lockY","mode","metaKey","altKey","signX","signY","W","N","E","shifting","shiftKey","point0","emit","moved","ended","keyCode","move","point1","selection0","selection1","starting","math_pi","math_halfPi","math_tau","math_max","src_chord","padAngle","sortGroups","sortSubgroups","sortChords","chord","groupSums","groupIndex","subgroupIndex","chords","forEach","di","dj","a0","a1","subindex","startAngle","endAngle","src_array_slice","d3_chord_src_constant","path_pi","path_tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","path_path","moveTo","closePath","lineTo","quadraticCurveTo","y1","bezierCurveTo","x2","y2","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","ccw","cw","da","src_path","defaultSource","defaultTarget","defaultRadius","radius","defaultStartAngle","defaultEndAngle","src_ribbon","ribbon","buffer","argv","sr","sa0","sa1","sx0","sy0","tr","ta0","ta1","Map","map_map","has","clear","keys","entries","src_map","src_nest","sortValues","rollup","nest","sortKeys","depth","createResult","setResult","valuesByKey","result","createObject","setObject","createMap","setMap","sortKey","Set","proto","set_set","src_set","src_keys","src_values","src_entries","d3_contour_src_array_slice","src_ascending","src_area","ring","area","d3_contour_src_constant","hole","ringContains","yi","pj","yj","segmentContains","collinear","src_noop","cases","src_contours","smooth","smoothLinear","contours","contour","polygons","holes","fragmentByStart","fragmentByEnd","stitch","startIndex","endIndex","unshift","isorings","polygon","coordinates","xt","yt","_0","_1","blurX","blurY","defaultX","defaultY","src_density","density","Float32Array","geometry","transformPolygon","transformRing","transformPoint","resize","cellSize","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","columns","Function","JSON","stringify","dsv","delimiter","reFormat","DELIMITER","parseRows","rows","eof","eol","token","replace","formatRow","formatValue","test","convert","customConverter","columnSet","column","inferColumns","formatRows","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","responseBlob","response","ok","status","statusText","blob","init","fetch","then","responseArrayBuffer","arrayBuffer","src_buffer","responseText","src_text","dsvParse","undefined","dsv_dsv","dsv_csv","dsv_tsv","src_image","Promise","resolve","reject","image","Image","onerror","onload","src","responseJson","json","parser","DOMParser","parseFromString","xml_html","src_center","force","sx","sy","d3_force_src_constant","jiggle","add_add","tree","xm","ym","xp","yp","bottom","_root","leaf","_x","_y","src_quad","x_defaultX","y_defaultY","quadtree","Quadtree","addAll","leaf_copy","treeProto","collide_x","vx","collide_y","vy","cover","yz","visit","find","x3","y3","quads","retainer","removeAll","visitAfter","collide","radii","strength","iterations","ri","ri2","prepare","quad","rj","link_index","link_find","nodeById","nodeId","links","strengths","distances","bias","link","distance","alpha","initializeStrength","initializeDistance","simulation_x","simulation_y","initialRadius","initialAngle","src_simulation","simulation","alphaMin","alphaDecay","alphaTarget","velocityDecay","forces","stepper","fx","fy","initializeNodes","angle","initializeForce","closest","distanceMin2","distanceMax2","theta2","accumulate","weight","distanceMin","distanceMax","theta","radial","radiuses","d3_force_src_x","d3_force_src_y","formatDecimal","toExponential","coefficient","src_exponent","re","formatSpecifier","specifier","FormatSpecifier","fill","align","sign","symbol","zero","comma","precision","prefixExponent","defaultLocale_locale","defaultLocale_format","defaultLocale_formatPrefix","formatTrim","out","formatRounded","formatTypes","%","toFixed","toPrecision","X","toUpperCase","d3_format_src_identity","prefixes","src_locale","locale","grouping","thousands","currency","decimal","numerals","formatNumerals","percent","newFormat","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","padding","formatPrefix","defaultLocale","precisionFixed","precisionPrefix","precisionRound","adder","Adder","reset","adder_add","temp","bv","av","math_epsilon","src_math_pi","src_math_halfPi","quarterPi","src_math_tau","math_degrees","radians","math_cos","math_sin","math_sign","haversin","noop_noop","streamGeometry","stream","streamGeometryType","streamObjectType","Feature","FeatureCollection","features","Sphere","sphere","Point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","area_lambda00","phi00","area_lambda0","area_cosPhi0","area_sinPhi0","src_stream","areaRingSum","areaSum","areaStream","areaRingStart","areaRingEnd","areaRing","areaPointFirst","areaPoint","lambda","phi","dLambda","sdLambda","adLambda","cosPhi","sinPhi","d3_geo_src_area","cartesian_spherical","cartesian","cartesian_cartesian","spherical","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","bounds_lambda0","bounds_phi0","bounds_lambda1","bounds_phi1","bounds_lambda2","bounds_lambda00","bounds_phi00","bounds_p0","ranges","bounds_range","deltaSum","boundsStream","boundsPoint","boundsLineStart","boundsLineEnd","boundsRingPoint","boundsRingStart","boundsRingEnd","bounds_linePoint","normal","inflection","phii","lambdai","antimeridian","bounds_angle","lambda0","lambda1","rangeCompare","rangeContains","W0","W1","centroid_X0","centroid_Y0","Z0","centroid_X1","centroid_Y1","Z1","X2","Y2","Z2","centroid_lambda00","centroid_phi00","centroid_x0","centroid_y0","z0","bounds","feature","deltaMax","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroidPointCartesian","centroidLinePointFirst","centroidLinePoint","centroidRingPointFirst","centroidRingPoint","cx","cy","cz","d3_geo_src_constant","compose","invert","rotationIdentity","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","src_rotation","forward","circleStream","direction","cosRadius","sinRadius","circleRadius","src_circle","center","circle","clip_buffer","lines","rejoin","pointEqual","Intersection","other","entry","segments","compareIntersection","startInside","clip","segment","rejoin_link","isSubject","polygonContains_sum","polygonContains","winding","phi0","sinPhi0","cosPhi0","sinPhi1","cosPhi1","phi1","absDelta","intersection","phiArc","src_clip","pointVisible","clipLine","sink","ringBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","clip_compareIntersection","pointLine","clean","ringSegments","validSegment","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","from","to","clip_circle","cr","smallRadius","notHemisphere","visible","intersect","two","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","A","uu","polar","q1","code","c0","v00","point2","clip_line","ax","ay","clipMax","clipMin","clipRectangle","corner","comparePoint","ca","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","linePoint","polygonInside","cleanInside","length_lambda0","length_sinPhi0","length_cosPhi0","clip_extent","cache","cacheStream","lengthSum","lengthStream","lengthPointFirst","lengthLineEnd","lengthPoint","cosDelta","src_length","distance_coordinates","distance_object","src_distance","containsObjectType","containsGeometry","containsGeometryType","containsPoint","containsLine","containsPolygon","ab","ringRadians","pointRadians","src_contains","graticuleX","graticuleY","graticule_graticule","X1","X0","Y1","Y0","Y","DX","DY","graticule","outline","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","area_x00","area_y00","area_x0","area_y0","src_interpolate","cy0","cy1","sy1","kx0","ky0","kx1","ky1","B","d3_geo_src_identity","area_areaSum","area_areaRingSum","area_areaStream","area_areaRingStart","area_areaRingEnd","area_areaPointFirst","area_areaPoint","path_area","bounds_x0","bounds_y0","bounds_x1","bounds_y1","centroid_x00","centroid_y00","path_centroid_x0","path_centroid_y0","path_bounds","path_centroid_X0","path_centroid_Y0","centroid_Z0","path_centroid_X1","path_centroid_Y1","centroid_Z1","centroid_X2","centroid_Y2","centroid_Z2","centroid_centroidStream","centroid_centroidPoint","centroid_centroidLineStart","centroid_centroidLineEnd","centroid_centroidRingStart","centroid_centroidRingEnd","centroid","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","path_centroid","PathContext","_context","_radius","pointRadius","_line","_point","lengthRing","measure_x00","measure_y00","measure_x0","measure_y0","measure_lengthSum","measure_lengthStream","measure_lengthPointFirst","measure_lengthPoint","measure","PathString","_string","string_circle","_circle","projection","projectionStream","contextStream","src_transform","methods","transformer","TransformStream","fit","fitBounds","clipExtent","fitExtent","fitSize","fitWidth","fitHeight","maxDepth","cosMinDistance","resample","project","delta2","resampleLineTo","phi2","lambda2","dx2","dy2","dz","lambda00","x00","y00","a00","b00","c00","resampleStream","ringPoint","resample_resample","resampleNone","transformRadians","scaleTranslateRotate","cosAlpha","sinAlpha","ai","ci","fi","projection_projection","projectionMutator","projectAt","projectResample","projectTransform","projectRotateTransform","preclip","clip_antimeridian","postclip","recenter","transformRotate","clipAngle","conicProjection","parallels","conicEqualAreaRaw","cylindricalEqualAreaRaw","r0y","conicEqualArea","albers","projection_albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","albersUsa","streams","azimuthalRaw","azimuthalInvert","sc","cc","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercatorRaw","mercator","mercatorProjection","reclip","tany","conicConformalRaw","conicConformal","equirectangularRaw","equirectangular","conicEquidistantRaw","gy","nx","conicEquidistant","gnomonicRaw","gnomonic","identity_scaleTranslate","kx","ky","tx","ty","projection_identity","reflectX","reflectY","naturalEarth1Raw","phi4","naturalEarth1","orthographicRaw","orthographic","stereographicRaw","stereographic","transverseMercatorRaw","transverseMercator","defaultSeparation","meanXReduce","maxYReduce","cluster","separation","nodeSize","previousNode","eachAfter","meanX","maxY","leafLeft","leafRight","count_count","hierarchy","childs","Node","valued","defaultChildren","eachBefore","computeHeight","copyData","ancestor","aNodes","ancestors","bNodes","leastCommonAncestor","descendants","leaves","d3_hierarchy_src_array_slice","enclose","circles","array_shuffle","enclosesWeak","encloseBasis","extendBasis","enclosesWeakAll","enclosesNot","encloseBasis2","encloseBasis3","dr","r2","r21","r3","a2","a3","c3","d3","place","intersects","score","siblings_Node","packEnclose","aa","sj","sk","pack","siblings","required","constantZero","d3_hierarchy_src_constant","pack_defaultRadius","src_pack","radiusLeaf","packChildren","translateChild","treemap_round","dice","src_partition","partition","positionNode","stratify_keyPrefix","preroot","ambiguous","defaultId","defaultParentId","parentId","stratify","nodeKey","nodeByKey","tree_defaultSeparation","nextLeft","nextRight","moveSubtree","wm","wp","change","nextAncestor","vim","TreeNode","src_tree","treeRoot","firstWalk","secondWalk","sizeNode","executeShifts","midpoint","vip","vop","vom","sip","sop","sim","som","apportion","treemap_slice","squarify_phi","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","beta","squarify","src_treemap","tile","paddingStack","paddingInner","paddingTop","paddingRight","paddingBottom","paddingLeft","treemap","paddingOuter","binary","sums","valueOffset","valueTarget","valueLeft","valueRight","xk","yk","sliceDice","treemap_resquarify","resquarify","_squarify","d3_polygon_src_area","d3_polygon_src_centroid","src_cross","lexicographicOrder","computeUpperHullIndexes","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","d3_polygon_src_contains","inside","d3_polygon_src_length","perimeter","src_defaultSource","uniform","sourceRandomUniform","randomUniform","src_normal","sourceRandomNormal","randomNormal","mu","sigma","logNormal","sourceRandomLogNormal","randomLogNormal","irwinHall","sourceRandomIrwinHall","randomIrwinHall","bates","sourceRandomBates","randomBates","src_exponential","sourceRandomExponential","randomExponential","d3_scale_src_array_array","array_map","d3_scale_src_array_slice","implicit","ordinal","unknown","band","ordinalRange","rescale","rangeRound","band_point","pointish","d3_scale_src_constant","d3_scale_src_number","unit","deinterpolateLinear","bimap","deinterpolate","reinterpolate","d0","polymap","clamp","continuous","piecewise","deinterpolateClamp","reinterpolateClamp","src_tickFormat","linearish","nice","src_linear_linear","identity_identity","interval","log_deinterpolate","log_reinterpolate","pow10","powp","base","logp","log10","log2","reflect","log_log","logs","pows","pow_raise","pow_pow","pow_sqrt","quantile_quantile","invertExtent","quantiles","quantize_quantize","threshold_threshold","interval_t0","interval_t1","newInterval","floori","offseti","field","date","millisecond_millisecond","src_millisecond","milliseconds","durationMinute","durationWeek","second_second","getUTCSeconds","seconds","minute_minute","getMinutes","minutes","hour_hour","getTimezoneOffset","getHours","src_hour","hours","day_day","setHours","setDate","getDate","src_day","days","weekday","getDay","sunday","monday","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month_month","setMonth","getMonth","getFullYear","src_month","months","year_year","setFullYear","src_year","years","utcMinute","setUTCSeconds","getUTCMinutes","src_utcMinute","utcMinutes","utcHour","setUTCMinutes","getUTCHours","src_utcHour","utcHours","utcDay","setUTCHours","setUTCDate","getUTCDate","utcDays","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","src_utcMonth","utcMonths","utcYear","setUTCFullYear","src_utcYear","utcYears","localDate","H","M","L","utcDate","UTC","newYear","formatLocale","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_weekdays","locale_shortWeekdays","shortDays","locale_months","locale_shortMonths","shortMonths","periodRe","formatRe","periodLookup","formatLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatDayOfMonth","formatMicroseconds","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","Q","formatUnixTimestamp","formatUnixTimestampSeconds","formatSeconds","formatWeekdayNumberMonday","U","formatWeekNumberSunday","V","formatWeekNumberISO","formatWeekdayNumberSunday","formatWeekNumberMonday","locale_formatYear","formatFullYear","Z","formatZone","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCMicroseconds","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parses","parseSpecifier","parseDayOfMonth","parseMicroseconds","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseUnixTimestamp","parseUnixTimestampSeconds","parseSeconds","parseWeekdayNumberMonday","parseWeekNumberSunday","parseWeekNumberISO","parseWeekdayNumberSunday","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","pad","pads","charAt","newParse","newDate","week","day","src_utcDay","utcFormat","utcParse","src_defaultLocale_locale","timeFormat","timeParse","-","0","numberRe","percentRe","requoteRe","requote","getMilliseconds","getSeconds","getUTCMilliseconds","dow","defaultLocale_defaultLocale","isoFormat","toISOString","isoParse","time_durationSecond","time_durationMinute","time_durationHour","time_durationDay","time_durationWeek","durationMonth","durationYear","time_date","time_number","calendar","year","month","hour","minute","second","millisecond","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","formatYear","tickIntervals","tickInterval","src_time","src_minute","src_second","utcTime","sequential","src_colors","category10","Accent","Dark2","Paired","Pastel1","Pastel2","Set1","Set2","Set3","ramp","scheme","BrBG_scheme","BrBG","PRGn_scheme","PRGn","PiYG_scheme","PiYG","PuOr_scheme","PuOr","RdBu_scheme","RdBu","RdGy_scheme","RdGy","RdYlBu_scheme","RdYlBu","RdYlGn_scheme","RdYlGn","Spectral_scheme","Spectral","BuGn_scheme","BuGn","BuPu_scheme","BuPu","GnBu_scheme","GnBu","OrRd_scheme","OrRd","PuBuGn_scheme","PuBuGn","PuBu_scheme","PuBu","PuRd_scheme","PuRd","RdPu_scheme","RdPu","YlGnBu_scheme","YlGnBu","YlGn_scheme","YlGn","YlOrBr_scheme","YlOrBr","YlOrRd_scheme","YlOrRd","Blues_scheme","Blues","Greens_scheme","Greens","Greys_scheme","Greys","Purples_scheme","Purples","Reds_scheme","Reds","Oranges_scheme","Oranges","sequential_multi_cubehelix","warm","cool","rainbow_c","rainbow","ts","sinebow_c","pi_1_3","pi_2_3","sinebow","viridis_ramp","magma","inferno","plasma","d3_shape_src_constant","math_abs","math_atan2","src_math_cos","src_math_max","math_min","src_math_sin","math_sqrt","src_math_epsilon","d3_shape_src_math_pi","d3_shape_src_math_halfPi","d3_shape_src_math_tau","math_asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","arcEndAngle","arcPadAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","D","cx0","cx1","dx0","dy0","dx1","dy1","src_arc","cornerRadius","padRadius","a01","a11","a10","da0","da1","ap","rp","rc0","rc1","oc","x32","y32","arc_intersect","bx","by","kc","lc","Linear","areaStart","areaEnd","curve_linear","point_x","point_y","defined","curve","defined0","d3_shape_src_area","x0z","y0z","arealine","src_line","lineX0","lineY0","lineY1","lineX1","src_descending","d3_shape_src_identity","src_pie","pie","arcs","pa","curveRadialLinear","curveRadial","Radial","_curve","lineRadial","src_lineRadial","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","pointRadial","d3_shape_src_array_slice","linkSource","linkTarget","link_link","curveHorizontal","curveVertical","link_curveRadial","p2","p3","linkHorizontal","linkVertical","linkRadial","symbol_circle","draw","symbol_cross","tan30","tan30_2","diamond","kr","star_kx","star_ky","star","square","sqrt3","triangle","wye_s","wye_k","wye_a","wye","symbols","src_symbol","d3_shape_src_noop","basis_point","Basis","curve_basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","curve_basisClosed","BasisOpen","basisOpen","Bundle","_basis","_beta","curve_bundle","bundle","cardinal_point","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","cardinalClosed","CardinalOpen","cardinalOpen","catmullRom_point","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","x23","y23","curve_catmullRom","catmullRom","CatmullRomClosed","catmullRomClosed","CatmullRomOpen","catmullRomOpen","LinearClosed","linearClosed","monotone_sign","slope3","h0","h1","slope2","monotone_point","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","_t0","px","py","natural","Step","_t","curve_step","stepBefore","stepAfter","offset_none","series","order_none","stackValue","src_stack","stack","oz","kz","sz","sij","ki","si","expand","diverging","yn","silhouette","wiggle","s2","sij0","s3","order_ascending","ascending_sum","order_descending","insideOut","tops","bottoms","order_reverse","d3_voronoi_src_constant","src_point_x","src_point_y","RedBlackTree","RedBlackNode","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","sibling","src_RedBlackTree","createEdge","edge","Diagram_edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","connectEdge","fm","fb","lx","ly","rx","ry","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","attachCircle","lArc","rArc","lSite","cSite","rSite","Diagram_epsilon2","ha","hc","Diagram_circles","detachCircle","beachPool","createBeach","beach","detachBeach","beaches","removeBeach","disappearing","Diagram_epsilon","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","lexicographic","Diagram","sites","sortCellHalfedges","clipEdges","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","dc","v01","v11","v10","clipCells","edges","triangles","_found","src_voronoi","voronoi","d3_zoom_src_constant","Transform","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","transform_identity","transform_transform","__zoom","src_noevent_nopropagation","d3_zoom_src_noevent","zoom_defaultFilter","zoom_defaultExtent","SVGElement","clientWidth","clientHeight","defaultTransform","defaultWheelDelta","deltaY","deltaMode","zoom_defaultTouchable","defaultConstrain","translateExtent","d3_zoom_src_zoom","touchstarting","constrain","wheelDelta","scaleExtent","touchDelay","wheelDelay","zoom","wheeled","dblclicked","Gesture","wheel","k1","touch0","touch1","l0","l1","dp","dl","collection","scaleBy","scaleTo","translateBy","translateTo","testObject","getTime","testString","_typeof","len","appendColumn","appendRow","_createNullList","_each","label","_createNullList2","default","String","newRow","col","selectColumn","stripHtmlTags","inputString","average","arr","val","parseFloat","maximum","nums","minimum","getColumnAverage","getRowAverage","getColumnSum","getRowSum","getColumnMaximum","getRowMaximum","getColumnMinimum","getRowMinimum","getColumnLabel","getRowIndex","del","_extend","Dataset","meta","coords","colIndex","rowIndex","colResult","rowResult","selectRow","analyses","_parsers2","render","spinner","artifacts","_artifacts","offsetPadding","theme","el","animationName","destroy","defaults","stickyHeader","stickyFooter","fixedHeader","dataset","offsetHeight","colAligns","colWidths","message","_generateTableRows","onscroll","scrollTop","prettyNumber","sciNo","Number","suffixes","recurse","iteration","rhs","numNumerals","_prettyNumber","_escapeHtml","formattedNum","title","opts","chartOptions","outer","inner","msg","titleContainer","notesContainer","className","notes","actualInnerHeight","defaultTitleFormat","defaultValueFormat","bgcolor","nameFormat","titleFormat","valueFormat","config","tooltip_format_name","tooltip_format_title","tooltip_format_value","CLASS","tooltip","levelColor","tooltipName","cols","chart","domNode","legendWidth","pagination","hidden","labels","_assertDateString2","legendEl","legendItems","paginateElOffset","paginateEl","paginateData","legendItemList","isHidden","elementText","getBBox","legendItemBox","legendItemCircle","focus","tooltipElement","revert","toggle","path_d","element","getSelection","removeAllRanges","_assertDateString","startDate","endDate","timeDiff","ms","extendDeep","c3_axis_fn","c3_axis_internal_fn","chartLine","chartLines","chartBar","chartBars","chartText","chartTexts","chartArc","chartArcs","chartArcsTitle","chartArcsBackground","chartArcsGaugeUnit","chartArcsGaugeMax","chartArcsGaugeMin","selectedCircle","selectedCircles","eventRect","eventRects","eventRectsSingle","eventRectsMultiple","zoomRect","focused","defocused","region","regions","tooltipContainer","shape","shapes","bar","bars","arcLabelLine","areas","texts","gaugeValue","grid","gridLines","xgrid","xgrids","xgridLine","xgridLines","xgridFocus","ygrid","ygrids","ygridLine","ygridLines","axisX","axisXLabel","axisY","axisYLabel","axisY2","axisY2Label","legendBackground","legendItem","legendItemEvent","legendItemTile","legendItemHidden","legendItemFocused","dragarea","EXPANDED","SELECTED","INCLUDED","Symbol","iterator","obj","classCallCheck","instance","Constructor","possibleConstructorReturn","ReferenceError","isValue","isFunction","isString","isUndefined","isDefined","ceil10","asHalfPixel","diffDomain","isEmpty","notEmpty","c3_chart_internal_fn","getOption","options","defaultValue","hasValue","dict","found","sanitise","getPathBox","box","items","pathSegList","getItem","minX","minY","AxisInternal","component","scaleLinear","innerTickSize","outerTickSize","withOuterTick","tickOffset","tickCulling","tickCentered","tickTextCharSize","tickTextRotate","tickLength","generateAxis","generateTicks","copyScale","newScale","isCategory","textFormatted","formatted","updateRange","rangeExtent","updateTickTextCharSize","internal","isVertical","tspanData","splitted","tickMultiline","splitTickText","tickMultilineMax","ellipsify","subtext","spaceIndex","textWidth","tickText","maxWidth","tickWidth","substr","ellipsified","remaining","available","padEnd","updateTickLength","lineY2","tickPosition","textY","textTransform","textTextAnchor","tspanDx","tspanDy","tickTransform","tickX","tickY","scale0","__chart__","scale1","ticksValues","tickUpdate","lineUpdate","textUpdate","tspans","tspanEnter","tspanUpdate","pathUpdate","rangeBand","isCentered","getTotalLength","culling","Axis","_Component","owner","fn","_this","__proto__","getPrototypeOf","subClass","superClass","writable","setPrototypeOf","inherits","componentKey","$$","main","axes","axis_x_inner","clipPathForXAxis","getTranslate","axis_x_show","axis_rotated","textAnchorForXAxisLabel","axis_y_inner","clipPathForYAxis","axis_y_show","textAnchorForYAxisLabel","axis_y2_show","textAnchorForY2AxisLabel","getXAxis","withoutTransition","withoutRotateTickText","axisParams","isCategorized","axis_x_tick_multiline","axis_x_tick_multilineMax","axis_x_tick_width","axis_x_tick_rotate","isTimeSeries","parseDate","axis_x_tick_centered","axis_x_tick_culling","updateXAxisTickValues","targets","axis_x_tick_fit","axis_x_tick_count","generateTickValues","mapTargetsToUniqueXs","xAxis","subXAxis","getYAxis","axis_y_tick_rotate","isTimeSeriesY","axis_y_tick_time_type","axis_y_tick_time_interval","getId","data_axes","getXAxisTickFormat","defaultAxisTimeFormat","categoryName","axis_x_tick_format","axisTimeFormat","getTickValues","getXAxisTickValues","axis_x_tick_values","getYAxisTickValues","axis_y_tick_values","yAxis","getY2AxisTickValues","axis_y2_tick_values","y2Axis","getLabelOptionByAxisId","axisId","option","axis_y_label","axis_y2_label","axis_x_label","getLabelText","setLabelText","getLabelPosition","defaultPosition","isInner","isOuter","isLeft","isCenter","isRight","isTop","isMiddle","isBottom","getXAxisLabelPosition","getYAxisLabelPosition","getY2AxisLabelPosition","getLabelPositionById","textForXAxisLabel","textForYAxisLabel","textForY2AxisLabel","xForAxisLabel","forHorizontal","dxForAxisLabel","textAnchorForAxisLabel","xForXAxisLabel","xForYAxisLabel","xForY2AxisLabel","dxForXAxisLabel","dxForYAxisLabel","dxForY2AxisLabel","dyForXAxisLabel","getMaxTickWidth","axis_x_height","dyForYAxisLabel","dyForY2AxisLabel","axis_y2_inner","withoutRecompute","targetsToShow","dummy","currentMaxTickWidths","filterTargetsToShow","getYDomain","yOrient","axis_y_tick_format","yAxisTickValues","y2Orient","axis_y2_tick_format","y2AxisTickValues","getXDomain","xOrient","xAxisTickFormat","xAxisTickValues","updateLabels","withTransition","getPadding","domainLength","convertPixelsToAxisPadding","pixels","tickCount","forTimeSeries","targetCount","tickValue","generateTransitions","axisSubX","subx","c3_chart_fn","version","Chart","ChartInternal","loadConfig","beforeInit","afterInit","bindThis","argThis","api","getDefaultConfig","generate","initParams","data_url","convertUrlToData","data_mimeType","data_headers","data_keys","initWithData","data_json","convertJsonToData","data_rows","convertRowsToData","data_columns","convertColumnsToData","clipId","clipIdForXAxis","clipIdForYAxis","clipIdForGrid","clipIdForSubchart","clipPath","getClipPath","clipPathForGrid","clipPathForSubchart","dragStart","dragging","flowing","cancelClick","mouseover","transiting","generateColor","generateLevelColor","dataTimeParse","data_xLocaltime","data_xFormat","axis_x_localtime","hiddenTargetIds","hiddenLegendIds","focusedTargetIds","defocusedTargetIds","subXOrient","isLegendRight","legend_position","isLegendInset","isLegendTop","legend_inset_anchor","isLegendLeft","legendStep","legendItemWidth","legendItemHeight","rotated_padding_left","rotated_padding_right","rotated_padding_top","withoutFadeIn","intervalForObserveInserted","initChartElements","initBar","initLine","initArc","initGauge","initText","defs","binding","bindto","selectChart","observeInserted","xs","convertDataToTargets","data_filter","data_hide","addHiddenTargetIds","mapToIds","legend_hide","addHiddenLegendIds","updateSizes","updateScales","subX","subY","subY2","orgXDomain","onmouseover","onmouseout","svg_classname","clipChart","appendClip","clipXAxis","clipYAxis","clipGrid","clipSubchart","updateSvgSize","initPie","initSubchart","initTooltip","initLegend","initTitle","initZoom","initSubchartBrush","initRegion","initGrid","grid_lines_front","initGridLines","updateTargets","initEventRect","axis_x_selection","selectionAsValue","getDefaultSelection","updateDimension","oninit","withTransform","withUpdateXDomain","withUpdateOrgXDomain","withTransitionForAxis","bindResize","smoothLines","legendHeight","legend","getLegendHeight","getLegendWidth","legendHeightForBottom","hasArc","hasArcType","xAxisHeight","getHorizontalAxisHeight","subchartHeight","subchart_show","subchart_size_height","currentWidth","getCurrentWidth","currentHeight","getCurrentHeight","margin","getCurrentPaddingTop","getCurrentPaddingRight","getCurrentPaddingBottom","getCurrentPaddingLeft","margin2","margin3","updateSizeForLegend","width2","height2","arcWidth","arcHeight","hasType","gauge_fullCircle","getGaugeLabelHeight","updateRadius","radiusExpanded","updateTargetsForText","updateTargetsForBar","updateTargetsForLine","updateTargetsForArc","updateTargetsForSubchart","showTargets","isTargetToShow","transition_duration","transitions","withY","withSubchart","withTransitionForExit","withTrimXDomain","withLegend","withEventRect","withDimension","withUpdateXAxis","drawArea","drawBar","drawLine","xForText","yForText","durationForExit","durationForAxis","transitionsToWait","waitForDraw","flow","intervalForCulling","xDomainForZoom","areaIndices","getShapeIndices","isAreaType","barIndices","isBarType","lineIndices","isLineType","hideAxis","xv","legend_show","updateLegend","updateXDomain","zoom_rescale","orgDomain","axis_y_tick_count","axis_y2_tick_count","axis_x_tick_culling_max","generateDrawArea","generateDrawBar","generateDrawLine","generateXYForText","updateCircleY","circleY","circleX","updateXgridFocus","data_empty_label_text","redrawEventRect","updateGrid","updateRegion","updateBar","updateLine","updateArea","updateCircle","hasDataLabel","updateText","redrawTitle","redrawArc","redrawSubchart","generateFlow","isTabVisible","redrawBar","redrawLine","redrawArea","redrawCircle","redrawText","redrawRegion","redrawGrid","generateWait","onrendered","updateAndRedraw","withTransitionForTransform","transformAll","redrawWithoutRescale","axis_x_type","isCustomX","data_x","data_xs","axis_y_type","initialOpacity","initialOpacityForCircle","opacityForCircle","point_show","isScatterType","opacityForText","xx","axis_x_categories","yv","yScale","subxx","transformMain","transformContext","transformLegend","getXAxisClipX","getXAxisClipY","getXAxisClipWidth","getXAxisClipHeight","getYAxisClipX","getYAxisClipY","getYAxisClipWidth","getYAxisClipHeight","withoutAxis","observer","MutationObserver","mutations","mutation","disconnect","observe","attributes","childList","characterData","console","resizeFunction","generateResize","onresize","resize_auto","resizeTimeout","onresized","resizeIfElementDisplayed","offsetParent","attachEvent","wrapper","resizeFunctions","callResizeFunctions","endall","done","parsedDate","mozHidden","msHidden","webkitHidden","oThis","aArgs","fToBind","fNOP","fBound","SVGPathSeg","typeAsLetter","owningPathSegList","pathSegType","pathSegTypeAsLetter","_owningPathSegList","classname","PATHSEG_UNKNOWN","PATHSEG_CLOSEPATH","PATHSEG_MOVETO_ABS","PATHSEG_MOVETO_REL","PATHSEG_LINETO_ABS","PATHSEG_LINETO_REL","PATHSEG_CURVETO_CUBIC_ABS","PATHSEG_CURVETO_CUBIC_REL","PATHSEG_CURVETO_QUADRATIC_ABS","PATHSEG_CURVETO_QUADRATIC_REL","PATHSEG_ARC_ABS","PATHSEG_ARC_REL","PATHSEG_LINETO_HORIZONTAL_ABS","PATHSEG_LINETO_HORIZONTAL_REL","PATHSEG_LINETO_VERTICAL_ABS","PATHSEG_LINETO_VERTICAL_REL","PATHSEG_CURVETO_CUBIC_SMOOTH_ABS","PATHSEG_CURVETO_CUBIC_SMOOTH_REL","PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS","PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL","_segmentChanged","segmentChanged","SVGPathSegClosePath","_asPathString","SVGPathSegMovetoAbs","SVGPathSegMovetoRel","SVGPathSegLinetoAbs","SVGPathSegLinetoRel","SVGPathSegCurvetoCubicAbs","SVGPathSegCurvetoCubicRel","SVGPathSegCurvetoQuadraticAbs","SVGPathSegCurvetoQuadraticRel","SVGPathSegArcAbs","largeArcFlag","sweepFlag","_r1","_r2","_angle","_largeArcFlag","_sweepFlag","SVGPathSegArcRel","SVGPathSegLinetoHorizontalAbs","SVGPathSegLinetoHorizontalRel","SVGPathSegLinetoVerticalAbs","SVGPathSegLinetoVerticalRel","SVGPathSegCurvetoCubicSmoothAbs","SVGPathSegCurvetoCubicSmoothRel","SVGPathSegCurvetoQuadraticSmoothAbs","SVGPathSegCurvetoQuadraticSmoothRel","SVGPathElement","createSVGPathSegClosePath","createSVGPathSegMovetoAbs","createSVGPathSegMovetoRel","createSVGPathSegLinetoAbs","createSVGPathSegLinetoRel","createSVGPathSegCurvetoCubicAbs","createSVGPathSegCurvetoCubicRel","createSVGPathSegCurvetoQuadraticAbs","createSVGPathSegCurvetoQuadraticRel","createSVGPathSegArcAbs","createSVGPathSegArcRel","createSVGPathSegLinetoHorizontalAbs","createSVGPathSegLinetoHorizontalRel","createSVGPathSegLinetoVerticalAbs","createSVGPathSegLinetoVerticalRel","createSVGPathSegCurvetoCubicSmoothAbs","createSVGPathSegCurvetoCubicSmoothRel","createSVGPathSegCurvetoQuadraticSmoothAbs","createSVGPathSegCurvetoQuadraticSmoothRel","getPathSegAtLength","measurementElement","lastPathSegment","numberOfItems","removeItem","SVGPathSegList","pathElement","_pathElement","_list","_parsePath","_mutationObserverConfig","attributeFilter","_pathElementMutationObserver","_updateListFromPathMutations","_checkPathSynchronizedToList","_pathSegList","takeRecords","mutationRecords","hasPathMutations","record","attributeName","_writeListToPath","_pathSegArrayAsString","pathSeg","newItem","_checkValidIndex","insertItemBefore","replaceItem","item","appendItem","pathSegArray","Builder","appendSegment","Source","_currentIndex","_endIndex","_previousCommand","_skipOptionalSpaces","_isCurrentSpace","character","_skipOptionalSpacesOrDelimiter","hasMoreData","peekSegmentType","lookahead","_pathSegTypeFromChar","_nextCommandHelper","previousCommand","initialCommandIsMoveTo","command","_parseNumber","integer","frac","expsign","startIntPartIndex","scanIntPartIndex","multiplier","_parseArcFlag","flag","flagChar","parseSegment","arcAngle","arcLarge","arcSweep","builder","targetLength","padString","repeat","axis_x_max","axis_y_max","axis_y2_max","axis_x_min","axis_y_min","axis_y2_min","category","categories","size_width","size_height","flush","detachEvent","targetIds","shown","targetId","clearLegendItemTextBoxCache","updateDataAttributes","baseTarget","baseValue","diff","notfoundIds","orgDataCount","getMaxDataCount","tail","getOtherTargetX","missing","mainRegion","mainText","mainBar","mainLine","mainArea","mainCircle","flowIndex","flowLength","flowStart","getValueOnIndex","flowEnd","durationForFlow","wait","updateXGrid","hideXGridFocus","flowTransition","easeLinear","isRegionOnX","xgridAttr","regionX","regionWidth","candidates","mapToTargetIds","selectorTargets","defocus","expandArc","toggleFocusLegend","unexpandArc","showLegend","isLegendToShow","selectorLegends","grids","grid_x_lines","removeGridLines","grid_y_lines","data_groups","show","hide","hideLegend","load","addXs","classes","data_classes","data_colors","hasCaches","cacheIds","getCaches","unload","loadFromArgs","ids","selected","getTargetSelectorSuffix","indices","resetOther","data_selection_enabled","getToggle","isTargetId","data_selection_grouped","isTargetIndex","isSelected","data_selection_isselectable","unselect","removeHiddenTargetIds","filterByX","getMousePosition","tooltip_onshow","tooltip_onhide","transformTo","optionsForRedraw","setTargetType","updateTargetX","updateTargetXs","zoom_onzoom","enable","enabled","zoom_enabled","unzoom","zoom_x_max","zoom_x_min","orderFct","getOrderFunction","isOrderAsc","isOrderDesc","defaultSort","gauge_width","donut_width","gaugeArcWidth","gauge_arcs_minWidth","innerRadiusRatio","updateArc","svgArc","getSvgArc","svgArcExpanded","getSvgArcExpanded","svgArcExpandedSub","updateAngle","gMin","gMax","gTic","gValue","isGaugeType","gauge_min","gauge_max","gauge_startingAngle","hasGaugeType","singleArcWidth","withoutUpdate","updated","rate","expandWidth","getArc","isArcType","transformForArcLabel","hasGauge","donut_label_ratio","pie_label_ratio","getArcRatio","whole","convertToArcData","addName","textForArcLabel","shouldShowArcLabel","meetsArcLabelThreshold","getArcLabelFormat","defaultArcValueFormat","textForGaugeMinMax","isMax","getGaugeLabelExtents","shouldExpand","expandDuration","isDonutType","donut_expand_duration","gauge_expand_duration","isPieType","pie_expand_duration","donut_expand","gauge_expand","pie_expand","shouldShow","donut_label_show","pie_label_show","donut_label_threshold","pie_label_threshold","pie_label_format","gauge_label_format","donut_label_format","gauge_label_extents","getArcTitle","donut_title","mainPieEnter","classChartArc","classArcs","classFocus","mainArc","backgroundArc","arcLabelLines","mainArcLabelLine","arcData","classArc","interaction_enabled","_current","color_pattern","gauge_labelLine_show","lineLength","innerLineLength","lineAngle","linePositioningAngle","data_onmouseover","selectedData","showTooltip","revertLegend","hideTooltip","data_onmouseout","toggleShape","data_onclick","interpolated","gauge_label_show","gauge_units","addCache","cloneTarget","generateTargetClass","generateClass","classText","classTexts","classShape","classShapes","classLine","classLines","classCircle","classCircles","classBar","classBars","classArea","classAreas","classRegion","classEvent","classTarget","additionalClassSuffix","additionalClass","classFocused","classDefocused","classChartText","classChartLine","classChartBar","selectorTarget","selectorLegend","navigator","appVersion","URL","getAxisClipX","getAxisClipY","getAxisClipWidth","getAxisClipHeight","pattern","schemeCategory10","data_color","color_threshold","asValue","padding_left","padding_right","padding_top","padding_bottom","zoom_initialRange","zoom_privileged","zoom_onzoomstart","zoom_onzoomend","interaction_brighten","data_xSort","data_idConverter","data_names","data_type","data_types","data_labels","data_order","data_regions","data_selection_multiple","data_selection_draggable","data_onselected","data_onunselected","subchart_axis_x_show","subchart_onbrush","legend_inset_x","legend_inset_y","legend_inset_step","legend_item_onclick","legend_item_onmouseover","legend_item_onmouseout","legend_equally","legend_padding","legend_item_tile_width","legend_item_tile_height","axis_x_tick_outer","axis_x_padding","axis_y_inverted","axis_y_center","axis_y_tick_outer","axis_y_padding","axis_y_default","axis_y2_inverted","axis_y2_center","axis_y2_tick_outer","axis_y2_padding","axis_y2_default","grid_x_show","grid_x_type","grid_y_show","grid_y_ticks","grid_focus_show","point_r","point_sensitivity","point_focus_expand_enabled","point_focus_expand_r","point_select_r","line_connectNull","line_step_type","bar_width","bar_width_ratio","bar_width_max","bar_zerobased","bar_space","area_zerobased","area_above","spline_interpolation_type","tooltip_show","tooltip_grouped","tooltip_order","tooltip_position","tooltip_contents","getTooltipContent","tooltip_init_show","tooltip_init_x","tooltip_init_position","title_text","title_padding","title_position","additionalConfig","read","this_config","url","mimeType","headers","converter","convertXsvToData","catch","xsv","assign","targetKeys","new_rows","new_row","findValueInJson","pathArray","newRows","appendXs","isNotX","isX","xKey","getXKey","rawX","generateTargetX","getOtherTargetXs","getXValuesOfXKey","convertedId","id_org","hasNegativeValue","hasNegativeValueInTargets","hasPositiveValue","hasPositiveValueInTargets","xValues","getXValue","idsForX","valueOnIndex","hasTarget","removeHiddenLegendIds","getValuesAsIdKeyed","ys","checkValueInTargets","checker","orderAsc","orderDesc","reducer","t1Sum","t2Sum","orderTargets","fct","filterRemoveNull","filterByXDomain","xDomain","getDataLabelLength","lengths","dataLabelFormat","isNoneArc","isArc","findClosestFromTargets","pos","findClosest","minDist","isWithinBar","dist","xIndex","yIndex","convertValuesToStep","converted","attrs","getYDomainMin","baseId","idsInGroup","getYDomainMax","yDomainAbs","isAllPositive","isAllNegative","targetsByAxisId","yTargets","yMin","yMax","yDomainMin","yDomainMax","isZeroBased","isInverted","showHorizontalDataLabel","showVerticalDataLabel","getXDomainMin","getXDomainMax","getXDomainPadding","maxDataCount","firstX","lastX","withTrim","updateScale","trimXDomain","zoomDomain","getZoomDomain","mx","my","maxX","_w","_h","isIncluded","isWithin","togglePoint","togglePath","dragstart","dragend","getYFormat","forArc","formatForY","yFormat","formatForY2","y2Format","defaultFormat","xgridData","generateGridData","xgridEnter","updateYGrid","gridValues","ygridEnter","gridTextAnchor","gridTextDx","xGridTextX","yGridTextX","xgridLineEnter","ygridLineEnter","showXGridFocus","dataToShow","focusEl","firstYear","lastYear","gridData","tickNum","getGridFilterToRemove","param","forX","toRemove","toShow","zoomTransform","mouseout","unexpandCircles","unexpandBars","expandCircles","expandBars","isWithinShape","getYScale","initMouseEvent","legendItemTextBox","legendHasRendered","updateLegendWithDefaults","insetLegendPosition","updateLegendStep","updateLegendItemWidth","updateLegendItemHeight","opacityForLegend","opacityForUnfocusedLegend","xForLegend","xForLegendText","xForLegendRect","yForLegend","yForLegendText","yForLegendRect","x1ForLegendTile","x2ForLegendTile","yForLegendTile","rects","tiles","background","maxHeight","posMin","tileWidth","totalLength","offsets","widths","heights","margins","steps","updatePositions","textElement","maxLength","isLast","getTextRect","getTextBox","itemWidth","itemHeight","itemLength","areaLength","updateValues","withoutStep","mainRegionEnter","regionY","regionHeight","getScale","forTimeseries","scaleTime","getX","_scale","raw","getY","getSubYScale","forInit","xMin","xMax","subXMin","subXMax","subYMin","subYMax","selectPoint","pointSelectR","unselectPoint","selectPath","unselectPath","nodeName","isStepType","barData","mainBarEnter","getBarW","barTargetsNum","getBars","isSub","getPoints","generateGetBarPoints","indexX","indexY","__max__","barW","barX","getShapeX","barY","getShapeY","barOffset","getShapeOffset","barSpaceOffset","posX","posY","seg0","seg1","ex","ey","typeFilter","targetsNum","isWithinStep","isWithinCircle","getInterpolate","curveLinear","linear-closed","curveLinearClosed","curveBasis","basis-open","curveBasisOpen","basis-closed","curveBasisClosed","curveBundle","curveCardinal","cardinal-open","curveCardinalOpen","cardinal-closed","curveCardinalClosed","monotone","curveMonotoneX","curveStep","step-before","curveStepBefore","step-after","curveStepAfter","isSplineType","mainLineEnter","lineData","generateGetLinePoints","yScaleGetter","xValue","yValue","lineWithRegions","lineTargetsNum","lineOffset","_regions","sWithRegion","diffx2","xOffset","isWithinRegions","generateM","x_diff","xv0","xv1","mainAreaEnter","orgAreaOpacity","generateGetAreaPoints","getAreaBaseValue","areaTargetsNum","areaOffset","lineOrScatterData","mainCircleEnter","pointR","getCircles","pointExpandedR","d3_this","getParentWidth","getParentHeight","getTitlePadding","getAxisWidthByAxisId","legendWidthOnRight","getParentRectValue","tagName","offsetWidth","getSvgLeft","hasLeftAxisRect","leftAxisClass","leftAxis","svgRect","chartRect","svgLeft","initBrush","redrawForBrush","updateExtent","visibility","contextLineEnter","contextLine","contextBarEnter","contextBar","updateBarForSubchart","redrawBarForSubchart","drawBarOnSub","updateLineForSubchart","redrawLineForSubchart","drawLineOnSub","updateAreaForSubchart","contextArea","contextAreaEnter","redrawAreaForSubchart","drawAreaOnSub","zoomIdentity","mainTextEnter","barOrLineData","forFlow","cls","font","getAreaPoints","getBarPoints","getLinePoints","getXForText","getYForText","xPos","yPos","isSafari","isChrome","xForTitle","yForTitle","getTooltipSortFunction","sortFunction","tooltipSortFunction","tooltipPosition","tWidth","tHeight","tooltipLeft","tooltipRight","tooltipTop","chartRight","positionFunction","ua","userAgent","startEvent","redrawForZoom","updateDomain","lib","bindResizeListener","visuals","DEFAULT_OPTIONS","ENFORCED_OPTIONS","colorMapping","_extendDeep","rotated","dateFormat","_defaultDateFormat2","stacked","scope","contents","c3TooltipContents","paddedWidth","c3PaginatingLegend","defineC3","metric","table","indexBy","query","selectedParser","parserArgs","metadata","analysis_type","event_collection","filters","group_by","timeframe","timezone","display_name","analysis","getDefaultTitle","visualization","chart_type","getDefaultType","updateColumn","updateRow","_stripHtmlTags","_dataset","valueAtDeepKey","is","flatten","ob","toReturn","flatObject","parsers","_flatten","_object","res","grouped-metric","grouped-interval","double-grouped-metric","rowLabel","double-grouped-interval","funnel","extraction","_loop","iNames","deleteColumn","_append","sortColumns","comp","head","analysesUtilMethods","op","insertColumn","sortRows","body","_analyses","insertRow","filterColumns","selectedColumn","filterRows","deleteRow","Dataviz","_prepared","_rendered","labelMapping","library","sortIntervals","domReady","readyState","DOMContentLoaded","testDom","libraries","_libraries2","register","actions","method","visual","num","loader","buildDomWrapper","bool","areachart","barchart","columnchart","linechart","piechart","convertChartTypes","chartType","parseRawData","parseRequest","eval","_index","env","global","extendKeenGlobalObject","Keen"],"mappings":"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","file":"keen-dataviz.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 33);\n","export function each(o, cb, s) {\n  var n;\n  if (!o) {\n    return 0;\n  }\n  s = !s ? o : s;\n  if (o instanceof Array) {\n    // Indexed arrays, needed for Safari\n    for (n = 0; n < o.length; n++) {\n      if (cb.call(s, o[n], n, o) === false) {\n        return 0;\n      }\n    }\n  } else {\n    // Hashtables\n    for (n in o) {\n      if (o.hasOwnProperty(n)) {\n        if (cb.call(s, o[n], n, o) === false){\n          return 0;\n        }\n      }\n    }\n  }\n  return 1;\n}\n","const matchHtmlRegExp = /[\"'&<>]/;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {string} string The string to escape for inserting into HTML\n * @return {string}\n * @public\n */\n\nexport function escapeHtml(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34: // \"\n        escape = '&quot;';\n        break;\n      case 38: // &\n        escape = '&amp;';\n        break;\n      case 39: // '\n        escape = '&#39;';\n        break;\n      case 60: // <\n        escape = '&lt;';\n        break;\n      case 62: // >\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index\n    ? html + str.substring(lastIndex, index)\n    : html;\n}\n","export function extend(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    for (var prop in arguments[i]){\n      target[prop] = arguments[i][prop];\n    }\n  }\n  return target;\n}\n","export var name = \"d3\";\nexport var version = \"5.4.0\";\nexport var description = \"Data-Driven Documents\";\nexport var keywords = [\"dom\",\"visualization\",\"svg\",\"animation\",\"canvas\"];\nexport var homepage = \"https://d3js.org\";\nexport var license = \"BSD-3-Clause\";\nexport var author = {\"name\":\"Mike Bostock\",\"url\":\"https://bost.ocks.org/mike\"};\nexport var main = \"dist/d3.node.js\";\nexport var unpkg = \"dist/d3.min.js\";\nexport var jsdelivr = \"dist/d3.min.js\";\nexport var module = \"index\";\nexport var repository = {\"type\":\"git\",\"url\":\"https://github.com/d3/d3.git\"};\nexport var scripts = {\"pretest\":\"rimraf dist && mkdir dist && json2module package.json > dist/package.js && node rollup.node\",\"test\":\"tape 'test/**/*-test.js'\",\"prepublishOnly\":\"npm run test && rollup -c --banner \\\"$(preamble)\\\" && uglifyjs -b beautify=false,preamble=\\\"'$(preamble)'\\\" dist/d3.js -c negate_iife=false -m -o dist/d3.min.js\",\"postpublish\":\"git push && git push --tags && cd ../d3.github.com && git pull && cp ../d3/dist/d3.js d3.v5.js && cp ../d3/dist/d3.min.js d3.v5.min.js && git add d3.v5.js d3.v5.min.js && git commit -m \\\"d3 ${npm_package_version}\\\" && git push && cd - && cd ../d3-bower && git pull && cp ../d3/LICENSE ../d3/README.md ../d3/dist/d3.js ../d3/dist/d3.min.js . && git add -- LICENSE README.md d3.js d3.min.js && git commit -m \\\"${npm_package_version}\\\" && git tag -am \\\"${npm_package_version}\\\" v${npm_package_version} && git push && git push --tags && cd - && zip -j dist/d3.zip -- LICENSE README.md API.md CHANGES.md dist/d3.js dist/d3.min.js\"};\nexport var devDependencies = {\"json2module\":\"0.0\",\"package-preamble\":\"0.1\",\"rimraf\":\"2\",\"rollup\":\"0.57\",\"rollup-plugin-ascii\":\"0.0\",\"rollup-plugin-node-resolve\":\"3\",\"tape\":\"4\",\"uglify-js\":\"3.2\"};\nexport var dependencies = {\"d3-array\":\"1\",\"d3-axis\":\"1\",\"d3-brush\":\"1\",\"d3-chord\":\"1\",\"d3-collection\":\"1\",\"d3-color\":\"1\",\"d3-contour\":\"1\",\"d3-dispatch\":\"1\",\"d3-drag\":\"1\",\"d3-dsv\":\"1\",\"d3-ease\":\"1\",\"d3-fetch\":\"1\",\"d3-force\":\"1\",\"d3-format\":\"1\",\"d3-geo\":\"1\",\"d3-hierarchy\":\"1\",\"d3-interpolate\":\"1\",\"d3-path\":\"1\",\"d3-polygon\":\"1\",\"d3-quadtree\":\"1\",\"d3-random\":\"1\",\"d3-scale\":\"2\",\"d3-scale-chromatic\":\"1\",\"d3-selection\":\"1\",\"d3-shape\":\"1\",\"d3-time\":\"1\",\"d3-time-format\":\"2\",\"d3-timer\":\"1\",\"d3-transition\":\"1\",\"d3-voronoi\":\"1\",\"d3-zoom\":\"1\"};\n","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","export default function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n}\n\nexport function pair(a, b) {\n  return [a, b];\n}\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","import number from \"./number\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n}\n","import variance from \"./variance\";\n\nexport default function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return x;\n}\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import {slice} from \"./array\";\nimport bisect from \"./bisect\";\nimport constant from \"./constant\";\nimport extent from \"./extent\";\nimport identity from \"./identity\";\nimport range from \"./range\";\nimport {tickStep} from \"./ticks\";\nimport sturges from \"./threshold/sturges\";\n\nexport default function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisect(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","import {map} from \"../array\";\nimport ascending from \"../ascending\";\nimport number from \"../number\";\nimport quantile from \"../quantile\";\n\nexport default function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n}\n","import deviation from \"../deviation\";\n\nexport default function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n}\n","import number from \"./number\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n}\n","import ascending from \"./ascending\";\nimport number from \"./number\";\nimport quantile from \"./quantile\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return quantile(numbers.sort(ascending), 0.5);\n}\n","export default function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n}\n","export default function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n}\n","import ascending from \"./ascending\";\n\nexport default function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n}\n","export default function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n}\n","import min from \"./min\";\n\nexport default function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n","import transpose from \"./transpose\";\n\nexport default function() {\n  return transpose(arguments);\n}\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","var matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nexport default matcher;\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","import creator from \"./creator\";\nimport select from \"./select\";\n\nexport default function(name) {\n  return select(creator(name).call(document.documentElement));\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n}\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {lab as colorLab} from \"d3-color\";\nimport color from \"./color\";\n\nexport default function lab(start, end) {\n  var l = color((start = colorLab(start)).l, (end = colorLab(end)).l),\n      a = color(start.a, end.a),\n      b = color(start.b, end.b),\n      opacity = color(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {Timer, now} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n","export function linear(t) {\n  return +t;\n}\n","export function quadIn(t) {\n  return t * t;\n}\n\nexport function quadOut(t) {\n  return t * (2 - t);\n}\n\nexport function quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \"\"));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleRemove(name, interpolate) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant(name, i, value + \"\"), priority);\n}\n","function styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","export function expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nexport function expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nexport function expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {Transition} from \"./transition/index\";\nimport {SCHEDULED} from \"./transition/schedule\";\n\nvar root = [null];\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root, name, +i);\n      }\n    }\n  }\n\n  return null;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n}\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolate} from \"d3-interpolate\";\nimport {customEvent, event, mouse, select} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant\";\nimport BrushEvent from \"./event\";\nimport noevent, {nopropagation} from \"./noevent\";\n\nvar MODE_DRAG = {name: \"drag\"},\n    MODE_SPACE = {name: \"space\"},\n    MODE_HANDLE = {name: \"handle\"},\n    MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nexport function brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nexport function brushX() {\n  return brush(X);\n}\n\nexport function brushY() {\n  return brush(Y);\n}\n\nexport default function() {\n  return brush(XY);\n}\n\nfunction brush(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (event.touches) { if (event.changedTouches.length < event.touches.length) return noevent(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = event.target.__data__.type,\n        mode = (event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(event.view);\n    }\n\n    nopropagation();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation();\n      if (event.touches) {\n        if (event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        dragEnable(event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n\n    function keyupped() {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n","export var cos = Math.cos;\nexport var sin = Math.sin;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = pi * 2;\nexport var max = Math.max;\n","import {range} from \"d3-array\";\nimport {max, tau} from \"./math\";\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nexport default function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = range(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(range(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max(0, tau - padAngle * n) / k;\n    dx = k ? padAngle : tau / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n}\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport {cos, halfPi, sin} from \"./math\";\nimport {path} from \"d3-path\";\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nexport default function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi,\n        sa1 = endAngle.apply(this, argv) - halfPi,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi,\n        ta1 = endAngle.apply(this, argv) - halfPi;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","export default function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n}\n","export default function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n}\n","export default function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\n","export default function(a, b) {\n  return a - b;\n}\n","export default function(ring) {\n  var i = 0, n = ring.length, area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\n  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\n  return area;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(ring, hole) {\n  var i = -1, n = hole.length, c;\n  while (++i < n) if (c = ringContains(ring, hole[i])) return c;\n  return 0;\n}\n\nfunction ringContains(ring, point) {\n  var x = point[0], y = point[1], contains = -1;\n  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n    var pi = ring[i], xi = pi[0], yi = pi[1], pj = ring[j], xj = pj[0], yj = pj[1];\n    if (segmentContains(pi, pj, point)) return 0;\n    if (((yi > y) !== (yj > y)) && ((x < (xj - xi) * (y - yi) / (yj - yi) + xi))) contains = -contains;\n  }\n  return contains;\n}\n\nfunction segmentContains(a, b, c) {\n  var i; return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);\n}\n\nfunction collinear(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);\n}\n\nfunction within(p, q, r) {\n  return p <= q && q <= r || r <= q && q <= p;\n}\n","export default function() {}\n","import {extent, thresholdSturges, tickStep, range} from \"d3-array\";\nimport {slice} from \"./array\";\nimport ascending from \"./ascending\";\nimport area from \"./area\";\nimport constant from \"./constant\";\nimport contains from \"./contains\";\nimport noop from \"./noop\";\n\nvar cases = [\n  [],\n  [[[1.0, 1.5], [0.5, 1.0]]],\n  [[[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [0.5, 1.0]]],\n  [[[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 0.5], [1.0, 1.5]]],\n  [[[1.0, 0.5], [0.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 0.5]]],\n  [[[1.0, 1.5], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.5, 1.0]]],\n  [[[1.0, 1.5], [1.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 1.5]]],\n  []\n];\n\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      threshold = thresholdSturges,\n      smooth = smoothLinear;\n\n  function contours(values) {\n    var tz = threshold(values);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var domain = extent(values), start = domain[0], stop = domain[1];\n      tz = tickStep(start, stop, tz);\n      tz = range(Math.floor(start / tz) * tz, Math.floor(stop / tz) * tz, tz);\n    } else {\n      tz = tz.slice().sort(ascending);\n    }\n\n    return tz.map(function(value) {\n      return contour(values, value);\n    });\n  }\n\n  // Accumulate, smooth contour rings, assign holes to exterior rings.\n  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js\n  function contour(values, value) {\n    var polygons = [],\n        holes = [];\n\n    isorings(values, value, function(ring) {\n      smooth(ring, values, value);\n      if (area(ring) > 0) polygons.push([ring]);\n      else holes.push(ring);\n    });\n\n    holes.forEach(function(hole) {\n      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {\n        if (contains((polygon = polygons[i])[0], hole) !== -1) {\n          polygon.push(hole);\n          return;\n        }\n      }\n    });\n\n    return {\n      type: \"MultiPolygon\",\n      value: value,\n      coordinates: polygons\n    };\n  }\n\n  // Marching squares with isolines stitched into rings.\n  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js\n  function isorings(values, value, callback) {\n    var fragmentByStart = new Array,\n        fragmentByEnd = new Array,\n        x, y, t0, t1, t2, t3;\n\n    // Special case for the first row (y = -1, t2 = t3 = 0).\n    x = y = -1;\n    t1 = values[0] >= value;\n    cases[t1 << 1].forEach(stitch);\n    while (++x < dx - 1) {\n      t0 = t1, t1 = values[x + 1] >= value;\n      cases[t0 | t1 << 1].forEach(stitch);\n    }\n    cases[t1 << 0].forEach(stitch);\n\n    // General case for the intermediate rows.\n    while (++y < dy - 1) {\n      x = -1;\n      t1 = values[y * dx + dx] >= value;\n      t2 = values[y * dx] >= value;\n      cases[t1 << 1 | t2 << 2].forEach(stitch);\n      while (++x < dx - 1) {\n        t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;\n        t3 = t2, t2 = values[y * dx + x + 1] >= value;\n        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);\n      }\n      cases[t1 | t2 << 3].forEach(stitch);\n    }\n\n    // Special case for the last row (y = dy - 1, t0 = t1 = 0).\n    x = -1;\n    t2 = values[y * dx] >= value;\n    cases[t2 << 2].forEach(stitch);\n    while (++x < dx - 1) {\n      t3 = t2, t2 = values[y * dx + x + 1] >= value;\n      cases[t2 << 2 | t3 << 3].forEach(stitch);\n    }\n    cases[t2 << 3].forEach(stitch);\n\n    function stitch(line) {\n      var start = [line[0][0] + x, line[0][1] + y],\n          end = [line[1][0] + x, line[1][1] + y],\n          startIndex = index(start),\n          endIndex = index(end),\n          f, g;\n      if (f = fragmentByEnd[startIndex]) {\n        if (g = fragmentByStart[endIndex]) {\n          delete fragmentByEnd[f.end];\n          delete fragmentByStart[g.start];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[f.start] = fragmentByEnd[g.end] = {start: f.start, end: g.end, ring: f.ring.concat(g.ring)};\n          }\n        } else {\n          delete fragmentByEnd[f.end];\n          f.ring.push(end);\n          fragmentByEnd[f.end = endIndex] = f;\n        }\n      } else if (f = fragmentByStart[endIndex]) {\n        if (g = fragmentByEnd[startIndex]) {\n          delete fragmentByStart[f.start];\n          delete fragmentByEnd[g.end];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[g.start] = fragmentByEnd[f.end] = {start: g.start, end: f.end, ring: g.ring.concat(f.ring)};\n          }\n        } else {\n          delete fragmentByStart[f.start];\n          f.ring.unshift(start);\n          fragmentByStart[f.start = startIndex] = f;\n        }\n      } else {\n        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {start: startIndex, end: endIndex, ring: [start, end]};\n      }\n    }\n  }\n\n  function index(point) {\n    return point[0] * 2 + point[1] * (dx + 1) * 4;\n  }\n\n  function smoothLinear(ring, values, value) {\n    ring.forEach(function(point) {\n      var x = point[0],\n          y = point[1],\n          xt = x | 0,\n          yt = y | 0,\n          v0,\n          v1 = values[yt * dx + xt];\n      if (x > 0 && x < dx && xt === x) {\n        v0 = values[yt * dx + xt - 1];\n        point[0] = x + (value - v0) / (v1 - v0) - 0.5;\n      }\n      if (y > 0 && y < dy && yt === y) {\n        v0 = values[(yt - 1) * dx + xt];\n        point[1] = y + (value - v0) / (v1 - v0) - 0.5;\n      }\n    });\n  }\n\n  contours.contour = contour;\n\n  contours.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\n    if (!(_0 > 0) || !(_1 > 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, contours;\n  };\n\n  contours.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), contours) : threshold;\n  };\n\n  contours.smooth = function(_) {\n    return arguments.length ? (smooth = _ ? smoothLinear : noop, contours) : smooth === smoothLinear;\n  };\n\n  return contours;\n}\n","// TODO Optimize edge cases.\n// TODO Optimize index calculation.\n// TODO Optimize arguments.\nexport function blurX(source, target, r) {\n  var n = source.width,\n      m = source.height,\n      w = (r << 1) + 1;\n  for (var j = 0; j < m; ++j) {\n    for (var i = 0, sr = 0; i < n + r; ++i) {\n      if (i < n) {\n        sr += source.data[i + j * n];\n      }\n      if (i >= r) {\n        if (i >= w) {\n          sr -= source.data[i - w + j * n];\n        }\n        target.data[i - r + j * n] = sr / Math.min(i + 1, n - 1 + w - i, w);\n      }\n    }\n  }\n}\n\n// TODO Optimize edge cases.\n// TODO Optimize index calculation.\n// TODO Optimize arguments.\nexport function blurY(source, target, r) {\n  var n = source.width,\n      m = source.height,\n      w = (r << 1) + 1;\n  for (var i = 0; i < n; ++i) {\n    for (var j = 0, sr = 0; j < m + r; ++j) {\n      if (j < m) {\n        sr += source.data[i + j * n];\n      }\n      if (j >= r) {\n        if (j >= w) {\n          sr -= source.data[i + (j - w) * n];\n        }\n        target.data[i + (j - r) * n] = sr / Math.min(j + 1, m - 1 + w - j, w);\n      }\n    }\n  }\n}\n","import {max, range, tickStep} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {blurX, blurY} from \"./blur\";\nimport constant from \"./constant\";\nimport contours from \"./contours\";\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nexport default function() {\n  var x = defaultX,\n      y = defaultY,\n      dx = 960,\n      dy = 500,\n      r = 20, // blur radius\n      k = 2, // log2(grid cell size)\n      o = r * 3, // grid offset, to pad for blur\n      n = (dx + o * 2) >> k, // grid width\n      m = (dy + o * 2) >> k, // grid height\n      threshold = constant(20);\n\n  function density(data) {\n    var values0 = new Float32Array(n * m),\n        values1 = new Float32Array(n * m);\n\n    data.forEach(function(d, i, data) {\n      var xi = (x(d, i, data) + o) >> k,\n          yi = (y(d, i, data) + o) >> k;\n      if (xi >= 0 && xi < n && yi >= 0 && yi < m) {\n        ++values0[xi + yi * n];\n      }\n    });\n\n    // TODO Optimize.\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n\n    var tz = threshold(values0);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var stop = max(values0);\n      tz = tickStep(0, stop, tz);\n      tz = range(0, Math.floor(stop / tz) * tz, tz);\n      tz.shift();\n    }\n\n    return contours()\n        .thresholds(tz)\n        .size([n, m])\n      (values0)\n        .map(transform);\n  }\n\n  function transform(geometry) {\n    geometry.value *= Math.pow(2, -2 * k); // Density in points per square pixel.\n    geometry.coordinates.forEach(transformPolygon);\n    return geometry;\n  }\n\n  function transformPolygon(coordinates) {\n    coordinates.forEach(transformRing);\n  }\n\n  function transformRing(coordinates) {\n    coordinates.forEach(transformPoint);\n  }\n\n  // TODO Optimize.\n  function transformPoint(coordinates) {\n    coordinates[0] = coordinates[0] * Math.pow(2, k) - o;\n    coordinates[1] = coordinates[1] * Math.pow(2, k) - o;\n  }\n\n  function resize() {\n    o = r * 3;\n    n = (dx + o * 2) >> k;\n    m = (dy + o * 2) >> k;\n    return density;\n  }\n\n  density.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), density) : x;\n  };\n\n  density.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), density) : y;\n  };\n\n  density.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\n    if (!(_0 >= 0) && !(_0 >= 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, resize();\n  };\n\n  density.cellSize = function(_) {\n    if (!arguments.length) return 1 << k;\n    if (!((_ = +_) >= 1)) throw new Error(\"invalid cell size\");\n    return k = Math.floor(Math.log(_) / Math.LN2), resize();\n  };\n\n  density.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), density) : threshold;\n  };\n\n  density.bandwidth = function(_) {\n    if (!arguments.length) return Math.sqrt(r * (r + 1));\n    if (!((_ = +_) >= 0)) throw new Error(\"invalid bandwidth\");\n    return r = Math.round((Math.sqrt(4 * _ * _ + 1) - 1) / 2), resize();\n  };\n\n  return density;\n}\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatRows = csv.formatRows;\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatRows = tsv.formatRows;\n","function responseBlob(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.blob();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseBlob);\n}\n","function responseArrayBuffer(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.arrayBuffer();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseArrayBuffer);\n}\n","function responseText(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.text();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseText);\n}\n","import {csvParse, dsvFormat, tsvParse} from \"d3-dsv\";\nimport text from \"./text\";\n\nfunction dsvParse(parse) {\n  return function(input, init, row) {\n    if (arguments.length === 2 && typeof init === \"function\") row = init, init = undefined;\n    return text(input, init).then(function(response) {\n      return parse(response, row);\n    });\n  };\n}\n\nexport default function dsv(delimiter, input, init, row) {\n  if (arguments.length === 3 && typeof init === \"function\") row = init, init = undefined;\n  var format = dsvFormat(delimiter);\n  return text(input, init).then(function(response) {\n    return format.parse(response, row);\n  });\n}\n\nexport var csv = dsvParse(csvParse);\nexport var tsv = dsvParse(tsvParse);\n","export default function(input, init) {\n  return new Promise(function(resolve, reject) {\n    var image = new Image;\n    for (var key in init) image[key] = init[key];\n    image.onerror = reject;\n    image.onload = function() { resolve(image); };\n    image.src = input;\n  });\n}\n","function responseJson(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.json();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseJson);\n}\n","import text from \"./text\";\n\nfunction parser(type) {\n  return function(input, init)  {\n    return text(input, init).then(function(text) {\n      return (new DOMParser).parseFromString(text, type);\n    });\n  };\n}\n\nexport default parser(\"application/xml\");\n\nexport var html = parser(\"text/html\");\n\nexport var svg = parser(\"image/svg+xml\");\n","export default function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function() {\n  return (Math.random() - 0.5) * 1e-6;\n}\n","export default function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n","export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n","export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n","import tree_add, {addAll as tree_addAll} from \"./add\";\nimport tree_cover from \"./cover\";\nimport tree_data from \"./data\";\nimport tree_extent from \"./extent\";\nimport tree_find from \"./find\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove\";\nimport tree_root from \"./root\";\nimport tree_size from \"./size\";\nimport tree_visit from \"./visit\";\nimport tree_visitAfter from \"./visitAfter\";\nimport tree_x, {defaultX} from \"./x\";\nimport tree_y, {defaultY} from \"./y\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport {quadtree} from \"d3-quadtree\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n","import Quad from \"./quad\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n","export default function() {\n  return this._root;\n}\n","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n","import Quad from \"./quad\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n","import Quad from \"./quad\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport {map} from \"d3-collection\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nexport default function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {map} from \"d3-collection\";\nimport {timer} from \"d3-timer\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport {quadtree} from \"d3-quadtree\";\nimport {x, y} from \"./simulation\";\n\nexport default function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(), l += x * x;\n        if (y === 0) y = jiggle(), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(), l += x * x;\n      if (y === 0) y = jiggle(), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n","import constant from \"./constant\";\n\nexport default function(radius, x, y) {\n  var nodes,\n      strength = constant(0.1),\n      strengths,\n      radiuses;\n\n  if (typeof radius !== \"function\") radius = constant(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x || 1e-6,\n          dy = node.y - y || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      node.vy += dy * k;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _, initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n","import constant from \"./constant\";\n\nexport default function(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n","import constant from \"./constant\";\n\nexport default function(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nexport default function() {\n  return new Adder;\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add(temp, y, this.t);\n    add(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function noop() {}\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n","import adder from \"./adder\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nexport var areaRingSum = adder();\n\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum.reset();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","import adder from \"./adder\";\nimport {areaStream, areaRingSum} from \"./area\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport {abs, degrees, epsilon, radians} from \"./math\";\nimport stream from \"./stream\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum = adder(),\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n","import {asin, atan2, cos, degrees, epsilon, epsilon2, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00, phi00, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  stream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n","import compose from \"./compose\";\nimport {asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport constant from \"./constant\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math\";\nimport {rotateRadians} from \"./rotation\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","import noop from \"../noop\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","import {abs, epsilon} from \"./math\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import pointEqual from \"../pointEqual\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","import adder from \"./adder\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian\";\nimport {asin, atan2, cos, epsilon, halfPi, pi, quarterPi, sin, tau} from \"./math\";\n\nvar sum = adder();\n\nexport default function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum.reset();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\n}\n","import clipBuffer from \"./buffer\";\nimport clipRejoin from \"./rejoin\";\nimport {epsilon, halfPi} from \"../math\";\nimport polygonContains from \"../polygonContains\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","import clip from \"./index\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian\";\nimport {circleStream} from \"../circle\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math\";\nimport pointEqual from \"../pointEqual\";\nimport clip from \"./index\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon;\n            point1[1] += epsilon;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n","import {abs, epsilon} from \"../math\";\nimport clipBuffer from \"./buffer\";\nimport clipLine from \"./line\";\nimport clipRejoin from \"./rejoin\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n","import clipRectangle from \"./rectangle\";\n\nexport default function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n","import adder from \"./adder\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar lengthSum = adder(),\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum.reset();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n","import length from \"./length\";\n\nvar coordinates = [null, null],\n    object = {type: \"LineString\", coordinates: coordinates};\n\nexport default function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}\n","import {default as polygonContains} from \"./polygonContains\";\nimport {default as distance} from \"./distance\";\nimport {epsilon, radians} from \"./math\";\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nexport default function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n}\n","import {range} from \"d3-array\";\nimport {abs, ceil, epsilon} from \"./math\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nexport default function graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nexport function graticule10() {\n  return graticule()();\n}\n","import {asin, atan2, cos, degrees, haversin, radians, sin, sqrt} from \"./math\";\n\nexport default function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n","import adder from \"../adder\";\nimport {abs} from \"../math\";\nimport noop from \"../noop\";\n\nvar areaSum = adder(),\n    areaRingSum = adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","export default function(x) {\n  return x;\n}\n","import noop from \"../noop\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n","import {sqrt} from \"../math\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n","import {tau} from \"../math\";\nimport noop from \"../noop\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n","import adder from \"../adder\";\nimport {sqrt} from \"../math\";\nimport noop from \"../noop\";\n\nvar lengthSum = adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","export default function PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n","import identity from \"../identity\";\nimport stream from \"../stream\";\nimport pathArea from \"./area\";\nimport pathBounds from \"./bounds\";\nimport pathCentroid from \"./centroid\";\nimport PathContext from \"./context\";\nimport pathMeasure from \"./measure\";\nimport PathString from \"./string\";\n\nexport default function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","import {default as geoStream} from \"../stream\";\nimport boundsStream from \"../path/bounds\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n","import {cartesian} from \"../cartesian\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math\";\nimport {transformer} from \"../transform\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import clipAntimeridian from \"../clip/antimeridian\";\nimport clipCircle from \"../clip/circle\";\nimport clipRectangle from \"../clip/rectangle\";\nimport compose from \"../compose\";\nimport identity from \"../identity\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math\";\nimport {rotateRadians} from \"../rotation\";\nimport {transformer} from \"../transform\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit\";\nimport resample from \"./resample\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy) {\n  function transform(x, y) {\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k, (dy - y) / k];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, alpha) {\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [ai * x - bi * y + ci, fi - bi * x - ai * y];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, alpha).apply(null, project(lambda, phi)),\n        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import {degrees, pi, radians} from \"../math\";\nimport {projectionMutator} from \"./index\";\n\nexport function conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n","import {abs, asin, atan2, cos, epsilon, sign, sin, sqrt} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {cylindricalEqualAreaRaw} from \"./cylindricalEqualArea\";\n\nexport function conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n","import {asin, cos, sin} from \"../math\";\n\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n","import conicEqualArea from \"./conicEqualArea\";\n\nexport default function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n","import {epsilon} from \"../math\";\nimport albers from \"./albers\";\nimport conicEqualArea from \"./conicEqualArea\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit\";\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nexport default function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function(width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function(height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n","import {asin, atan2, cos, sin, sqrt} from \"../math\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n","import {asin, sqrt} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nexport default function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n","import {acos, sin} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nexport default function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n","import {atan, exp, halfPi, log, pi, tan, tau} from \"../math\";\nimport rotation from \"../rotation\";\nimport projection from \"./index\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n","import {abs, atan, atan2, cos, epsilon, halfPi, log, pow, sign, sin, sqrt, tan} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {mercatorRaw} from \"./mercator\";\n\nfunction tany(y) {\n  return tan((halfPi + y) / 2);\n}\n\nexport function conicConformalRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\n    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\n    var r = f / pow(tany(y), n);\n    return [r * sin(n * x), f - r * cos(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n}\n","import projection from \"./index\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n","import {abs, atan2, cos, epsilon, sign, sin, sqrt} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {equirectangularRaw} from \"./equirectangular\";\n\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n","import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nexport default function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n","import clipRectangle from \"../clip/rectangle\";\nimport identity from \"../identity\";\nimport {transformer} from \"../transform\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit\";\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nexport default function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity, // scale, translate and reflect\n      x0 = null, y0, x1, y1, // clip extent\n      postclip = identity,\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));\n    },\n    postclip: function(_) {\n      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    },\n    fitWidth: function(width, object) {\n      return fitWidth(projection, width, object);\n    },\n    fitHeight: function(height, object) {\n      return fitHeight(projection, height, object);\n    }\n  };\n}\n","import projection from \"./index\";\nimport {abs, epsilon} from \"../math\";\n\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n","import {asin, cos, epsilon, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n","import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nexport default function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n","import {atan, exp, halfPi, log, tan} from \"../math\";\nimport {mercatorProjection} from \"./mercator\";\n\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n","function defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n}\n","function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n","import node_count from \"./count\";\nimport node_each from \"./each\";\nimport node_eachBefore from \"./eachBefore\";\nimport node_eachAfter from \"./eachAfter\";\nimport node_sum from \"./sum\";\nimport node_sort from \"./sort\";\nimport node_path from \"./path\";\nimport node_ancestors from \"./ancestors\";\nimport node_descendants from \"./descendants\";\nimport node_leaves from \"./leaves\";\nimport node_links from \"./links\";\n\nexport default function hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n","export default function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n}\n","export default function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n}\n","export default function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n}\n","export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n","export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n","export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n","export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n","export default function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n}\n","export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n","export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n","export var slice = Array.prototype.slice;\n\nexport function shuffle(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n","import {shuffle, slice} from \"../array\";\n\nexport default function(circles) {\n  var i = 0, n = (circles = shuffle(slice.call(circles))).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n}\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n","import enclose from \"./enclose\";\n\nfunction place(b, a, c) {\n  var dx = b.x - a.x, x, a2,\n      dy = b.y - a.y, y, b2,\n      d2 = dx * dx + dy * dy;\n  if (d2) {\n    a2 = a.r + c.r, a2 *= a2;\n    b2 = b.r + c.r, b2 *= b2;\n    if (a2 > b2) {\n      x = (d2 + b2 - a2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n      c.x = b.x - x * dx - y * dy;\n      c.y = b.y - x * dy + y * dx;\n    } else {\n      x = (d2 + a2 - b2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n      c.x = a.x + x * dx - y * dy;\n      c.y = a.y + x * dy + y * dx;\n    }\n  } else {\n    c.x = a.x + c.r;\n    c.y = a.y;\n  }\n}\n\nfunction intersects(a, b) {\n  var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nexport function packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node(a), b = new Node(b), c = new Node(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nexport default function(circles) {\n  packEnclose(circles);\n  return circles;\n}\n","export function optional(f) {\n  return f == null ? null : required(f);\n}\n\nexport function required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n","export function constantZero() {\n  return 0;\n}\n\nexport default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {packEnclose} from \"./siblings\";\nimport {optional} from \"../accessors\";\nimport constant, {constantZero} from \"../constant\";\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nexport default function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n","export default function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n","import roundNode from \"./treemap/round\";\nimport treemapDice from \"./treemap/dice\";\n\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n}\n","import {required} from \"./accessors\";\nimport {Node, computeHeight} from \"./hierarchy/index\";\n\nvar keyPrefix = \"$\", // Protect against keys like “__proto__”.\n    preroot = {depth: -1},\n    ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nexport default function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n}\n","import {Node} from \"./hierarchy/index\";\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n","import treemapDice from \"./dice\";\nimport treemapSlice from \"./slice\";\n\nexport var phi = (1 + Math.sqrt(5)) / 2;\n\nexport function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nexport default (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n","import roundNode from \"./round\";\nimport squarify from \"./squarify\";\nimport {required} from \"../accessors\";\nimport constant, {constantZero} from \"../constant\";\n\nexport default function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n}\n","import dice from \"./dice\";\nimport slice from \"./slice\";\n\nexport default function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? slice : dice)(parent, x0, y0, x1, y1);\n}\n","import treemapDice from \"./dice\";\nimport treemapSlice from \"./slice\";\nimport {phi, squarifyRatio} from \"./squarify\";\n\nexport default (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n","export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n}\n","export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n}\n","// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nexport default function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n}\n","import cross from \"./cross\";\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nexport default function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n}\n","export default function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n}\n","export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n}\n","export default function() {\n  return Math.random();\n}\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\nimport normal from \"./normal\";\n\nexport default (function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\nimport irwinHall from \"./irwinHall\";\n\nexport default (function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n})(defaultSource);\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport constant from \"./constant\";\nimport nice from \"./nice\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport default function log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n","import constant from \"./constant\";\nimport {linearish} from \"./linear\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nexport default function pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nexport function sqrt() {\n  return pow().exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute} from \"./duration\";\n\nvar hour = interval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","import {calendar} from \"./time\";\nimport {utcFormat} from \"d3-time-format\";\nimport {utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcMillisecond} from \"d3-time\";\n\nexport default function() {\n  return calendar(utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcMillisecond, utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n}\n","import {linearish} from \"./linear\";\n\nexport default function sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi) {\n          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport area from \"./area\";\nimport {lineRadial} from \"./lineRadial\"\n\nexport default function() {\n  var a = area().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n}\n","export default function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n}\n","export var slice = Array.prototype.slice;\n","import {path} from \"d3-path\";\nimport {slice} from \"../array\";\nimport constant from \"../constant\";\nimport {x as pointX, y as pointY} from \"../point\";\nimport pointRadial from \"../pointRadial\";\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x = pointX,\n      y = pointY,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x.apply(this, (argv[0] = s, argv)), +y.apply(this, argv), +x.apply(this, (argv[0] = t, argv)), +y.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), link) : x;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), link) : y;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nexport function linkHorizontal() {\n  return link(curveHorizontal);\n}\n\nexport function linkVertical() {\n  return link(curveVertical);\n}\n\nexport function linkRadial() {\n  var l = link(curveRadial);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","import none from \"./none\";\nimport {sum} from \"./ascending\";\n\nexport default function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum),\n      order = none(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  return none(series).reverse();\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nexport var identity = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nexport default function transform(node) {\n  return node.__zoom || identity;\n}\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolateZoom} from \"d3-interpolate\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant\";\nimport ZoomEvent from \"./event\";\nimport {Transform, identity} from \"./transform\";\nimport noevent, {nopropagation} from \"./noevent\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultExtent() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity;\n}\n\nfunction defaultWheelDelta() {\n  return -event.deltaY * (event.deltaMode ? 120 : 1) / 500;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nfunction defaultConstrain(transform, extent, translateExtent) {\n  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],\n      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],\n      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],\n      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];\n  return transform.translate(\n    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n  );\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      extent = defaultExtent,\n      constrain = defaultConstrain,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable,\n      scaleExtent = [0, Infinity],\n      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\n      duration = 250,\n      interpolate = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection) {\n    selection\n        .property(\"__zoom\", defaultTransform)\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n      .filter(touchable)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property(\"__zoom\", defaultTransform);\n    if (collection !== selection) {\n      schedule(collection, transform);\n    } else {\n      selection.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection, k) {\n    zoom.scaleTo(selection, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection, k) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\n    });\n  };\n\n  zoom.translateBy = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments), translateExtent);\n    });\n  };\n\n  zoom.translateTo = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p = centroid(e);\n      return constrain(identity.translate(p[0], p[1]).scale(t.k).translate(\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n      ), e, translateExtent);\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition, transform, center) {\n    transition\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this),\n        x0 = event.clientX,\n        y0 = event.clientY;\n\n    dragDisable(event.view);\n    nopropagation();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent();\n      if (!g.moved) {\n        var dx = event.clientX - x0, dy = event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent, translateExtent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      dragEnable(event.view, g.moved);\n      noevent();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments), translateExtent);\n\n    noevent();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        started,\n        n = touches.length, i, t, p;\n\n    nopropagation();\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        n = touches.length, i, t, p, l;\n\n    noevent();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent, translateExtent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        n = touches.length, i, t;\n\n    nopropagation();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else g.end();\n  }\n\n  zoom.wheelDelta = function(_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\n  };\n\n  zoom.constrain = function(_) {\n    return arguments.length ? (constrain = _, zoom) : constrain;\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  return zoom;\n}\n","export default function ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n","export function testObject(input) {\n  if (input !== null && typeof input.getTime === 'function' && !isNaN(input.getTime())) {\n    return true;\n  }\n  return false;\n}\n\nexport function testString(input) {\n  const ISO_8601 = /^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?$/i;\n  return ISO_8601.test(input);\n}\n\nexport default function (input) {\n  if (typeof input === 'object') {\n    return testObject(input);\n  } else if (typeof input === 'string') {\n    return testString(input);\n  }\n  return false;\n}\n","export default function (len) {\n  const list = [];\n  for (let i = 0; i < len; i++) {\n    list.push(null);\n  }\n  return list;\n}\n","import createNullList from '../utils/create-null-list';\nimport { each } from '../../utils/each';\n\nexport function appendColumn(str, input) {\n  const self = this;\n  const args = Array.prototype.slice.call(arguments, 2);\n  const label = (str !== undefined) ? str : null;\n\n  if (typeof input === 'function') {\n    self.matrix[0].push(label);\n    each(self.matrix, function(row, i) {\n      let cell;\n      if (i > 0) {\n        cell = input.call(self, row, i);\n        if (typeof cell === 'undefined') {\n          cell = null;\n        }\n        self.matrix[i].push(cell);\n      }\n    });\n  }\n\n  else if (!input || input instanceof Array) {\n    input = input || [];\n\n    if (input.length <= self.matrix.length - 1) {\n      input = input.concat(createNullList(self.matrix.length - 1 - input.length));\n    }\n    else {\n      // If this new column is longer than existing columns,\n      // we need to update the rest to match ...\n      each(input, function(value, i){\n        if (self.matrix.length -1 < input.length) {\n          appendRow.call(self, String(self.matrix.length));\n        }\n      });\n    }\n\n    self.matrix[0].push(label);\n    each(input, function(value, i){\n      self.matrix[i+1][self.matrix[0].length-1] = value;\n    });\n\n  }\n\n  return self;\n}\n\nexport function appendRow(str, input) {\n  const self = this;\n  const args = Array.prototype.slice.call(arguments, 2);\n  const label = (str !== undefined) ? str : null;\n  const newRow = [];\n\n  newRow.push(label);\n\n  if (typeof input === 'function') {\n    each(self.matrix[0], function(label, i){\n      let col;\n      let cell;\n      if (i > 0) {\n        col = self.selectColumn(i);\n        cell = input.call(self, col, i);\n        if (typeof cell === 'undefined') {\n          cell = null;\n        }\n        newRow.push(cell);\n      }\n    });\n    self.matrix.push(newRow);\n  }\n\n  else if (!input || input instanceof Array) {\n    input = input || [];\n\n    if (input.length <= self.matrix[0].length - 1) {\n      input = input.concat( createNullList( self.matrix[0].length - 1 - input.length ) );\n    }\n    else {\n      each(input, function(value, i){\n        if (self.matrix[0].length -1 < input.length) {\n          appendColumn.call(self, String( self.matrix[0].length));\n        }\n      });\n    }\n\n    self.matrix.push(newRow.concat(input));\n  }\n\n  return self;\n}\n","/**\n * Strip html tags from string\n *\n * @param  {string} string The string to strip\n * @return {string}\n * @public\n */\n\nexport function stripHtmlTags(inputString) {\n  return inputString.replace(/(<([^>]+)>)/ig, '');\n}\n","import { each } from '../../utils/each';\nimport { extend } from '../../utils/extend';\n\nfunction average(arr, start, end){\n  var set = arr.slice(start||0, (end ? end+1 : arr.length)),\n      sum = 0,\n      avg = null;\n\n  // Add numeric values\n  each(set, function(val, i){\n    if (typeof val === 'number' && !isNaN(parseFloat(val))) {\n      sum += parseFloat(val);\n    }\n  });\n  return sum / set.length;\n}\n\nfunction maximum(arr, start, end){\n  var set = arr.slice(start||0, (end ? end+1 : arr.length)),\n      nums = [];\n\n  // Pull numeric values\n  each(set, function(val, i){\n    if (typeof val === 'number' && !isNaN(parseFloat(val))) {\n      nums.push(parseFloat(val));\n    }\n  });\n  return Math.max.apply(Math, nums);\n}\n\nfunction minimum(arr, start, end){\n  var set = arr.slice(start||0, (end ? end+1 : arr.length)),\n      nums = [];\n\n  // Pull numeric values\n  each(set, function(val, i){\n    if (typeof val === 'number' && !isNaN(parseFloat(val))) {\n      nums.push(parseFloat(val));\n    }\n  });\n  return Math.min.apply(Math, nums);\n}\n\nfunction sum(arr, start, end){\n  // Copy set with given range\n  var set = arr.slice(start||0, (end ? end+1 : arr.length)),\n      sum = 0;\n\n  // Add numeric values\n  each(set, function(val, i){\n    if (typeof val === 'number' && !isNaN(parseFloat(val))) {\n      sum += parseFloat(val);\n    }\n  });\n  return sum;\n}\n\nconst getColumnAverage = function (arr) {\n  return average(arr, 1);\n};\nconst getRowAverage = getColumnAverage;\n\nconst getColumnSum = function (arr) {\n  return sum(arr, 1);\n};\nconst getRowSum = getColumnSum;\n\nconst getColumnMaximum = function (arr) {\n  return maximum(arr, 1);\n};\nconst getRowMaximum = getColumnMaximum;\n\nconst getColumnMinimum = function (arr) {\n  return minimum(arr, 1);\n};\nconst getRowMinimum = getColumnMinimum;\n\nconst getColumnLabel = function (arr) {\n  return arr[0];\n};\nconst getRowIndex = getColumnLabel;\n\nexport default {\n  average,\n  maximum,\n  minimum,\n  sum,\n  getColumnAverage,\n  getRowAverage,\n  getColumnSum,\n  getRowSum,\n  getColumnMaximum,\n  getRowMaximum,\n  getColumnMinimum,\n  getRowMinimum,\n  getColumnLabel,\n  getRowIndex,\n};\n","// Modifiers\nimport * as append from './modifiers/append';\nimport * as del from './modifiers/delete';\nimport * as filter from './modifiers/filter';\nimport * as insert from './modifiers/insert';\nimport * as select from './modifiers/select';\nimport * as sort from './modifiers/sort';\nimport * as update from './modifiers/update';\n\n// Utils\nimport analyses from './utils/analyses';\nimport { extend } from '../utils/extend';\nimport parsers from './utils/parsers';\n\nexport const Dataset = function () {\n  if (this instanceof Dataset === false) {\n    return new Dataset();\n  }\n\n  this.matrix = [\n    ['Index']\n  ];\n  this.meta = {\n    type: undefined\n  };\n}\n\nDataset.prototype.data = function (arr) {\n  if (!arguments.length) return this.matrix;\n  this.matrix = (arr instanceof Array ? arr : null);\n  return this;\n};\n\nDataset.prototype.set = function (coords, value) {\n  if (arguments.length < 2 || coords.length < 2) {\n    throw Error('Incorrect arguments provided for #set method');\n  }\n\n  var colIndex = 'number' === typeof coords[0] ? coords[0] : this.matrix[0].indexOf(coords[0]),\n      rowIndex = 'number' === typeof coords[1] ? coords[1] : select.selectColumn.call(this, 0).indexOf(coords[1]);\n\n  var colResult = select.selectColumn.call(this, coords[0]),\n      rowResult = select.selectRow.call(this, coords[1]);\n\n  // Column doesn't exist, create and reset colIndex\n  if (colResult.length < 1) {\n    append.appendColumn.call(this, String(coords[0]));\n    colIndex = this.matrix[0].length - 1;\n  }\n\n  // Row doesn't exist, create and reset rowIndex\n  if (rowResult.length < 1) {\n    append.appendRow.call(this, String(coords[1]));\n    rowIndex = this.matrix.length - 1;\n  }\n\n  // Set provided value\n  this.matrix[ rowIndex ][ colIndex ] = value;\n  return this;\n};\n\nDataset.prototype.type = function(str){\n  if (!arguments.length) return this.meta['type'];\n  this.meta['type'] = (str ? String(str) : undefined);\n  return this;\n};\n\nextend(Dataset.prototype, append);\nextend(Dataset.prototype, del);\nextend(Dataset.prototype, filter);\nextend(Dataset.prototype, insert);\nextend(Dataset.prototype, select);\nextend(Dataset.prototype, sort);\nextend(Dataset.prototype, update);\nextend(Dataset.prototype, analyses);\nDataset.parser = parsers(Dataset);\n\nexport default Dataset;\n","export default {\n  render: function(){\n    var html = '',\n        artifacts = this.view._artifacts.spinner = {},\n        height = this.height() || 35,\n        offsetPadding = (height - 35) / 2,\n        prefixes = ['webkit', 'Moz', 'ms', 'O'],\n        radius = this.view._artifacts.radius = 0,\n        spinner;\n\n    // Build DOM element\n    html += '<div class=\"' + this.theme() + '\">';\n    html +=   '<div class=\"keen-spinner-container\" style=\"height: ' + height + 'px; padding-top: ' + offsetPadding + 'px;\">';\n    html +=     '<div class=\"keen-spinner-indicator\"></div>';\n    html +=   '</div>';\n    html += '</div>';\n    this.el().innerHTML = html;\n\n    spinner = this.el().querySelector('.keen-spinner-indicator');\n    if (spinner.style.animationName === undefined) {\n      radius = 0;\n      artifacts.interval = setInterval(function(){\n        radius = (radius === 350) ? 0 : radius + 10;\n        for (var i = 0; i < prefixes.length; i++) {\n          spinner.style[prefixes[i]] = 'rotate(' + artifacts.radius + 'deg)';\n        }\n      }, 15);\n    }\n  },\n  update: function(){\n    // no special update handling\n    this.render();\n  },\n  destroy: function(){\n    if (this.view._artifacts.spinner) {\n      if (this.view._artifacts.spinner.interval) {\n        clearInterval(this.view._artifacts.spinner.interval);\n      }\n      this.view._artifacts.spinner.radius = 0;\n      try {\n        delete this.view._artifacts.spinner;\n      }\n      catch (e) {\n        this.view._artifacts.spinner = undefined;\n      }\n    }\n    this.el().innerHTML = '';\n  }\n};\n","import { each } from '../../utils/each';\n\nconst defaults = {\n  height: undefined,\n  width: undefined,\n  stickyHeader: true,\n  stickyFooter: false\n};\n\nfunction _generateTableRows(dataset, colWidths, colAligns) {\n  var html = '';\n  for (var i = 0; i < dataset.length; i++) {\n    if (i > 0) {\n      html +=   '<tr>';\n      for (var j = 0; j < dataset[i].length; j++) {\n        html +=   '<td style=\"min-width: '+ (10 * colWidths[j]) +'px; text-align: ' + colAligns[j] + ';\">' + dataset[i][j] + '</td>';\n      }\n      html +=   '</tr>';\n    }\n  }\n  return html;\n}\n\nexport default {\n  render: function(){\n    var dataset = this.data(),\n        el = this.el(),\n        height = (this.height() || defaults.height) - this.el().offsetHeight,\n        theme = this.theme(),\n        width = this.width() || defaults.width;\n\n    var html = '',\n        colAligns = new Array(dataset[0].length),\n        colWidths = new Array(dataset[0].length),\n        fixedHeader;\n\n    var isEmpty = dataset.length === 1 && dataset[0].length === 0;\n    if (isEmpty) {\n      this.message('No data to display');\n      return;\n    }\n\n    // Calculate max column widths\n    each(dataset, function(row){\n      each(row, function(cell, i){\n        if (!colWidths[i]) {\n          colWidths[i] = 0;\n        }\n        colAligns[i] = (typeof cell === 'number') ? 'right' : 'left';\n        colWidths[i] = (String(cell).length > colWidths[i]) ? String(cell).length : colWidths[i];\n      });\n    });\n\n    // Open wrapper\n    html += '<div class=\"' + theme + '-table\" style=\"height: '+(height ? height+'px' : 'auto')+'; width: '+(width ? width+'px' : 'auto')+';\">';\n\n    // Static, scrollable table\n    html +=   '<table class=\"' + theme + '-table-dataset\">';\n    html +=     '<thead>';\n    html +=       '<tr>';\n    for (var i = 0; i < dataset[0].length; i++) {\n      html +=       '<th style=\"width: '+ (10 * colWidths[i]) +'px; text-align: ' + colAligns[i] + ';\">' + dataset[0][i] + '</th>';\n    }\n    html +=       '</tr>';\n    html +=     '</thead>';\n    // Table data\n    html +=     '<tbody>';\n    html +=     _generateTableRows.bind(this, dataset, colWidths, colAligns)();\n    html +=     '</tbody>';\n    html +=   '</table>';\n\n    // Fixed table (header)\n    html +=   '<table class=\"' + theme + '-table-fixed-header\">';\n    html +=     '<thead>';\n    html +=       '<tr>';\n    for (var i = 0; i < dataset[0].length; i++) {\n      html +=       '<th style=\"min-width: '+ (10 * colWidths[i]) +'px; text-align: ' + colAligns[i] + ';\">' + dataset[0][i] + '</th>';\n    }\n    html +=       '</tr>';\n    html +=     '</thead>';\n    html +=   '</table>';\n\n    // Close wrapper\n    html += '</div>';\n\n    // Inject HTML string\n    el.querySelector('.' + theme + '-rendering').innerHTML = html;\n\n    fixedHeader = el.querySelector('.' + theme + '-table-fixed-header');\n    el.querySelector('.' + theme + '-table').onscroll = function(e){\n      fixedHeader.style.top = e.target.scrollTop + 'px';\n    };\n  },\n  update: function(){\n    // no special update handling\n    this.render();\n  },\n  destroy: function(){\n    var el = this.el().querySelector('.' + this.theme() + '-table')\n    if (el && el.onscroll) {\n      el.onscroll = undefined;\n    }\n  }\n};\n","export function prettyNumber(input) {\n  // If it has 3 or fewer sig figs already, just return the number.\n  var input = Number(input),\n      sciNo = input.toPrecision(3),\n      prefix = '',\n      suffixes = ['', 'k', 'M', 'B', 'T'];\n\n  if (Number(sciNo) == input && String(input).length <= 4) {\n    return String(input);\n  }\n\n  if (Math.abs(input) >= 1000000000000000) {\n    return sciNo;\n  }\n\n  if (input >= 1 || input <= -1) {\n    if (input < 0){\n      //Pull off the negative side and stash that.\n      input = -input;\n      prefix = '-';\n    }\n    return prefix + recurse(input, 0);\n  }\n  else {\n    return input.toPrecision(3);\n  }\n\n  function recurse(input, iteration) {\n    var input = String(input);\n    var split = input.split('.');\n    // If there's a dot\n    if (split.length > 1) {\n      // Keep the left hand side only\n      input = split[0];\n      var rhs = split[1];\n      // If the left-hand side is too short, pad until it has 3 digits\n      if (input.length == 2 && rhs.length > 0) {\n        // Pad with right-hand side if possible\n        if (rhs.length > 0) {\n          input = input + '.' + rhs.charAt(0);\n        }\n        // Pad with zeroes if you must\n        else {\n          input += '0';\n        }\n      }\n      else if (input.length == 1 && rhs.length > 0) {\n        input = input + '.' + rhs.charAt(0);\n        // Pad with right-hand side if possible\n        if (rhs.length > 1) {\n          input += rhs.charAt(1);\n        }\n        // Pad with zeroes if you must\n        else {\n          input += '0';\n        }\n      }\n    }\n    var numNumerals = input.length;\n    // if it has a period, then numNumerals is 1 smaller than the string length:\n    if (input.split('.').length > 1) {\n      numNumerals--;\n    }\n    if (numNumerals <= 3) {\n      return String(input) + suffixes[iteration];\n    }\n    else {\n      return recurse(Number(input) / 1000, iteration + 1);\n    }\n  }\n}\n","import { prettyNumber } from '../../utils/pretty-number';\nimport { escapeHtml } from '../../utils/escape-html';\n\nexport default {\n  render: function(){\n    var color = this.colors()[0],\n        theme = this.theme(),\n        title = this.title(),\n        value = '-',\n        height = this.height() || 140,\n        width = this.width(),\n        opts = this.chartOptions(),\n        html = '',\n        prefix = '',\n        suffix = '',\n        formattedNum,\n        valueEl;\n\n    if (typeof this.data()[1][1] === 'number') {\n      value = this.data()[1][1];\n    }\n\n    formattedNum = value;\n    if ( (typeof opts['prettyNumber'] === 'undefined' || opts['prettyNumber'] === true)\n      && !isNaN(parseInt(value)) ) {\n        formattedNum = prettyNumber(value);\n    }\n\n    if (opts['prefix']) {\n      prefix = '<span class=\"' + theme + '-metric-prefix\">' + opts['prefix'] + '</span>';\n    }\n    if (opts['suffix']) {\n      suffix = '<span class=\"' + theme + '-metric-suffix\">' + opts['suffix'] + '</span>';\n    }\n\n    html += '<div class=\"' + theme + '\">';\n    html +=   '<div class=\"' + theme + '-metric\" style=\"background-color: ' + color + '; width: ' + (width ? width + 'px' : 'auto') + ';\" title=\"' + escapeHtml(value) + '\">';\n    html +=     '<span class=\"' + theme + '-metric-value\">' + prefix + escapeHtml(formattedNum) + suffix + '</span>';\n    if (title) {\n      html +=   '<span class=\"' + theme + '-metric-title\">' + escapeHtml(title) + '</span>';\n    }\n    html +=   '</div>';\n    html += '</div>';\n\n    this.el().innerHTML = html;\n    valueEl = this.el().querySelector('.' + theme + '-metric-value');\n    valueEl.style.paddingTop = ((height - this.el().offsetHeight) / 2) + 'px';\n    this.el().querySelector('.' + theme + '-metric').style.height = height + 'px';\n  },\n  update: function(){\n    // no special update handling\n    this.render();\n  },\n  destroy: function(){\n    // no special clean-up\n  }\n};\n","import { escapeHtml } from '../../utils/escape-html';\n\nexport default {\n  render: function(text){\n    var outer = document.createElement('div');\n    var inner = document.createElement('div');\n    var msg = document.createElement('span');\n    var height = this.height() || 140;\n\n    var titleContainer = document.createElement('div');\n    var notesContainer = document.createElement('div');\n\n    outer.className = this.theme();\n    inner.className = this.theme() + '-message';\n    inner.style.width = this.width() + 'px';\n\n    // Create title and notes for message\n    titleContainer.className = this.theme() + '-title';\n    titleContainer.innerHTML = escapeHtml(this.title() || '');\n    notesContainer.className = this.theme() + '-notes';\n    notesContainer.innerHTML = escapeHtml(this.notes() || '');\n\n    msg.innerHTML = escapeHtml(text) || '';\n    inner.appendChild(msg);\n    outer.appendChild(titleContainer);\n    outer.appendChild(inner);\n    outer.appendChild(notesContainer);\n\n    this.el().innerHTML = '';\n    this.el().appendChild(outer);\n\n    var actualInnerHeight = height - titleContainer.offsetHeight - notesContainer.offsetHeight;\n    inner.style.height = actualInnerHeight + 'px';\n    inner.style.paddingTop = (actualInnerHeight / 2 - 12) + 'px';\n  },\n  update: function(){\n    // no special update handling\n    this.render();\n  },\n  destroy: function(){\n    // no special clean-up\n  }\n};\n","import { escapeHtml } from '../../../utils/escape-html';\n\nexport default function (d, defaultTitleFormat, defaultValueFormat, color) {\n  var bgcolor,\n      name,\n      nameFormat,\n      text,\n      title,\n      titleFormat,\n      value,\n      valueFormat;\n\n  // Set config options or defaults\n  nameFormat = this.config.tooltip_format_name || function (name) { return name; };\n  titleFormat = this.config.tooltip_format_title || defaultTitleFormat;\n  valueFormat = this.config.tooltip_format_value || defaultValueFormat;\n\n  // Reverse list to match legend\n  for (var i = 0; i < d.length; i++) {\n    if (! (d[i] && (d[i].value || d[i].value === 0))) { continue; }\n    if (! text) {\n      title = titleFormat ? titleFormat(d[i].x) : d[i].x;\n      text = \"<table class='\" + this.CLASS.tooltip + \"'>\" + (title || title === 0 ? \"<tr><th colspan='2'>\" + escapeHtml(title) + \"</th></tr>\" : \"\");\n    }\n    name = nameFormat(d[i].name);\n    value = valueFormat(d[i].value, d[i].ratio, d[i].id, d[i].index);\n    bgcolor = this.levelColor ? this.levelColor(d[i].value) : color(d[i].id);\n    if (value) {\n      text += \"<tr class='\" + this.CLASS.tooltipName + \"-\" + d[i].id + \"'>\";\n      text +=   \"<td class='name'><span style='background-color:\" + bgcolor + \"'></span>\" + escapeHtml(name) + \"</td>\";\n      text +=   \"<td class='value'>\" + escapeHtml(value) + \"</td>\";\n      text += \"</tr>\";\n    }\n  }\n  return text + \"</table>\";\n}\n","import * as d3 from 'd3';\n\nimport isDateString from '../../../utils/assert-date-string';\n/* eslint-disable */\nexport default function (cols) {\n  var self = this,\n      chart = this.view._artifacts.c3,\n      columns = [],\n      domNode = this.el().querySelector('.' + this.theme() + '-rendering'),\n      legendWidth = 120;\n\n  var pagination = this.view._artifacts.pagination = {\n    hidden: [],\n    labels: [],\n    position: 0,\n    range: Math.round((domNode.offsetHeight - 78) / 20),\n    total: 0\n  };\n\n  // Reduce threshold for donut/pie charts\n  if (this.type() === 'donut' || this.type() === 'pie') {\n    pagination.range = pagination.range >= 5 ? 5 : pagination.range;\n  }\n\n  for (var i = 0; i < cols.length; i++) {\n    if (cols[i][0] !== 'x' && !isDateString(cols[i][1])) {\n      columns.push(cols[i][0]);\n    }\n  }\n\n  var legendEl = d3.select(domNode)\n    .append('svg');\n    legendEl.attr('class', 'keen-c3-legend');\n    legendEl.attr('height', domNode.offsetHeight - 10);\n    legendEl.attr('width', legendWidth);\n    legendEl.style('right', -legendWidth + 'px');\n    legendEl.style('top', '10px');\n\n  var legendItems = legendEl\n    .append('g');\n    legendItems.attr('class', 'keen-c3-legend-items');\n\n  var paginateElOffset = 20 * pagination.range;\n  var paginateEl = legendEl\n    .append('g');\n  paginateEl.attr('class', 'keen-c3-legend-pagination');\n  paginateEl.attr('transform', function(){\n    return 'translate(2, ' + paginateElOffset + ')'\n  });\n\n  paginateData();\n\n  function paginateData(){\n    pagination.labels = columns.slice(pagination.position, pagination.position + pagination.range);\n    pagination.total = columns.length;\n    renderLegendComponent.call(self, pagination.labels);\n    if (pagination.total > pagination.range) {\n      renderPaginationComponent.call(self);\n    }\n    chart.resize();\n  }\n\n  function renderLegendComponent(){\n    legendItems\n      .selectAll('g')\n      .remove();\n\n    var legendItemList = legendItems\n      .selectAll('g')\n      .data(pagination.labels);\n\n    legendItemList.enter()\n        .append('g')\n        .attr('transform', function(id, i){\n          return 'translate(0, ' + (20 * i) + ')'\n        })\n      .attr('data-id', function (id) { return id; })\n      .style('opacity', function(id){\n        var isHidden = pagination.hidden.indexOf(id);\n        return isHidden < 0 ? 1 : .35;\n      })\n      .each(function (id) {\n        var elementText = d3.select(this)\n          .append('text');\n\n          elementText.attr('font-size', 12);\n          elementText.attr('pointer-events', 'none');\n          elementText.attr('x', 15);\n          elementText.attr('y', 9);\n          elementText.text(id);\n          elementText.text(function(id){\n            if (d3.select(this).node().getBBox().width > 105) {\n              return id.length <= 15 ? id : id.substring(0, 12) + '...';\n            }\n            else {\n              return id;\n            }\n          });\n        var legendItemBox = d3.select(this)\n          .append('rect');\n          legendItemBox.attr('height', 14);\n          legendItemBox.attr('width', 110);\n          legendItemBox.attr('x', 0);\n          legendItemBox.attr('y', 0);\n          legendItemBox.style('cursor', 'pointer');\n          legendItemBox.style('fill-opacity', 0);\n        var legendItemCircle = d3.select(this)\n          .append('rect');\n          legendItemCircle.attr('fill', chart.color(id));\n          legendItemCircle.attr('height', 10);\n          legendItemCircle.attr('pointer-events', 'none');\n          legendItemCircle.attr('rx', 5);\n          legendItemCircle.attr('ry', 5);\n          legendItemCircle.attr('width', 10);\n          legendItemCircle.attr('x', 0);\n          legendItemCircle.attr('y', 0 );\n      })\n      .on('mouseover', function (id, i) {\n          chart.focus(id);\n          // show a tooltip overlay w/ full value\n          if (id.length > 15) {\n            var tooltipElement = d3.select(domNode)\n              .append('div');\n              tooltipElement.attr('class', 'keen-c3-legend-label-overlay');\n              tooltipElement.style('max-width', '75%');\n              tooltipElement.style('right', -legendWidth + 'px');\n              tooltipElement.style('top', (15 + (i+1) * 20) + 'px');\n              tooltipElement.html(id);\n              tooltipElement.append('div')\n                .attr('class', 'keen-c3-legend-label-overlay-pointer');\n          }\n      })\n      .on('mouseout', function (id) {\n        chart.revert();\n        // clear out the tooltip overlay\n        d3.select(self.el().querySelector('.' + self.theme() + '-rendering .keen-c3-legend-label-overlay'))\n          .remove();\n      })\n      .on('click', function (id) {\n        d3.select(this).style('opacity', function(){\n          var isHidden = pagination.hidden.indexOf(id);\n          if (isHidden < 0) {\n            pagination.hidden.push(id);\n            return .35;\n          }\n          else {\n            pagination.hidden.splice(isHidden, 1);\n            return 1;\n          }\n        });\n        chart.toggle(id);\n      });\n\n    legendItemList.exit().remove();\n  }\n\n  function renderPaginationComponent(){\n    paginateEl\n      .selectAll('g')\n      .remove();\n\n    paginateEl\n        .selectAll('g')\n        .data([\n          { direction: 'reverse', path_d: 'M0 10 L10 0 L20 10 Z' },\n          { direction: 'forward', path_d: 'M0 0 L10 10 L20 0 Z' }\n        ])\n        .enter()\n        .append('g')\n        .attr('transform', function(id, i){\n          return 'translate(' + (i * 20) + ', 0)'\n        })\n        .each(function(id){\n          var element = d3.select(this)\n            .append('path');\n\n            element.attr('d', function(d){\n              return d.path_d;\n            });\n            element.style('cursor', 'pointer');\n            element.style('fill', '#D7D7D7');\n            element.style('stroke', 'none');\n            element.on('mouseover', function (id) {\n              d3.select(this).style('fill', '#4D4D4D');\n            });\n            element.on('mouseout', function (id) {\n              d3.select(this).style('fill', '#D7D7D7');\n            });\n            element.on('click', function (d) {\n              if (d.direction === 'forward') {\n                if (pagination.position + pagination.range < pagination.total) {\n                  pagination.position = pagination.position + pagination.range;\n                }\n              }\n              else {\n                if (pagination.position - pagination.range >= 0) {\n                  pagination.position = pagination.position - pagination.range;\n                }\n              }\n              paginateData();\n              clearSelectedText();\n            });\n        });\n  }\n\n  function clearSelectedText() {\n    var selection;\n    if (document.selection && document.selection.empty) {\n      selection = document.selection;\n      selection.empty();\n    }\n    else if (window.getSelection) {\n      selection = window.getSelection();\n      selection.removeAllRanges();\n    }\n  }\n}\n","export default function (startDate, endDate) {\n  var timeDiff = Math.abs(new Date(startDate).getTime() - new Date(endDate).getTime());\n  var months = [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'June',\n    'July',\n    'Aug',\n    'Sept',\n    'Oct',\n    'Nov',\n    'Dec'\n  ];\n\n  // Yearly (31536000000) + Monthly\n  if (timeDiff >= 2419200000) {\n    return function(ms){\n      var date = new Date(ms);\n      return months[date.getMonth()] + ' ' + date.getFullYear();\n    };\n  }\n  // Daily\n  else if (timeDiff >= 86400000) {\n    return function(ms){\n      var date = new Date(ms);\n      return months[date.getMonth()] + ' ' + date.getDate();\n    };\n  }\n  // Hourly\n  else if (timeDiff >= 3600000) {\n    return '%I:%M %p';\n  }\n  // Minutely\n  else {\n    return '%I:%M:%S %p';\n  }\n}\n","import { each } from './each';\n\nexport function extendDeep(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    each(arguments[i], function(prop, key){\n      if (( typeof target[key] !== 'undefined' && typeof prop !== 'undefined' ) &&\n          ( typeof target[key] === 'object'    && typeof prop === 'object' ) &&\n          ( target[key] !== null               && prop !== null )) {\n            extendDeep(target[key], prop);\n      }\n      else {\n        target[key] = prop;\n      }\n    });\n  }\n  return target;\n}\n","/* @license C3.js v0.6.2 | (c) C3 Team and other contributors | http://c3js.org/ */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.c3 = factory());\n}(this, (function () { 'use strict';\n\n    var CLASS = {\n        target: 'c3-target',\n        chart: 'c3-chart',\n        chartLine: 'c3-chart-line',\n        chartLines: 'c3-chart-lines',\n        chartBar: 'c3-chart-bar',\n        chartBars: 'c3-chart-bars',\n        chartText: 'c3-chart-text',\n        chartTexts: 'c3-chart-texts',\n        chartArc: 'c3-chart-arc',\n        chartArcs: 'c3-chart-arcs',\n        chartArcsTitle: 'c3-chart-arcs-title',\n        chartArcsBackground: 'c3-chart-arcs-background',\n        chartArcsGaugeUnit: 'c3-chart-arcs-gauge-unit',\n        chartArcsGaugeMax: 'c3-chart-arcs-gauge-max',\n        chartArcsGaugeMin: 'c3-chart-arcs-gauge-min',\n        selectedCircle: 'c3-selected-circle',\n        selectedCircles: 'c3-selected-circles',\n        eventRect: 'c3-event-rect',\n        eventRects: 'c3-event-rects',\n        eventRectsSingle: 'c3-event-rects-single',\n        eventRectsMultiple: 'c3-event-rects-multiple',\n        zoomRect: 'c3-zoom-rect',\n        brush: 'c3-brush',\n        focused: 'c3-focused',\n        defocused: 'c3-defocused',\n        region: 'c3-region',\n        regions: 'c3-regions',\n        title: 'c3-title',\n        tooltipContainer: 'c3-tooltip-container',\n        tooltip: 'c3-tooltip',\n        tooltipName: 'c3-tooltip-name',\n        shape: 'c3-shape',\n        shapes: 'c3-shapes',\n        line: 'c3-line',\n        lines: 'c3-lines',\n        bar: 'c3-bar',\n        bars: 'c3-bars',\n        circle: 'c3-circle',\n        circles: 'c3-circles',\n        arc: 'c3-arc',\n        arcLabelLine: 'c3-arc-label-line',\n        arcs: 'c3-arcs',\n        area: 'c3-area',\n        areas: 'c3-areas',\n        empty: 'c3-empty',\n        text: 'c3-text',\n        texts: 'c3-texts',\n        gaugeValue: 'c3-gauge-value',\n        grid: 'c3-grid',\n        gridLines: 'c3-grid-lines',\n        xgrid: 'c3-xgrid',\n        xgrids: 'c3-xgrids',\n        xgridLine: 'c3-xgrid-line',\n        xgridLines: 'c3-xgrid-lines',\n        xgridFocus: 'c3-xgrid-focus',\n        ygrid: 'c3-ygrid',\n        ygrids: 'c3-ygrids',\n        ygridLine: 'c3-ygrid-line',\n        ygridLines: 'c3-ygrid-lines',\n        axis: 'c3-axis',\n        axisX: 'c3-axis-x',\n        axisXLabel: 'c3-axis-x-label',\n        axisY: 'c3-axis-y',\n        axisYLabel: 'c3-axis-y-label',\n        axisY2: 'c3-axis-y2',\n        axisY2Label: 'c3-axis-y2-label',\n        legendBackground: 'c3-legend-background',\n        legendItem: 'c3-legend-item',\n        legendItemEvent: 'c3-legend-item-event',\n        legendItemTile: 'c3-legend-item-tile',\n        legendItemHidden: 'c3-legend-item-hidden',\n        legendItemFocused: 'c3-legend-item-focused',\n        dragarea: 'c3-dragarea',\n        EXPANDED: '_expanded_',\n        SELECTED: '_selected_',\n        INCLUDED: '_included_'\n    };\n\n    var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n      return typeof obj;\n    } : function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n\n    var classCallCheck = function (instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var defineProperty = function (obj, key, value) {\n      if (key in obj) {\n        Object.defineProperty(obj, key, {\n          value: value,\n          enumerable: true,\n          configurable: true,\n          writable: true\n        });\n      } else {\n        obj[key] = value;\n      }\n\n      return obj;\n    };\n\n    var inherits = function (subClass, superClass) {\n      if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n      }\n\n      subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n          value: subClass,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n    };\n\n    var possibleConstructorReturn = function (self, call) {\n      if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      }\n\n      return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n    };\n\n    var isValue = function isValue(v) {\n        return v || v === 0;\n    };\n    var isFunction = function isFunction(o) {\n        return typeof o === 'function';\n    };\n    var isArray = function isArray(o) {\n        return Array.isArray(o);\n    };\n    var isString = function isString(o) {\n        return typeof o === 'string';\n    };\n    var isUndefined = function isUndefined(v) {\n        return typeof v === 'undefined';\n    };\n    var isDefined = function isDefined(v) {\n        return typeof v !== 'undefined';\n    };\n    var ceil10 = function ceil10(v) {\n        return Math.ceil(v / 10) * 10;\n    };\n    var asHalfPixel = function asHalfPixel(n) {\n        return Math.ceil(n) + 0.5;\n    };\n    var diffDomain = function diffDomain(d) {\n        return d[1] - d[0];\n    };\n    var isEmpty = function isEmpty(o) {\n        return typeof o === 'undefined' || o === null || isString(o) && o.length === 0 || (typeof o === 'undefined' ? 'undefined' : _typeof(o)) === 'object' && Object.keys(o).length === 0;\n    };\n    var notEmpty = function notEmpty(o) {\n        return !c3_chart_internal_fn.isEmpty(o);\n    };\n    var getOption = function getOption(options, key, defaultValue) {\n        return isDefined(options[key]) ? options[key] : defaultValue;\n    };\n    var hasValue = function hasValue(dict, value) {\n        var found = false;\n        Object.keys(dict).forEach(function (key) {\n            if (dict[key] === value) {\n                found = true;\n            }\n        });\n        return found;\n    };\n    var sanitise = function sanitise(str) {\n        return typeof str === 'string' ? str.replace(/</g, '&lt;').replace(/>/g, '&gt;') : str;\n    };\n    var getPathBox = function getPathBox(path) {\n        var box = path.getBoundingClientRect(),\n            items = [path.pathSegList.getItem(0), path.pathSegList.getItem(1)],\n            minX = items[0].x,\n            minY = Math.min(items[0].y, items[1].y);\n        return { x: minX, y: minY, width: box.width, height: box.height };\n    };\n\n    var c3_axis_fn;\n    var c3_axis_internal_fn;\n\n    function AxisInternal(component, params) {\n        var internal = this;\n        internal.component = component;\n        internal.params = params || {};\n\n        internal.d3 = component.d3;\n        internal.scale = internal.d3.scaleLinear();\n        internal.range;\n        internal.orient = \"bottom\";\n        internal.innerTickSize = 6;\n        internal.outerTickSize = this.params.withOuterTick ? 6 : 0;\n        internal.tickPadding = 3;\n        internal.tickValues = null;\n        internal.tickFormat;\n        internal.tickArguments;\n\n        internal.tickOffset = 0;\n        internal.tickCulling = true;\n        internal.tickCentered;\n        internal.tickTextCharSize;\n        internal.tickTextRotate = internal.params.tickTextRotate;\n        internal.tickLength;\n\n        internal.axis = internal.generateAxis();\n    }\n    c3_axis_internal_fn = AxisInternal.prototype;\n\n    c3_axis_internal_fn.axisX = function (selection, x, tickOffset) {\n        selection.attr(\"transform\", function (d) {\n            return \"translate(\" + Math.ceil(x(d) + tickOffset) + \", 0)\";\n        });\n    };\n    c3_axis_internal_fn.axisY = function (selection, y) {\n        selection.attr(\"transform\", function (d) {\n            return \"translate(0,\" + Math.ceil(y(d)) + \")\";\n        });\n    };\n    c3_axis_internal_fn.scaleExtent = function (domain) {\n        var start = domain[0],\n            stop = domain[domain.length - 1];\n        return start < stop ? [start, stop] : [stop, start];\n    };\n    c3_axis_internal_fn.generateTicks = function (scale) {\n        var internal = this;\n        var i,\n            domain,\n            ticks = [];\n        if (scale.ticks) {\n            return scale.ticks.apply(scale, internal.tickArguments);\n        }\n        domain = scale.domain();\n        for (i = Math.ceil(domain[0]); i < domain[1]; i++) {\n            ticks.push(i);\n        }\n        if (ticks.length > 0 && ticks[0] > 0) {\n            ticks.unshift(ticks[0] - (ticks[1] - ticks[0]));\n        }\n        return ticks;\n    };\n    c3_axis_internal_fn.copyScale = function () {\n        var internal = this;\n        var newScale = internal.scale.copy(),\n            domain;\n        if (internal.params.isCategory) {\n            domain = internal.scale.domain();\n            newScale.domain([domain[0], domain[1] - 1]);\n        }\n        return newScale;\n    };\n    c3_axis_internal_fn.textFormatted = function (v) {\n        var internal = this,\n            formatted = internal.tickFormat ? internal.tickFormat(v) : v;\n        return typeof formatted !== 'undefined' ? formatted : '';\n    };\n    c3_axis_internal_fn.updateRange = function () {\n        var internal = this;\n        internal.range = internal.scale.rangeExtent ? internal.scale.rangeExtent() : internal.scaleExtent(internal.scale.range());\n        return internal.range;\n    };\n    c3_axis_internal_fn.updateTickTextCharSize = function (tick) {\n        var internal = this;\n        if (internal.tickTextCharSize) {\n            return internal.tickTextCharSize;\n        }\n        var size = {\n            h: 11.5,\n            w: 5.5\n        };\n        tick.select('text').text(function (d) {\n            return internal.textFormatted(d);\n        }).each(function (d) {\n            var box = this.getBoundingClientRect(),\n                text = internal.textFormatted(d),\n                h = box.height,\n                w = text ? box.width / text.length : undefined;\n            if (h && w) {\n                size.h = h;\n                size.w = w;\n            }\n        }).text('');\n        internal.tickTextCharSize = size;\n        return size;\n    };\n    c3_axis_internal_fn.isVertical = function () {\n        return this.orient === 'left' || this.orient === 'right';\n    };\n    c3_axis_internal_fn.tspanData = function (d, i, scale) {\n        var internal = this;\n        var splitted = internal.params.tickMultiline ? internal.splitTickText(d, scale) : [].concat(internal.textFormatted(d));\n\n        if (internal.params.tickMultiline && internal.params.tickMultilineMax > 0) {\n            splitted = internal.ellipsify(splitted, internal.params.tickMultilineMax);\n        }\n\n        return splitted.map(function (s) {\n            return { index: i, splitted: s, length: splitted.length };\n        });\n    };\n    c3_axis_internal_fn.splitTickText = function (d, scale) {\n        var internal = this,\n            tickText = internal.textFormatted(d),\n            maxWidth = internal.params.tickWidth,\n            subtext,\n            spaceIndex,\n            textWidth,\n            splitted = [];\n\n        if (Object.prototype.toString.call(tickText) === \"[object Array]\") {\n            return tickText;\n        }\n\n        if (!maxWidth || maxWidth <= 0) {\n            maxWidth = internal.isVertical() ? 95 : internal.params.isCategory ? Math.ceil(scale(1) - scale(0)) - 12 : 110;\n        }\n\n        function split(splitted, text) {\n            spaceIndex = undefined;\n            for (var i = 1; i < text.length; i++) {\n                if (text.charAt(i) === ' ') {\n                    spaceIndex = i;\n                }\n                subtext = text.substr(0, i + 1);\n                textWidth = internal.tickTextCharSize.w * subtext.length;\n                // if text width gets over tick width, split by space index or crrent index\n                if (maxWidth < textWidth) {\n                    return split(splitted.concat(text.substr(0, spaceIndex ? spaceIndex : i)), text.slice(spaceIndex ? spaceIndex + 1 : i));\n                }\n            }\n            return splitted.concat(text);\n        }\n\n        return split(splitted, tickText + \"\");\n    };\n    c3_axis_internal_fn.ellipsify = function (splitted, max) {\n        if (splitted.length <= max) {\n            return splitted;\n        }\n\n        var ellipsified = splitted.slice(0, max);\n        var remaining = 3;\n        for (var i = max - 1; i >= 0; i--) {\n            var available = ellipsified[i].length;\n\n            ellipsified[i] = ellipsified[i].substr(0, available - remaining).padEnd(available, '.');\n\n            remaining -= available;\n\n            if (remaining <= 0) {\n                break;\n            }\n        }\n\n        return ellipsified;\n    };\n    c3_axis_internal_fn.updateTickLength = function () {\n        var internal = this;\n        internal.tickLength = Math.max(internal.innerTickSize, 0) + internal.tickPadding;\n    };\n    c3_axis_internal_fn.lineY2 = function (d) {\n        var internal = this,\n            tickPosition = internal.scale(d) + (internal.tickCentered ? 0 : internal.tickOffset);\n        return internal.range[0] < tickPosition && tickPosition < internal.range[1] ? internal.innerTickSize : 0;\n    };\n    c3_axis_internal_fn.textY = function () {\n        var internal = this,\n            rotate = internal.tickTextRotate;\n        return rotate ? 11.5 - 2.5 * (rotate / 15) * (rotate > 0 ? 1 : -1) : internal.tickLength;\n    };\n    c3_axis_internal_fn.textTransform = function () {\n        var internal = this,\n            rotate = internal.tickTextRotate;\n        return rotate ? \"rotate(\" + rotate + \")\" : \"\";\n    };\n    c3_axis_internal_fn.textTextAnchor = function () {\n        var internal = this,\n            rotate = internal.tickTextRotate;\n        return rotate ? rotate > 0 ? \"start\" : \"end\" : \"middle\";\n    };\n    c3_axis_internal_fn.tspanDx = function () {\n        var internal = this,\n            rotate = internal.tickTextRotate;\n        return rotate ? 8 * Math.sin(Math.PI * (rotate / 180)) : 0;\n    };\n    c3_axis_internal_fn.tspanDy = function (d, i) {\n        var internal = this,\n            dy = internal.tickTextCharSize.h;\n        if (i === 0) {\n            if (internal.isVertical()) {\n                dy = -((d.length - 1) * (internal.tickTextCharSize.h / 2) - 3);\n            } else {\n                dy = \".71em\";\n            }\n        }\n        return dy;\n    };\n\n    c3_axis_internal_fn.generateAxis = function () {\n        var internal = this,\n            d3 = internal.d3,\n            params = internal.params;\n        function axis(g, transition) {\n            var self;\n            g.each(function () {\n                var g = axis.g = d3.select(this);\n\n                var scale0 = this.__chart__ || internal.scale,\n                    scale1 = this.__chart__ = internal.copyScale();\n\n                var ticksValues = internal.tickValues ? internal.tickValues : internal.generateTicks(scale1),\n                    ticks = g.selectAll(\".tick\").data(ticksValues, scale1),\n                    tickEnter = ticks.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", 1e-6),\n\n                // MEMO: No exit transition. The reason is this transition affects max tick width calculation because old tick will be included in the ticks.\n                tickExit = ticks.exit().remove(),\n                    tickUpdate = ticks.merge(tickEnter),\n                    tickTransform,\n                    tickX,\n                    tickY;\n\n                if (params.isCategory) {\n                    internal.tickOffset = Math.ceil((scale1(1) - scale1(0)) / 2);\n                    tickX = internal.tickCentered ? 0 : internal.tickOffset;\n                    tickY = internal.tickCentered ? internal.tickOffset : 0;\n                } else {\n                    internal.tickOffset = tickX = 0;\n                }\n\n                internal.updateRange();\n                internal.updateTickLength();\n                internal.updateTickTextCharSize(g.select('.tick'));\n\n                var lineUpdate = tickUpdate.select(\"line\").merge(tickEnter.append(\"line\")),\n                    textUpdate = tickUpdate.select(\"text\").merge(tickEnter.append(\"text\"));\n\n                var tspans = tickUpdate.selectAll('text').selectAll('tspan').data(function (d, i) {\n                    return internal.tspanData(d, i, scale1);\n                }),\n                    tspanEnter = tspans.enter().append('tspan'),\n                    tspanUpdate = tspanEnter.merge(tspans).text(function (d) {\n                    return d.splitted;\n                });\n                tspans.exit().remove();\n\n                var path = g.selectAll(\".domain\").data([0]),\n                    pathUpdate = path.enter().append(\"path\").merge(path).attr(\"class\", \"domain\");\n\n                // TODO: each attr should be one function and change its behavior by internal.orient, probably\n                switch (internal.orient) {\n                    case \"bottom\":\n                        {\n                            tickTransform = internal.axisX;\n                            lineUpdate.attr(\"x1\", tickX).attr(\"x2\", tickX).attr(\"y2\", function (d, i) {\n                                return internal.lineY2(d, i);\n                            });\n                            textUpdate.attr(\"x\", 0).attr(\"y\", function (d, i) {\n                                return internal.textY(d, i);\n                            }).attr(\"transform\", function (d, i) {\n                                return internal.textTransform(d, i);\n                            }).style(\"text-anchor\", function (d, i) {\n                                return internal.textTextAnchor(d, i);\n                            });\n                            tspanUpdate.attr('x', 0).attr(\"dy\", function (d, i) {\n                                return internal.tspanDy(d, i);\n                            }).attr('dx', function (d, i) {\n                                return internal.tspanDx(d, i);\n                            });\n                            pathUpdate.attr(\"d\", \"M\" + internal.range[0] + \",\" + internal.outerTickSize + \"V0H\" + internal.range[1] + \"V\" + internal.outerTickSize);\n                            break;\n                        }\n                    case \"top\":\n                        {\n                            // TODO: rotated tick text\n                            tickTransform = internal.axisX;\n                            lineUpdate.attr(\"x1\", tickX).attr(\"x2\", tickX).attr(\"y2\", function (d, i) {\n                                return -1 * internal.lineY2(d, i);\n                            });\n                            textUpdate.attr(\"x\", 0).attr(\"y\", function (d, i) {\n                                return -1 * internal.textY(d, i) - (params.isCategory ? 2 : internal.tickLength - 2);\n                            }).attr(\"transform\", function (d, i) {\n                                return internal.textTransform(d, i);\n                            }).style(\"text-anchor\", function (d, i) {\n                                return internal.textTextAnchor(d, i);\n                            });\n                            tspanUpdate.attr('x', 0).attr(\"dy\", function (d, i) {\n                                return internal.tspanDy(d, i);\n                            }).attr('dx', function (d, i) {\n                                return internal.tspanDx(d, i);\n                            });\n                            pathUpdate.attr(\"d\", \"M\" + internal.range[0] + \",\" + -internal.outerTickSize + \"V0H\" + internal.range[1] + \"V\" + -internal.outerTickSize);\n                            break;\n                        }\n                    case \"left\":\n                        {\n                            tickTransform = internal.axisY;\n                            lineUpdate.attr(\"x2\", -internal.innerTickSize).attr(\"y1\", tickY).attr(\"y2\", tickY);\n                            textUpdate.attr(\"x\", -internal.tickLength).attr(\"y\", internal.tickOffset).style(\"text-anchor\", \"end\");\n                            tspanUpdate.attr('x', -internal.tickLength).attr(\"dy\", function (d, i) {\n                                return internal.tspanDy(d, i);\n                            });\n                            pathUpdate.attr(\"d\", \"M\" + -internal.outerTickSize + \",\" + internal.range[0] + \"H0V\" + internal.range[1] + \"H\" + -internal.outerTickSize);\n                            break;\n                        }\n                    case \"right\":\n                        {\n                            tickTransform = internal.axisY;\n                            lineUpdate.attr(\"x2\", internal.innerTickSize).attr(\"y1\", tickY).attr(\"y2\", tickY);\n                            textUpdate.attr(\"x\", internal.tickLength).attr(\"y\", internal.tickOffset).style(\"text-anchor\", \"start\");\n                            tspanUpdate.attr('x', internal.tickLength).attr(\"dy\", function (d, i) {\n                                return internal.tspanDy(d, i);\n                            });\n                            pathUpdate.attr(\"d\", \"M\" + internal.outerTickSize + \",\" + internal.range[0] + \"H0V\" + internal.range[1] + \"H\" + internal.outerTickSize);\n                            break;\n                        }\n                }\n                if (scale1.rangeBand) {\n                    var x = scale1,\n                        dx = x.rangeBand() / 2;\n                    scale0 = scale1 = function scale1(d) {\n                        return x(d) + dx;\n                    };\n                } else if (scale0.rangeBand) {\n                    scale0 = scale1;\n                } else {\n                    tickExit.call(tickTransform, scale1, internal.tickOffset);\n                }\n                tickEnter.call(tickTransform, scale0, internal.tickOffset);\n                self = (transition ? tickUpdate.transition(transition) : tickUpdate).style('opacity', 1).call(tickTransform, scale1, internal.tickOffset);\n            });\n            return self;\n        }\n        axis.scale = function (x) {\n            if (!arguments.length) {\n                return internal.scale;\n            }\n            internal.scale = x;\n            return axis;\n        };\n        axis.orient = function (x) {\n            if (!arguments.length) {\n                return internal.orient;\n            }\n            internal.orient = x in { top: 1, right: 1, bottom: 1, left: 1 } ? x + \"\" : \"bottom\";\n            return axis;\n        };\n        axis.tickFormat = function (format) {\n            if (!arguments.length) {\n                return internal.tickFormat;\n            }\n            internal.tickFormat = format;\n            return axis;\n        };\n        axis.tickCentered = function (isCentered) {\n            if (!arguments.length) {\n                return internal.tickCentered;\n            }\n            internal.tickCentered = isCentered;\n            return axis;\n        };\n        axis.tickOffset = function () {\n            return internal.tickOffset;\n        };\n        axis.tickInterval = function () {\n            var interval, length;\n            if (params.isCategory) {\n                interval = internal.tickOffset * 2;\n            } else {\n                length = axis.g.select('path.domain').node().getTotalLength() - internal.outerTickSize * 2;\n                interval = length / axis.g.selectAll('line').size();\n            }\n            return interval === Infinity ? 0 : interval;\n        };\n        axis.ticks = function () {\n            if (!arguments.length) {\n                return internal.tickArguments;\n            }\n            internal.tickArguments = arguments;\n            return axis;\n        };\n        axis.tickCulling = function (culling) {\n            if (!arguments.length) {\n                return internal.tickCulling;\n            }\n            internal.tickCulling = culling;\n            return axis;\n        };\n        axis.tickValues = function (x) {\n            if (typeof x === 'function') {\n                internal.tickValues = function () {\n                    return x(internal.scale.domain());\n                };\n            } else {\n                if (!arguments.length) {\n                    return internal.tickValues;\n                }\n                internal.tickValues = x;\n            }\n            return axis;\n        };\n        return axis;\n    };\n\n    var Axis = function (_Component) {\n        inherits(Axis, _Component);\n\n        function Axis(owner) {\n            classCallCheck(this, Axis);\n\n            var fn = {\n                fn: c3_axis_fn,\n                internal: {\n                    fn: c3_axis_internal_fn\n                }\n            };\n\n            var _this = possibleConstructorReturn(this, (Axis.__proto__ || Object.getPrototypeOf(Axis)).call(this, owner, 'axis', fn));\n\n            _this.d3 = owner.d3;\n            _this.internal = AxisInternal;\n            return _this;\n        }\n\n        return Axis;\n    }(Component);\n\n    c3_axis_fn = Axis.prototype;\n\n    c3_axis_fn.init = function init() {\n        var $$ = this.owner,\n            config = $$.config,\n            main = $$.main;\n        $$.axes.x = main.append(\"g\").attr(\"class\", CLASS.axis + ' ' + CLASS.axisX).attr(\"clip-path\", config.axis_x_inner ? \"\" : $$.clipPathForXAxis).attr(\"transform\", $$.getTranslate('x')).style(\"visibility\", config.axis_x_show ? 'visible' : 'hidden');\n        $$.axes.x.append(\"text\").attr(\"class\", CLASS.axisXLabel).attr(\"transform\", config.axis_rotated ? \"rotate(-90)\" : \"\").style(\"text-anchor\", this.textAnchorForXAxisLabel.bind(this));\n        $$.axes.y = main.append(\"g\").attr(\"class\", CLASS.axis + ' ' + CLASS.axisY).attr(\"clip-path\", config.axis_y_inner ? \"\" : $$.clipPathForYAxis).attr(\"transform\", $$.getTranslate('y')).style(\"visibility\", config.axis_y_show ? 'visible' : 'hidden');\n        $$.axes.y.append(\"text\").attr(\"class\", CLASS.axisYLabel).attr(\"transform\", config.axis_rotated ? \"\" : \"rotate(-90)\").style(\"text-anchor\", this.textAnchorForYAxisLabel.bind(this));\n\n        $$.axes.y2 = main.append(\"g\").attr(\"class\", CLASS.axis + ' ' + CLASS.axisY2)\n        // clip-path?\n        .attr(\"transform\", $$.getTranslate('y2')).style(\"visibility\", config.axis_y2_show ? 'visible' : 'hidden');\n        $$.axes.y2.append(\"text\").attr(\"class\", CLASS.axisY2Label).attr(\"transform\", config.axis_rotated ? \"\" : \"rotate(-90)\").style(\"text-anchor\", this.textAnchorForY2AxisLabel.bind(this));\n    };\n    c3_axis_fn.getXAxis = function getXAxis(scale, orient, tickFormat, tickValues, withOuterTick, withoutTransition, withoutRotateTickText) {\n        var $$ = this.owner,\n            config = $$.config,\n            axisParams = {\n            isCategory: $$.isCategorized(),\n            withOuterTick: withOuterTick,\n            tickMultiline: config.axis_x_tick_multiline,\n            tickMultilineMax: config.axis_x_tick_multiline ? Number(config.axis_x_tick_multilineMax) : 0,\n            tickWidth: config.axis_x_tick_width,\n            tickTextRotate: withoutRotateTickText ? 0 : config.axis_x_tick_rotate,\n            withoutTransition: withoutTransition\n        },\n            axis = new this.internal(this, axisParams).axis.scale(scale).orient(orient);\n\n        if ($$.isTimeSeries() && tickValues && typeof tickValues !== \"function\") {\n            tickValues = tickValues.map(function (v) {\n                return $$.parseDate(v);\n            });\n        }\n\n        // Set tick\n        axis.tickFormat(tickFormat).tickValues(tickValues);\n        if ($$.isCategorized()) {\n            axis.tickCentered(config.axis_x_tick_centered);\n            if (isEmpty(config.axis_x_tick_culling)) {\n                config.axis_x_tick_culling = false;\n            }\n        }\n\n        return axis;\n    };\n    c3_axis_fn.updateXAxisTickValues = function updateXAxisTickValues(targets, axis) {\n        var $$ = this.owner,\n            config = $$.config,\n            tickValues;\n        if (config.axis_x_tick_fit || config.axis_x_tick_count) {\n            tickValues = this.generateTickValues($$.mapTargetsToUniqueXs(targets), config.axis_x_tick_count, $$.isTimeSeries());\n        }\n        if (axis) {\n            axis.tickValues(tickValues);\n        } else {\n            $$.xAxis.tickValues(tickValues);\n            $$.subXAxis.tickValues(tickValues);\n        }\n        return tickValues;\n    };\n    c3_axis_fn.getYAxis = function getYAxis(scale, orient, tickFormat, tickValues, withOuterTick, withoutTransition, withoutRotateTickText) {\n        var $$ = this.owner,\n            config = $$.config,\n            axisParams = {\n            withOuterTick: withOuterTick,\n            withoutTransition: withoutTransition,\n            tickTextRotate: withoutRotateTickText ? 0 : config.axis_y_tick_rotate\n        },\n            axis = new this.internal(this, axisParams).axis.scale(scale).orient(orient).tickFormat(tickFormat);\n        if ($$.isTimeSeriesY()) {\n            axis.ticks(config.axis_y_tick_time_type, config.axis_y_tick_time_interval);\n        } else {\n            axis.tickValues(tickValues);\n        }\n        return axis;\n    };\n    c3_axis_fn.getId = function getId(id) {\n        var config = this.owner.config;\n        return id in config.data_axes ? config.data_axes[id] : 'y';\n    };\n    c3_axis_fn.getXAxisTickFormat = function getXAxisTickFormat() {\n        // #2251 previously set any negative values to a whole number,\n        // however both should be truncated according to the users format specification\n        var $$ = this.owner,\n            config = $$.config;\n        var format = $$.isTimeSeries() ? $$.defaultAxisTimeFormat : $$.isCategorized() ? $$.categoryName : function (v) {\n            return v;\n        };\n\n        if (config.axis_x_tick_format) {\n            if (isFunction(config.axis_x_tick_format)) {\n                format = config.axis_x_tick_format;\n            } else if ($$.isTimeSeries()) {\n                format = function format(date) {\n                    return date ? $$.axisTimeFormat(config.axis_x_tick_format)(date) : \"\";\n                };\n            }\n        }\n        return isFunction(format) ? function (v) {\n            return format.call($$, v);\n        } : format;\n    };\n    c3_axis_fn.getTickValues = function getTickValues(tickValues, axis) {\n        return tickValues ? tickValues : axis ? axis.tickValues() : undefined;\n    };\n    c3_axis_fn.getXAxisTickValues = function getXAxisTickValues() {\n        return this.getTickValues(this.owner.config.axis_x_tick_values, this.owner.xAxis);\n    };\n    c3_axis_fn.getYAxisTickValues = function getYAxisTickValues() {\n        return this.getTickValues(this.owner.config.axis_y_tick_values, this.owner.yAxis);\n    };\n    c3_axis_fn.getY2AxisTickValues = function getY2AxisTickValues() {\n        return this.getTickValues(this.owner.config.axis_y2_tick_values, this.owner.y2Axis);\n    };\n    c3_axis_fn.getLabelOptionByAxisId = function getLabelOptionByAxisId(axisId) {\n        var $$ = this.owner,\n            config = $$.config,\n            option;\n        if (axisId === 'y') {\n            option = config.axis_y_label;\n        } else if (axisId === 'y2') {\n            option = config.axis_y2_label;\n        } else if (axisId === 'x') {\n            option = config.axis_x_label;\n        }\n        return option;\n    };\n    c3_axis_fn.getLabelText = function getLabelText(axisId) {\n        var option = this.getLabelOptionByAxisId(axisId);\n        return isString(option) ? option : option ? option.text : null;\n    };\n    c3_axis_fn.setLabelText = function setLabelText(axisId, text) {\n        var $$ = this.owner,\n            config = $$.config,\n            option = this.getLabelOptionByAxisId(axisId);\n        if (isString(option)) {\n            if (axisId === 'y') {\n                config.axis_y_label = text;\n            } else if (axisId === 'y2') {\n                config.axis_y2_label = text;\n            } else if (axisId === 'x') {\n                config.axis_x_label = text;\n            }\n        } else if (option) {\n            option.text = text;\n        }\n    };\n    c3_axis_fn.getLabelPosition = function getLabelPosition(axisId, defaultPosition) {\n        var option = this.getLabelOptionByAxisId(axisId),\n            position = option && (typeof option === 'undefined' ? 'undefined' : _typeof(option)) === 'object' && option.position ? option.position : defaultPosition;\n        return {\n            isInner: position.indexOf('inner') >= 0,\n            isOuter: position.indexOf('outer') >= 0,\n            isLeft: position.indexOf('left') >= 0,\n            isCenter: position.indexOf('center') >= 0,\n            isRight: position.indexOf('right') >= 0,\n            isTop: position.indexOf('top') >= 0,\n            isMiddle: position.indexOf('middle') >= 0,\n            isBottom: position.indexOf('bottom') >= 0\n        };\n    };\n    c3_axis_fn.getXAxisLabelPosition = function getXAxisLabelPosition() {\n        return this.getLabelPosition('x', this.owner.config.axis_rotated ? 'inner-top' : 'inner-right');\n    };\n    c3_axis_fn.getYAxisLabelPosition = function getYAxisLabelPosition() {\n        return this.getLabelPosition('y', this.owner.config.axis_rotated ? 'inner-right' : 'inner-top');\n    };\n    c3_axis_fn.getY2AxisLabelPosition = function getY2AxisLabelPosition() {\n        return this.getLabelPosition('y2', this.owner.config.axis_rotated ? 'inner-right' : 'inner-top');\n    };\n    c3_axis_fn.getLabelPositionById = function getLabelPositionById(id) {\n        return id === 'y2' ? this.getY2AxisLabelPosition() : id === 'y' ? this.getYAxisLabelPosition() : this.getXAxisLabelPosition();\n    };\n    c3_axis_fn.textForXAxisLabel = function textForXAxisLabel() {\n        return this.getLabelText('x');\n    };\n    c3_axis_fn.textForYAxisLabel = function textForYAxisLabel() {\n        return this.getLabelText('y');\n    };\n    c3_axis_fn.textForY2AxisLabel = function textForY2AxisLabel() {\n        return this.getLabelText('y2');\n    };\n    c3_axis_fn.xForAxisLabel = function xForAxisLabel(forHorizontal, position) {\n        var $$ = this.owner;\n        if (forHorizontal) {\n            return position.isLeft ? 0 : position.isCenter ? $$.width / 2 : $$.width;\n        } else {\n            return position.isBottom ? -$$.height : position.isMiddle ? -$$.height / 2 : 0;\n        }\n    };\n    c3_axis_fn.dxForAxisLabel = function dxForAxisLabel(forHorizontal, position) {\n        if (forHorizontal) {\n            return position.isLeft ? \"0.5em\" : position.isRight ? \"-0.5em\" : \"0\";\n        } else {\n            return position.isTop ? \"-0.5em\" : position.isBottom ? \"0.5em\" : \"0\";\n        }\n    };\n    c3_axis_fn.textAnchorForAxisLabel = function textAnchorForAxisLabel(forHorizontal, position) {\n        if (forHorizontal) {\n            return position.isLeft ? 'start' : position.isCenter ? 'middle' : 'end';\n        } else {\n            return position.isBottom ? 'start' : position.isMiddle ? 'middle' : 'end';\n        }\n    };\n    c3_axis_fn.xForXAxisLabel = function xForXAxisLabel() {\n        return this.xForAxisLabel(!this.owner.config.axis_rotated, this.getXAxisLabelPosition());\n    };\n    c3_axis_fn.xForYAxisLabel = function xForYAxisLabel() {\n        return this.xForAxisLabel(this.owner.config.axis_rotated, this.getYAxisLabelPosition());\n    };\n    c3_axis_fn.xForY2AxisLabel = function xForY2AxisLabel() {\n        return this.xForAxisLabel(this.owner.config.axis_rotated, this.getY2AxisLabelPosition());\n    };\n    c3_axis_fn.dxForXAxisLabel = function dxForXAxisLabel() {\n        return this.dxForAxisLabel(!this.owner.config.axis_rotated, this.getXAxisLabelPosition());\n    };\n    c3_axis_fn.dxForYAxisLabel = function dxForYAxisLabel() {\n        return this.dxForAxisLabel(this.owner.config.axis_rotated, this.getYAxisLabelPosition());\n    };\n    c3_axis_fn.dxForY2AxisLabel = function dxForY2AxisLabel() {\n        return this.dxForAxisLabel(this.owner.config.axis_rotated, this.getY2AxisLabelPosition());\n    };\n    c3_axis_fn.dyForXAxisLabel = function dyForXAxisLabel() {\n        var $$ = this.owner,\n            config = $$.config,\n            position = this.getXAxisLabelPosition();\n        if (config.axis_rotated) {\n            return position.isInner ? \"1.2em\" : -25 - ($$.config.axis_x_inner ? 0 : this.getMaxTickWidth('x'));\n        } else {\n            return position.isInner ? \"-0.5em\" : config.axis_x_height ? config.axis_x_height - 10 : \"3em\";\n        }\n    };\n    c3_axis_fn.dyForYAxisLabel = function dyForYAxisLabel() {\n        var $$ = this.owner,\n            position = this.getYAxisLabelPosition();\n        if ($$.config.axis_rotated) {\n            return position.isInner ? \"-0.5em\" : \"3em\";\n        } else {\n            return position.isInner ? \"1.2em\" : -10 - ($$.config.axis_y_inner ? 0 : this.getMaxTickWidth('y') + 10);\n        }\n    };\n    c3_axis_fn.dyForY2AxisLabel = function dyForY2AxisLabel() {\n        var $$ = this.owner,\n            position = this.getY2AxisLabelPosition();\n        if ($$.config.axis_rotated) {\n            return position.isInner ? \"1.2em\" : \"-2.2em\";\n        } else {\n            return position.isInner ? \"-0.5em\" : 15 + ($$.config.axis_y2_inner ? 0 : this.getMaxTickWidth('y2') + 15);\n        }\n    };\n    c3_axis_fn.textAnchorForXAxisLabel = function textAnchorForXAxisLabel() {\n        var $$ = this.owner;\n        return this.textAnchorForAxisLabel(!$$.config.axis_rotated, this.getXAxisLabelPosition());\n    };\n    c3_axis_fn.textAnchorForYAxisLabel = function textAnchorForYAxisLabel() {\n        var $$ = this.owner;\n        return this.textAnchorForAxisLabel($$.config.axis_rotated, this.getYAxisLabelPosition());\n    };\n    c3_axis_fn.textAnchorForY2AxisLabel = function textAnchorForY2AxisLabel() {\n        var $$ = this.owner;\n        return this.textAnchorForAxisLabel($$.config.axis_rotated, this.getY2AxisLabelPosition());\n    };\n    c3_axis_fn.getMaxTickWidth = function getMaxTickWidth(id, withoutRecompute) {\n        var $$ = this.owner,\n            config = $$.config,\n            maxWidth = 0,\n            targetsToShow,\n            scale,\n            axis,\n            dummy,\n            svg;\n        if (withoutRecompute && $$.currentMaxTickWidths[id]) {\n            return $$.currentMaxTickWidths[id];\n        }\n        if ($$.svg) {\n            targetsToShow = $$.filterTargetsToShow($$.data.targets);\n            if (id === 'y') {\n                scale = $$.y.copy().domain($$.getYDomain(targetsToShow, 'y'));\n                axis = this.getYAxis(scale, $$.yOrient, config.axis_y_tick_format, $$.yAxisTickValues, false, true, true);\n            } else if (id === 'y2') {\n                scale = $$.y2.copy().domain($$.getYDomain(targetsToShow, 'y2'));\n                axis = this.getYAxis(scale, $$.y2Orient, config.axis_y2_tick_format, $$.y2AxisTickValues, false, true, true);\n            } else {\n                scale = $$.x.copy().domain($$.getXDomain(targetsToShow));\n                axis = this.getXAxis(scale, $$.xOrient, $$.xAxisTickFormat, $$.xAxisTickValues, false, true, true);\n                this.updateXAxisTickValues(targetsToShow, axis);\n            }\n            dummy = $$.d3.select('body').append('div').classed('c3', true);\n            svg = dummy.append(\"svg\").style('visibility', 'hidden').style('position', 'fixed').style('top', 0).style('left', 0), svg.append('g').call(axis).each(function () {\n                $$.d3.select(this).selectAll('text').each(function () {\n                    var box = this.getBoundingClientRect();\n                    if (maxWidth < box.width) {\n                        maxWidth = box.width;\n                    }\n                });\n                dummy.remove();\n            });\n        }\n        $$.currentMaxTickWidths[id] = maxWidth <= 0 ? $$.currentMaxTickWidths[id] : maxWidth;\n        return $$.currentMaxTickWidths[id];\n    };\n\n    c3_axis_fn.updateLabels = function updateLabels(withTransition) {\n        var $$ = this.owner;\n        var axisXLabel = $$.main.select('.' + CLASS.axisX + ' .' + CLASS.axisXLabel),\n            axisYLabel = $$.main.select('.' + CLASS.axisY + ' .' + CLASS.axisYLabel),\n            axisY2Label = $$.main.select('.' + CLASS.axisY2 + ' .' + CLASS.axisY2Label);\n        (withTransition ? axisXLabel.transition() : axisXLabel).attr(\"x\", this.xForXAxisLabel.bind(this)).attr(\"dx\", this.dxForXAxisLabel.bind(this)).attr(\"dy\", this.dyForXAxisLabel.bind(this)).text(this.textForXAxisLabel.bind(this));\n        (withTransition ? axisYLabel.transition() : axisYLabel).attr(\"x\", this.xForYAxisLabel.bind(this)).attr(\"dx\", this.dxForYAxisLabel.bind(this)).attr(\"dy\", this.dyForYAxisLabel.bind(this)).text(this.textForYAxisLabel.bind(this));\n        (withTransition ? axisY2Label.transition() : axisY2Label).attr(\"x\", this.xForY2AxisLabel.bind(this)).attr(\"dx\", this.dxForY2AxisLabel.bind(this)).attr(\"dy\", this.dyForY2AxisLabel.bind(this)).text(this.textForY2AxisLabel.bind(this));\n    };\n    c3_axis_fn.getPadding = function getPadding(padding, key, defaultValue, domainLength) {\n        var p = typeof padding === 'number' ? padding : padding[key];\n        if (!isValue(p)) {\n            return defaultValue;\n        }\n        if (padding.unit === 'ratio') {\n            return padding[key] * domainLength;\n        }\n        // assume padding is pixels if unit is not specified\n        return this.convertPixelsToAxisPadding(p, domainLength);\n    };\n    c3_axis_fn.convertPixelsToAxisPadding = function convertPixelsToAxisPadding(pixels, domainLength) {\n        var $$ = this.owner,\n            length = $$.config.axis_rotated ? $$.width : $$.height;\n        return domainLength * (pixels / length);\n    };\n    c3_axis_fn.generateTickValues = function generateTickValues(values, tickCount, forTimeSeries) {\n        var tickValues = values,\n            targetCount,\n            start,\n            end,\n            count,\n            interval,\n            i,\n            tickValue;\n        if (tickCount) {\n            targetCount = isFunction(tickCount) ? tickCount() : tickCount;\n            // compute ticks according to tickCount\n            if (targetCount === 1) {\n                tickValues = [values[0]];\n            } else if (targetCount === 2) {\n                tickValues = [values[0], values[values.length - 1]];\n            } else if (targetCount > 2) {\n                count = targetCount - 2;\n                start = values[0];\n                end = values[values.length - 1];\n                interval = (end - start) / (count + 1);\n                // re-construct unique values\n                tickValues = [start];\n                for (i = 0; i < count; i++) {\n                    tickValue = +start + interval * (i + 1);\n                    tickValues.push(forTimeSeries ? new Date(tickValue) : tickValue);\n                }\n                tickValues.push(end);\n            }\n        }\n        if (!forTimeSeries) {\n            tickValues = tickValues.sort(function (a, b) {\n                return a - b;\n            });\n        }\n        return tickValues;\n    };\n    c3_axis_fn.generateTransitions = function generateTransitions(duration) {\n        var $$ = this.owner,\n            axes = $$.axes;\n        return {\n            axisX: duration ? axes.x.transition().duration(duration) : axes.x,\n            axisY: duration ? axes.y.transition().duration(duration) : axes.y,\n            axisY2: duration ? axes.y2.transition().duration(duration) : axes.y2,\n            axisSubX: duration ? axes.subx.transition().duration(duration) : axes.subx\n        };\n    };\n    c3_axis_fn.redraw = function redraw(duration, isHidden) {\n        var $$ = this.owner,\n            transition = duration ? $$.d3.transition().duration(duration) : null;\n        $$.axes.x.style(\"opacity\", isHidden ? 0 : 1).call($$.xAxis, transition);\n        $$.axes.y.style(\"opacity\", isHidden ? 0 : 1).call($$.yAxis, transition);\n        $$.axes.y2.style(\"opacity\", isHidden ? 0 : 1).call($$.y2Axis, transition);\n        $$.axes.subx.style(\"opacity\", isHidden ? 0 : 1).call($$.subXAxis, transition);\n    };\n\n    var c3 = { version: \"0.6.2\" };\n\n    var c3_chart_fn;\n    var c3_chart_internal_fn;\n\n    function Component(owner, componentKey, fn) {\n        this.owner = owner;\n        c3.chart.internal[componentKey] = fn;\n    }\n\n    function Chart(config) {\n        var $$ = this.internal = new ChartInternal(this);\n        $$.loadConfig(config);\n\n        $$.beforeInit(config);\n        $$.init();\n        $$.afterInit(config);\n\n        // bind \"this\" to nested API\n        (function bindThis(fn, target, argThis) {\n            Object.keys(fn).forEach(function (key) {\n                target[key] = fn[key].bind(argThis);\n                if (Object.keys(fn[key]).length > 0) {\n                    bindThis(fn[key], target[key], argThis);\n                }\n            });\n        })(c3_chart_fn, this, this);\n    }\n\n    function ChartInternal(api) {\n        var $$ = this;\n        $$.d3 = window.d3 ? window.d3 : typeof require !== 'undefined' ? require(\"d3\") : undefined;\n        $$.api = api;\n        $$.config = $$.getDefaultConfig();\n        $$.data = {};\n        $$.cache = {};\n        $$.axes = {};\n    }\n\n    c3.generate = function (config) {\n        return new Chart(config);\n    };\n\n    c3.chart = {\n        fn: Chart.prototype,\n        internal: {\n            fn: ChartInternal.prototype\n        }\n    };\n    c3_chart_fn = c3.chart.fn;\n    c3_chart_internal_fn = c3.chart.internal.fn;\n\n    c3_chart_internal_fn.beforeInit = function () {\n        // can do something\n    };\n    c3_chart_internal_fn.afterInit = function () {\n        // can do something\n    };\n    c3_chart_internal_fn.init = function () {\n        var $$ = this,\n            config = $$.config;\n\n        $$.initParams();\n\n        if (config.data_url) {\n            $$.convertUrlToData(config.data_url, config.data_mimeType, config.data_headers, config.data_keys, $$.initWithData);\n        } else if (config.data_json) {\n            $$.initWithData($$.convertJsonToData(config.data_json, config.data_keys));\n        } else if (config.data_rows) {\n            $$.initWithData($$.convertRowsToData(config.data_rows));\n        } else if (config.data_columns) {\n            $$.initWithData($$.convertColumnsToData(config.data_columns));\n        } else {\n            throw Error('url or json or rows or columns is required.');\n        }\n    };\n\n    c3_chart_internal_fn.initParams = function () {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config;\n\n        // MEMO: clipId needs to be unique because it conflicts when multiple charts exist\n        $$.clipId = \"c3-\" + +new Date() + '-clip', $$.clipIdForXAxis = $$.clipId + '-xaxis', $$.clipIdForYAxis = $$.clipId + '-yaxis', $$.clipIdForGrid = $$.clipId + '-grid', $$.clipIdForSubchart = $$.clipId + '-subchart', $$.clipPath = $$.getClipPath($$.clipId), $$.clipPathForXAxis = $$.getClipPath($$.clipIdForXAxis), $$.clipPathForYAxis = $$.getClipPath($$.clipIdForYAxis);\n        $$.clipPathForGrid = $$.getClipPath($$.clipIdForGrid), $$.clipPathForSubchart = $$.getClipPath($$.clipIdForSubchart), $$.dragStart = null;\n        $$.dragging = false;\n        $$.flowing = false;\n        $$.cancelClick = false;\n        $$.mouseover = false;\n        $$.transiting = false;\n\n        $$.color = $$.generateColor();\n        $$.levelColor = $$.generateLevelColor();\n\n        $$.dataTimeParse = (config.data_xLocaltime ? d3.timeParse : d3.utcParse)($$.config.data_xFormat);\n        $$.axisTimeFormat = config.axis_x_localtime ? d3.timeFormat : d3.utcFormat;\n        $$.defaultAxisTimeFormat = function (date) {\n            if (date.getMilliseconds()) {\n                return d3.timeFormat(\".%L\")(date);\n            }\n            if (date.getSeconds()) {\n                return d3.timeFormat(\":%S\")(date);\n            }\n            if (date.getMinutes()) {\n                return d3.timeFormat(\"%I:%M\")(date);\n            }\n            if (date.getHours()) {\n                return d3.timeFormat(\"%I %p\")(date);\n            }\n            if (date.getDay() && date.getDate() !== 1) {\n                return d3.timeFormat(\"%-m/%-d\")(date);\n            }\n            if (date.getDate() !== 1) {\n                return d3.timeFormat(\"%-m/%-d\")(date);\n            }\n            if (date.getMonth()) {\n                return d3.timeFormat(\"%-m/%-d\")(date);\n            }\n            return d3.timeFormat(\"%Y/%-m/%-d\")(date);\n        };\n        $$.hiddenTargetIds = [];\n        $$.hiddenLegendIds = [];\n        $$.focusedTargetIds = [];\n        $$.defocusedTargetIds = [];\n\n        $$.xOrient = config.axis_rotated ? config.axis_x_inner ? \"right\" : \"left\" : config.axis_x_inner ? \"top\" : \"bottom\";\n        $$.yOrient = config.axis_rotated ? config.axis_y_inner ? \"top\" : \"bottom\" : config.axis_y_inner ? \"right\" : \"left\";\n        $$.y2Orient = config.axis_rotated ? config.axis_y2_inner ? \"bottom\" : \"top\" : config.axis_y2_inner ? \"left\" : \"right\";\n        $$.subXOrient = config.axis_rotated ? \"left\" : \"bottom\";\n\n        $$.isLegendRight = config.legend_position === 'right';\n        $$.isLegendInset = config.legend_position === 'inset';\n        $$.isLegendTop = config.legend_inset_anchor === 'top-left' || config.legend_inset_anchor === 'top-right';\n        $$.isLegendLeft = config.legend_inset_anchor === 'top-left' || config.legend_inset_anchor === 'bottom-left';\n        $$.legendStep = 0;\n        $$.legendItemWidth = 0;\n        $$.legendItemHeight = 0;\n\n        $$.currentMaxTickWidths = {\n            x: 0,\n            y: 0,\n            y2: 0\n        };\n\n        $$.rotated_padding_left = 30;\n        $$.rotated_padding_right = config.axis_rotated && !config.axis_x_show ? 0 : 30;\n        $$.rotated_padding_top = 5;\n\n        $$.withoutFadeIn = {};\n\n        $$.intervalForObserveInserted = undefined;\n\n        $$.axes.subx = d3.selectAll([]); // needs when excluding subchart.js\n    };\n\n    c3_chart_internal_fn.initChartElements = function () {\n        if (this.initBar) {\n            this.initBar();\n        }\n        if (this.initLine) {\n            this.initLine();\n        }\n        if (this.initArc) {\n            this.initArc();\n        }\n        if (this.initGauge) {\n            this.initGauge();\n        }\n        if (this.initText) {\n            this.initText();\n        }\n    };\n\n    c3_chart_internal_fn.initWithData = function (data) {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config;\n        var defs,\n            main,\n            binding = true;\n\n        $$.axis = new Axis($$);\n\n        if (!config.bindto) {\n            $$.selectChart = d3.selectAll([]);\n        } else if (typeof config.bindto.node === 'function') {\n            $$.selectChart = config.bindto;\n        } else {\n            $$.selectChart = d3.select(config.bindto);\n        }\n        if ($$.selectChart.empty()) {\n            $$.selectChart = d3.select(document.createElement('div')).style('opacity', 0);\n            $$.observeInserted($$.selectChart);\n            binding = false;\n        }\n        $$.selectChart.html(\"\").classed(\"c3\", true);\n\n        // Init data as targets\n        $$.data.xs = {};\n        $$.data.targets = $$.convertDataToTargets(data);\n\n        if (config.data_filter) {\n            $$.data.targets = $$.data.targets.filter(config.data_filter);\n        }\n\n        // Set targets to hide if needed\n        if (config.data_hide) {\n            $$.addHiddenTargetIds(config.data_hide === true ? $$.mapToIds($$.data.targets) : config.data_hide);\n        }\n        if (config.legend_hide) {\n            $$.addHiddenLegendIds(config.legend_hide === true ? $$.mapToIds($$.data.targets) : config.legend_hide);\n        }\n\n        // Init sizes and scales\n        $$.updateSizes();\n        $$.updateScales();\n\n        // Set domains for each scale\n        $$.x.domain(d3.extent($$.getXDomain($$.data.targets)));\n        $$.y.domain($$.getYDomain($$.data.targets, 'y'));\n        $$.y2.domain($$.getYDomain($$.data.targets, 'y2'));\n        $$.subX.domain($$.x.domain());\n        $$.subY.domain($$.y.domain());\n        $$.subY2.domain($$.y2.domain());\n\n        // Save original x domain for zoom update\n        $$.orgXDomain = $$.x.domain();\n\n        /*-- Basic Elements --*/\n\n        // Define svgs\n        $$.svg = $$.selectChart.append(\"svg\").style(\"overflow\", \"hidden\").on('mouseenter', function () {\n            return config.onmouseover.call($$);\n        }).on('mouseleave', function () {\n            return config.onmouseout.call($$);\n        });\n\n        if ($$.config.svg_classname) {\n            $$.svg.attr('class', $$.config.svg_classname);\n        }\n\n        // Define defs\n        defs = $$.svg.append(\"defs\");\n        $$.clipChart = $$.appendClip(defs, $$.clipId);\n        $$.clipXAxis = $$.appendClip(defs, $$.clipIdForXAxis);\n        $$.clipYAxis = $$.appendClip(defs, $$.clipIdForYAxis);\n        $$.clipGrid = $$.appendClip(defs, $$.clipIdForGrid);\n        $$.clipSubchart = $$.appendClip(defs, $$.clipIdForSubchart);\n        $$.updateSvgSize();\n\n        // Define regions\n        main = $$.main = $$.svg.append(\"g\").attr(\"transform\", $$.getTranslate('main'));\n\n        if ($$.initPie) {\n            $$.initPie();\n        }\n        if ($$.initSubchart) {\n            $$.initSubchart();\n        }\n        if ($$.initTooltip) {\n            $$.initTooltip();\n        }\n        if ($$.initLegend) {\n            $$.initLegend();\n        }\n        if ($$.initTitle) {\n            $$.initTitle();\n        }\n        if ($$.initZoom) {\n            $$.initZoom();\n        }\n\n        // Update selection based on size and scale\n        // TODO: currently this must be called after initLegend because of update of sizes, but it should be done in initSubchart.\n        if ($$.initSubchartBrush) {\n            $$.initSubchartBrush();\n        }\n\n        /*-- Main Region --*/\n\n        // text when empty\n        main.append(\"text\").attr(\"class\", CLASS.text + ' ' + CLASS.empty).attr(\"text-anchor\", \"middle\") // horizontal centering of text at x position in all browsers.\n        .attr(\"dominant-baseline\", \"middle\"); // vertical centering of text at y position in all browsers, except IE.\n\n        // Regions\n        $$.initRegion();\n\n        // Grids\n        $$.initGrid();\n\n        // Define g for chart area\n        main.append('g').attr(\"clip-path\", $$.clipPath).attr('class', CLASS.chart);\n\n        // Grid lines\n        if (config.grid_lines_front) {\n            $$.initGridLines();\n        }\n\n        // Define g for chart\n        $$.initChartElements();\n\n        // Add Axis\n        $$.axis.init();\n\n        // Set targets\n        $$.updateTargets($$.data.targets);\n\n        // Cover whole with rects for events\n        $$.initEventRect();\n\n        // Set default extent if defined\n        if (config.axis_x_selection) {\n            $$.brush.selectionAsValue($$.getDefaultSelection());\n        }\n\n        // Draw with targets\n        if (binding) {\n            $$.updateDimension();\n            $$.config.oninit.call($$);\n            $$.redraw({\n                withTransition: false,\n                withTransform: true,\n                withUpdateXDomain: true,\n                withUpdateOrgXDomain: true,\n                withTransitionForAxis: false\n            });\n        }\n\n        // Bind resize event\n        $$.bindResize();\n\n        // export element of the chart\n        $$.api.element = $$.selectChart.node();\n    };\n\n    c3_chart_internal_fn.smoothLines = function (el, type) {\n        var $$ = this;\n        if (type === 'grid') {\n            el.each(function () {\n                var g = $$.d3.select(this),\n                    x1 = g.attr('x1'),\n                    x2 = g.attr('x2'),\n                    y1 = g.attr('y1'),\n                    y2 = g.attr('y2');\n                g.attr({\n                    'x1': Math.ceil(x1),\n                    'x2': Math.ceil(x2),\n                    'y1': Math.ceil(y1),\n                    'y2': Math.ceil(y2)\n                });\n            });\n        }\n    };\n\n    c3_chart_internal_fn.updateSizes = function () {\n        var $$ = this,\n            config = $$.config;\n        var legendHeight = $$.legend ? $$.getLegendHeight() : 0,\n            legendWidth = $$.legend ? $$.getLegendWidth() : 0,\n            legendHeightForBottom = $$.isLegendRight || $$.isLegendInset ? 0 : legendHeight,\n            hasArc = $$.hasArcType(),\n            xAxisHeight = config.axis_rotated || hasArc ? 0 : $$.getHorizontalAxisHeight('x'),\n            subchartHeight = config.subchart_show && !hasArc ? config.subchart_size_height + xAxisHeight : 0;\n\n        $$.currentWidth = $$.getCurrentWidth();\n        $$.currentHeight = $$.getCurrentHeight();\n\n        // for main\n        $$.margin = config.axis_rotated ? {\n            top: $$.getHorizontalAxisHeight('y2') + $$.getCurrentPaddingTop(),\n            right: hasArc ? 0 : $$.getCurrentPaddingRight(),\n            bottom: $$.getHorizontalAxisHeight('y') + legendHeightForBottom + $$.getCurrentPaddingBottom(),\n            left: subchartHeight + (hasArc ? 0 : $$.getCurrentPaddingLeft())\n        } : {\n            top: 4 + $$.getCurrentPaddingTop(), // for top tick text\n            right: hasArc ? 0 : $$.getCurrentPaddingRight(),\n            bottom: xAxisHeight + subchartHeight + legendHeightForBottom + $$.getCurrentPaddingBottom(),\n            left: hasArc ? 0 : $$.getCurrentPaddingLeft()\n        };\n\n        // for subchart\n        $$.margin2 = config.axis_rotated ? {\n            top: $$.margin.top,\n            right: NaN,\n            bottom: 20 + legendHeightForBottom,\n            left: $$.rotated_padding_left\n        } : {\n            top: $$.currentHeight - subchartHeight - legendHeightForBottom,\n            right: NaN,\n            bottom: xAxisHeight + legendHeightForBottom,\n            left: $$.margin.left\n        };\n\n        // for legend\n        $$.margin3 = {\n            top: 0,\n            right: NaN,\n            bottom: 0,\n            left: 0\n        };\n        if ($$.updateSizeForLegend) {\n            $$.updateSizeForLegend(legendHeight, legendWidth);\n        }\n\n        $$.width = $$.currentWidth - $$.margin.left - $$.margin.right;\n        $$.height = $$.currentHeight - $$.margin.top - $$.margin.bottom;\n        if ($$.width < 0) {\n            $$.width = 0;\n        }\n        if ($$.height < 0) {\n            $$.height = 0;\n        }\n\n        $$.width2 = config.axis_rotated ? $$.margin.left - $$.rotated_padding_left - $$.rotated_padding_right : $$.width;\n        $$.height2 = config.axis_rotated ? $$.height : $$.currentHeight - $$.margin2.top - $$.margin2.bottom;\n        if ($$.width2 < 0) {\n            $$.width2 = 0;\n        }\n        if ($$.height2 < 0) {\n            $$.height2 = 0;\n        }\n\n        // for arc\n        $$.arcWidth = $$.width - ($$.isLegendRight ? legendWidth + 10 : 0);\n        $$.arcHeight = $$.height - ($$.isLegendRight ? 0 : 10);\n        if ($$.hasType('gauge') && !config.gauge_fullCircle) {\n            $$.arcHeight += $$.height - $$.getGaugeLabelHeight();\n        }\n        if ($$.updateRadius) {\n            $$.updateRadius();\n        }\n\n        if ($$.isLegendRight && hasArc) {\n            $$.margin3.left = $$.arcWidth / 2 + $$.radiusExpanded * 1.1;\n        }\n    };\n\n    c3_chart_internal_fn.updateTargets = function (targets) {\n        var $$ = this;\n\n        /*-- Main --*/\n\n        //-- Text --//\n        $$.updateTargetsForText(targets);\n\n        //-- Bar --//\n        $$.updateTargetsForBar(targets);\n\n        //-- Line --//\n        $$.updateTargetsForLine(targets);\n\n        //-- Arc --//\n        if ($$.hasArcType() && $$.updateTargetsForArc) {\n            $$.updateTargetsForArc(targets);\n        }\n\n        /*-- Sub --*/\n\n        if ($$.updateTargetsForSubchart) {\n            $$.updateTargetsForSubchart(targets);\n        }\n\n        // Fade-in each chart\n        $$.showTargets();\n    };\n    c3_chart_internal_fn.showTargets = function () {\n        var $$ = this;\n        $$.svg.selectAll('.' + CLASS.target).filter(function (d) {\n            return $$.isTargetToShow(d.id);\n        }).transition().duration($$.config.transition_duration).style(\"opacity\", 1);\n    };\n\n    c3_chart_internal_fn.redraw = function (options, transitions) {\n        var $$ = this,\n            main = $$.main,\n            d3 = $$.d3,\n            config = $$.config;\n        var areaIndices = $$.getShapeIndices($$.isAreaType),\n            barIndices = $$.getShapeIndices($$.isBarType),\n            lineIndices = $$.getShapeIndices($$.isLineType);\n        var withY, withSubchart, withTransition, withTransitionForExit, withTransitionForAxis, withTransform, withUpdateXDomain, withUpdateOrgXDomain, withTrimXDomain, withLegend, withEventRect, withDimension, withUpdateXAxis;\n        var hideAxis = $$.hasArcType();\n        var drawArea, drawBar, drawLine, xForText, yForText;\n        var duration, durationForExit, durationForAxis;\n        var transitionsToWait, waitForDraw, flow, transition;\n        var targetsToShow = $$.filterTargetsToShow($$.data.targets),\n            tickValues,\n            i,\n            intervalForCulling,\n            xDomainForZoom;\n        var xv = $$.xv.bind($$),\n            cx,\n            cy;\n\n        options = options || {};\n        withY = getOption(options, \"withY\", true);\n        withSubchart = getOption(options, \"withSubchart\", true);\n        withTransition = getOption(options, \"withTransition\", true);\n        withTransform = getOption(options, \"withTransform\", false);\n        withUpdateXDomain = getOption(options, \"withUpdateXDomain\", false);\n        withUpdateOrgXDomain = getOption(options, \"withUpdateOrgXDomain\", false);\n        withTrimXDomain = getOption(options, \"withTrimXDomain\", true);\n        withUpdateXAxis = getOption(options, \"withUpdateXAxis\", withUpdateXDomain);\n        withLegend = getOption(options, \"withLegend\", false);\n        withEventRect = getOption(options, \"withEventRect\", true);\n        withDimension = getOption(options, \"withDimension\", true);\n        withTransitionForExit = getOption(options, \"withTransitionForExit\", withTransition);\n        withTransitionForAxis = getOption(options, \"withTransitionForAxis\", withTransition);\n\n        duration = withTransition ? config.transition_duration : 0;\n        durationForExit = withTransitionForExit ? duration : 0;\n        durationForAxis = withTransitionForAxis ? duration : 0;\n\n        transitions = transitions || $$.axis.generateTransitions(durationForAxis);\n\n        // update legend and transform each g\n        if (withLegend && config.legend_show) {\n            $$.updateLegend($$.mapToIds($$.data.targets), options, transitions);\n        } else if (withDimension) {\n            // need to update dimension (e.g. axis.y.tick.values) because y tick values should change\n            // no need to update axis in it because they will be updated in redraw()\n            $$.updateDimension(true);\n        }\n\n        // MEMO: needed for grids calculation\n        if ($$.isCategorized() && targetsToShow.length === 0) {\n            $$.x.domain([0, $$.axes.x.selectAll('.tick').size()]);\n        }\n\n        if (targetsToShow.length) {\n            $$.updateXDomain(targetsToShow, withUpdateXDomain, withUpdateOrgXDomain, withTrimXDomain);\n            if (!config.axis_x_tick_values) {\n                tickValues = $$.axis.updateXAxisTickValues(targetsToShow);\n            }\n        } else {\n            $$.xAxis.tickValues([]);\n            $$.subXAxis.tickValues([]);\n        }\n\n        if (config.zoom_rescale && !options.flow) {\n            xDomainForZoom = $$.x.orgDomain();\n        }\n\n        $$.y.domain($$.getYDomain(targetsToShow, 'y', xDomainForZoom));\n        $$.y2.domain($$.getYDomain(targetsToShow, 'y2', xDomainForZoom));\n\n        if (!config.axis_y_tick_values && config.axis_y_tick_count) {\n            $$.yAxis.tickValues($$.axis.generateTickValues($$.y.domain(), config.axis_y_tick_count));\n        }\n        if (!config.axis_y2_tick_values && config.axis_y2_tick_count) {\n            $$.y2Axis.tickValues($$.axis.generateTickValues($$.y2.domain(), config.axis_y2_tick_count));\n        }\n\n        // axes\n        $$.axis.redraw(durationForAxis, hideAxis);\n\n        // Update axis label\n        $$.axis.updateLabels(withTransition);\n\n        // show/hide if manual culling needed\n        if ((withUpdateXDomain || withUpdateXAxis) && targetsToShow.length) {\n            if (config.axis_x_tick_culling && tickValues) {\n                for (i = 1; i < tickValues.length; i++) {\n                    if (tickValues.length / i < config.axis_x_tick_culling_max) {\n                        intervalForCulling = i;\n                        break;\n                    }\n                }\n                $$.svg.selectAll('.' + CLASS.axisX + ' .tick text').each(function (e) {\n                    var index = tickValues.indexOf(e);\n                    if (index >= 0) {\n                        d3.select(this).style('display', index % intervalForCulling ? 'none' : 'block');\n                    }\n                });\n            } else {\n                $$.svg.selectAll('.' + CLASS.axisX + ' .tick text').style('display', 'block');\n            }\n        }\n\n        // setup drawer - MEMO: these must be called after axis updated\n        drawArea = $$.generateDrawArea ? $$.generateDrawArea(areaIndices, false) : undefined;\n        drawBar = $$.generateDrawBar ? $$.generateDrawBar(barIndices) : undefined;\n        drawLine = $$.generateDrawLine ? $$.generateDrawLine(lineIndices, false) : undefined;\n        xForText = $$.generateXYForText(areaIndices, barIndices, lineIndices, true);\n        yForText = $$.generateXYForText(areaIndices, barIndices, lineIndices, false);\n\n        // update circleY based on updated parameters\n        $$.updateCircleY();\n        // generate circle x/y functions depending on updated params\n        cx = ($$.config.axis_rotated ? $$.circleY : $$.circleX).bind($$);\n        cy = ($$.config.axis_rotated ? $$.circleX : $$.circleY).bind($$);\n\n        // Update sub domain\n        if (withY) {\n            $$.subY.domain($$.getYDomain(targetsToShow, 'y'));\n            $$.subY2.domain($$.getYDomain(targetsToShow, 'y2'));\n        }\n\n        // xgrid focus\n        $$.updateXgridFocus();\n\n        // Data empty label positioning and text.\n        main.select(\"text.\" + CLASS.text + '.' + CLASS.empty).attr(\"x\", $$.width / 2).attr(\"y\", $$.height / 2).text(config.data_empty_label_text).transition().style('opacity', targetsToShow.length ? 0 : 1);\n\n        // event rect\n        if (withEventRect) {\n            $$.redrawEventRect();\n        }\n\n        // grid\n        $$.updateGrid(duration);\n\n        // rect for regions\n        $$.updateRegion(duration);\n\n        // bars\n        $$.updateBar(durationForExit);\n\n        // lines, areas and cricles\n        $$.updateLine(durationForExit);\n        $$.updateArea(durationForExit);\n        $$.updateCircle(cx, cy);\n\n        // text\n        if ($$.hasDataLabel()) {\n            $$.updateText(xForText, yForText, durationForExit);\n        }\n\n        // title\n        if ($$.redrawTitle) {\n            $$.redrawTitle();\n        }\n\n        // arc\n        if ($$.redrawArc) {\n            $$.redrawArc(duration, durationForExit, withTransform);\n        }\n\n        // subchart\n        if ($$.redrawSubchart) {\n            $$.redrawSubchart(withSubchart, transitions, duration, durationForExit, areaIndices, barIndices, lineIndices);\n        }\n\n        // circles for select\n        main.selectAll('.' + CLASS.selectedCircles).filter($$.isBarType.bind($$)).selectAll('circle').remove();\n\n        if (options.flow) {\n            flow = $$.generateFlow({\n                targets: targetsToShow,\n                flow: options.flow,\n                duration: options.flow.duration,\n                drawBar: drawBar,\n                drawLine: drawLine,\n                drawArea: drawArea,\n                cx: cx,\n                cy: cy,\n                xv: xv,\n                xForText: xForText,\n                yForText: yForText\n            });\n        }\n\n        if ($$.isTabVisible()) {\n            // Only use transition if tab visible. See #938.\n            if (duration) {\n                // transition should be derived from one transition\n                transition = d3.transition().duration(duration);\n                transitionsToWait = [];\n                [$$.redrawBar(drawBar, true, transition), $$.redrawLine(drawLine, true, transition), $$.redrawArea(drawArea, true, transition), $$.redrawCircle(cx, cy, true, transition), $$.redrawText(xForText, yForText, options.flow, true, transition), $$.redrawRegion(true, transition), $$.redrawGrid(true, transition)].forEach(function (transitions) {\n                    transitions.forEach(function (transition) {\n                        transitionsToWait.push(transition);\n                    });\n                });\n                // Wait for end of transitions to call flow and onrendered callback\n                waitForDraw = $$.generateWait();\n                transitionsToWait.forEach(function (t) {\n                    waitForDraw.add(t);\n                });\n                waitForDraw(function () {\n                    if (flow) {\n                        flow();\n                    }\n                    if (config.onrendered) {\n                        config.onrendered.call($$);\n                    }\n                });\n            } else {\n                $$.redrawBar(drawBar);\n                $$.redrawLine(drawLine);\n                $$.redrawArea(drawArea);\n                $$.redrawCircle(cx, cy);\n                $$.redrawText(xForText, yForText, options.flow);\n                $$.redrawRegion();\n                $$.redrawGrid();\n                if (flow) {\n                    flow();\n                }\n                if (config.onrendered) {\n                    config.onrendered.call($$);\n                }\n            }\n        }\n\n        // update fadein condition\n        $$.mapToIds($$.data.targets).forEach(function (id) {\n            $$.withoutFadeIn[id] = true;\n        });\n    };\n\n    c3_chart_internal_fn.updateAndRedraw = function (options) {\n        var $$ = this,\n            config = $$.config,\n            transitions;\n        options = options || {};\n        // same with redraw\n        options.withTransition = getOption(options, \"withTransition\", true);\n        options.withTransform = getOption(options, \"withTransform\", false);\n        options.withLegend = getOption(options, \"withLegend\", false);\n        // NOT same with redraw\n        options.withUpdateXDomain = getOption(options, \"withUpdateXDomain\", true);\n        options.withUpdateOrgXDomain = getOption(options, \"withUpdateOrgXDomain\", true);\n        options.withTransitionForExit = false;\n        options.withTransitionForTransform = getOption(options, \"withTransitionForTransform\", options.withTransition);\n        // MEMO: this needs to be called before updateLegend and it means this ALWAYS needs to be called)\n        $$.updateSizes();\n        // MEMO: called in updateLegend in redraw if withLegend\n        if (!(options.withLegend && config.legend_show)) {\n            transitions = $$.axis.generateTransitions(options.withTransitionForAxis ? config.transition_duration : 0);\n            // Update scales\n            $$.updateScales();\n            $$.updateSvgSize();\n            // Update g positions\n            $$.transformAll(options.withTransitionForTransform, transitions);\n        }\n        // Draw with new sizes & scales\n        $$.redraw(options, transitions);\n    };\n    c3_chart_internal_fn.redrawWithoutRescale = function () {\n        this.redraw({\n            withY: false,\n            withSubchart: false,\n            withEventRect: false,\n            withTransitionForAxis: false\n        });\n    };\n\n    c3_chart_internal_fn.isTimeSeries = function () {\n        return this.config.axis_x_type === 'timeseries';\n    };\n    c3_chart_internal_fn.isCategorized = function () {\n        return this.config.axis_x_type.indexOf('categor') >= 0;\n    };\n    c3_chart_internal_fn.isCustomX = function () {\n        var $$ = this,\n            config = $$.config;\n        return !$$.isTimeSeries() && (config.data_x || notEmpty(config.data_xs));\n    };\n\n    c3_chart_internal_fn.isTimeSeriesY = function () {\n        return this.config.axis_y_type === 'timeseries';\n    };\n\n    c3_chart_internal_fn.getTranslate = function (target) {\n        var $$ = this,\n            config = $$.config,\n            x,\n            y;\n        if (target === 'main') {\n            x = asHalfPixel($$.margin.left);\n            y = asHalfPixel($$.margin.top);\n        } else if (target === 'context') {\n            x = asHalfPixel($$.margin2.left);\n            y = asHalfPixel($$.margin2.top);\n        } else if (target === 'legend') {\n            x = $$.margin3.left;\n            y = $$.margin3.top;\n        } else if (target === 'x') {\n            x = 0;\n            y = config.axis_rotated ? 0 : $$.height;\n        } else if (target === 'y') {\n            x = 0;\n            y = config.axis_rotated ? $$.height : 0;\n        } else if (target === 'y2') {\n            x = config.axis_rotated ? 0 : $$.width;\n            y = config.axis_rotated ? 1 : 0;\n        } else if (target === 'subx') {\n            x = 0;\n            y = config.axis_rotated ? 0 : $$.height2;\n        } else if (target === 'arc') {\n            x = $$.arcWidth / 2;\n            y = $$.arcHeight / 2 - ($$.hasType('gauge') ? 6 : 0); // to prevent wrong display of min and max label\n        }\n        return \"translate(\" + x + \",\" + y + \")\";\n    };\n    c3_chart_internal_fn.initialOpacity = function (d) {\n        return d.value !== null && this.withoutFadeIn[d.id] ? 1 : 0;\n    };\n    c3_chart_internal_fn.initialOpacityForCircle = function (d) {\n        return d.value !== null && this.withoutFadeIn[d.id] ? this.opacityForCircle(d) : 0;\n    };\n    c3_chart_internal_fn.opacityForCircle = function (d) {\n        var isPointShouldBeShown = isFunction(this.config.point_show) ? this.config.point_show(d) : this.config.point_show;\n        var opacity = isPointShouldBeShown ? 1 : 0;\n        return isValue(d.value) ? this.isScatterType(d) ? 0.5 : opacity : 0;\n    };\n    c3_chart_internal_fn.opacityForText = function () {\n        return this.hasDataLabel() ? 1 : 0;\n    };\n    c3_chart_internal_fn.xx = function (d) {\n        return d ? this.x(d.x) : null;\n    };\n    c3_chart_internal_fn.xv = function (d) {\n        var $$ = this,\n            value = d.value;\n        if ($$.isTimeSeries()) {\n            value = $$.parseDate(d.value);\n        } else if ($$.isCategorized() && typeof d.value === 'string') {\n            value = $$.config.axis_x_categories.indexOf(d.value);\n        }\n        return Math.ceil($$.x(value));\n    };\n    c3_chart_internal_fn.yv = function (d) {\n        var $$ = this,\n            yScale = d.axis && d.axis === 'y2' ? $$.y2 : $$.y;\n        return Math.ceil(yScale(d.value));\n    };\n    c3_chart_internal_fn.subxx = function (d) {\n        return d ? this.subX(d.x) : null;\n    };\n\n    c3_chart_internal_fn.transformMain = function (withTransition, transitions) {\n        var $$ = this,\n            xAxis,\n            yAxis,\n            y2Axis;\n        if (transitions && transitions.axisX) {\n            xAxis = transitions.axisX;\n        } else {\n            xAxis = $$.main.select('.' + CLASS.axisX);\n            if (withTransition) {\n                xAxis = xAxis.transition();\n            }\n        }\n        if (transitions && transitions.axisY) {\n            yAxis = transitions.axisY;\n        } else {\n            yAxis = $$.main.select('.' + CLASS.axisY);\n            if (withTransition) {\n                yAxis = yAxis.transition();\n            }\n        }\n        if (transitions && transitions.axisY2) {\n            y2Axis = transitions.axisY2;\n        } else {\n            y2Axis = $$.main.select('.' + CLASS.axisY2);\n            if (withTransition) {\n                y2Axis = y2Axis.transition();\n            }\n        }\n        (withTransition ? $$.main.transition() : $$.main).attr(\"transform\", $$.getTranslate('main'));\n        xAxis.attr(\"transform\", $$.getTranslate('x'));\n        yAxis.attr(\"transform\", $$.getTranslate('y'));\n        y2Axis.attr(\"transform\", $$.getTranslate('y2'));\n        $$.main.select('.' + CLASS.chartArcs).attr(\"transform\", $$.getTranslate('arc'));\n    };\n    c3_chart_internal_fn.transformAll = function (withTransition, transitions) {\n        var $$ = this;\n        $$.transformMain(withTransition, transitions);\n        if ($$.config.subchart_show) {\n            $$.transformContext(withTransition, transitions);\n        }\n        if ($$.legend) {\n            $$.transformLegend(withTransition);\n        }\n    };\n\n    c3_chart_internal_fn.updateSvgSize = function () {\n        var $$ = this,\n            brush = $$.svg.select(\".c3-brush .overlay\");\n        $$.svg.attr('width', $$.currentWidth).attr('height', $$.currentHeight);\n        $$.svg.selectAll(['#' + $$.clipId, '#' + $$.clipIdForGrid]).select('rect').attr('width', $$.width).attr('height', $$.height);\n        $$.svg.select('#' + $$.clipIdForXAxis).select('rect').attr('x', $$.getXAxisClipX.bind($$)).attr('y', $$.getXAxisClipY.bind($$)).attr('width', $$.getXAxisClipWidth.bind($$)).attr('height', $$.getXAxisClipHeight.bind($$));\n        $$.svg.select('#' + $$.clipIdForYAxis).select('rect').attr('x', $$.getYAxisClipX.bind($$)).attr('y', $$.getYAxisClipY.bind($$)).attr('width', $$.getYAxisClipWidth.bind($$)).attr('height', $$.getYAxisClipHeight.bind($$));\n        $$.svg.select('#' + $$.clipIdForSubchart).select('rect').attr('width', $$.width).attr('height', brush.size() ? brush.attr('height') : 0);\n        // MEMO: parent div's height will be bigger than svg when <!DOCTYPE html>\n        $$.selectChart.style('max-height', $$.currentHeight + \"px\");\n    };\n\n    c3_chart_internal_fn.updateDimension = function (withoutAxis) {\n        var $$ = this;\n        if (!withoutAxis) {\n            if ($$.config.axis_rotated) {\n                $$.axes.x.call($$.xAxis);\n                $$.axes.subx.call($$.subXAxis);\n            } else {\n                $$.axes.y.call($$.yAxis);\n                $$.axes.y2.call($$.y2Axis);\n            }\n        }\n        $$.updateSizes();\n        $$.updateScales();\n        $$.updateSvgSize();\n        $$.transformAll(false);\n    };\n\n    c3_chart_internal_fn.observeInserted = function (selection) {\n        var $$ = this,\n            observer;\n        if (typeof MutationObserver === 'undefined') {\n            window.console.error(\"MutationObserver not defined.\");\n            return;\n        }\n        observer = new MutationObserver(function (mutations) {\n            mutations.forEach(function (mutation) {\n                if (mutation.type === 'childList' && mutation.previousSibling) {\n                    observer.disconnect();\n                    // need to wait for completion of load because size calculation requires the actual sizes determined after that completion\n                    $$.intervalForObserveInserted = window.setInterval(function () {\n                        // parentNode will NOT be null when completed\n                        if (selection.node().parentNode) {\n                            window.clearInterval($$.intervalForObserveInserted);\n                            $$.updateDimension();\n                            if ($$.brush) {\n                                $$.brush.update();\n                            }\n                            $$.config.oninit.call($$);\n                            $$.redraw({\n                                withTransform: true,\n                                withUpdateXDomain: true,\n                                withUpdateOrgXDomain: true,\n                                withTransition: false,\n                                withTransitionForTransform: false,\n                                withLegend: true\n                            });\n                            selection.transition().style('opacity', 1);\n                        }\n                    }, 10);\n                }\n            });\n        });\n        observer.observe(selection.node(), { attributes: true, childList: true, characterData: true });\n    };\n\n    c3_chart_internal_fn.bindResize = function () {\n        var $$ = this,\n            config = $$.config;\n\n        $$.resizeFunction = $$.generateResize(); // need to call .remove\n\n        $$.resizeFunction.add(function () {\n            config.onresize.call($$);\n        });\n        if (config.resize_auto) {\n            $$.resizeFunction.add(function () {\n                if ($$.resizeTimeout !== undefined) {\n                    window.clearTimeout($$.resizeTimeout);\n                }\n                $$.resizeTimeout = window.setTimeout(function () {\n                    delete $$.resizeTimeout;\n                    $$.updateAndRedraw({\n                        withUpdateXDomain: false,\n                        withUpdateOrgXDomain: false,\n                        withTransition: false,\n                        withTransitionForTransform: false,\n                        withLegend: true\n                    });\n                    if ($$.brush) {\n                        $$.brush.update();\n                    }\n                }, 100);\n            });\n        }\n        $$.resizeFunction.add(function () {\n            config.onresized.call($$);\n        });\n\n        $$.resizeIfElementDisplayed = function () {\n            // if element not displayed skip it\n            if ($$.api == null || !$$.api.element.offsetParent) {\n                return;\n            }\n\n            $$.resizeFunction();\n        };\n\n        if (window.attachEvent) {\n            window.attachEvent('onresize', $$.resizeIfElementDisplayed);\n        } else if (window.addEventListener) {\n            window.addEventListener('resize', $$.resizeIfElementDisplayed, false);\n        } else {\n            // fallback to this, if this is a very old browser\n            var wrapper = window.onresize;\n            if (!wrapper) {\n                // create a wrapper that will call all charts\n                wrapper = $$.generateResize();\n            } else if (!wrapper.add || !wrapper.remove) {\n                // there is already a handler registered, make sure we call it too\n                wrapper = $$.generateResize();\n                wrapper.add(window.onresize);\n            }\n            // add this graph to the wrapper, we will be removed if the user calls destroy\n            wrapper.add($$.resizeFunction);\n            window.onresize = function () {\n                // if element not displayed skip it\n                if (!$$.api.element.offsetParent) {\n                    return;\n                }\n\n                wrapper();\n            };\n        }\n    };\n\n    c3_chart_internal_fn.generateResize = function () {\n        var resizeFunctions = [];\n        function callResizeFunctions() {\n            resizeFunctions.forEach(function (f) {\n                f();\n            });\n        }\n        callResizeFunctions.add = function (f) {\n            resizeFunctions.push(f);\n        };\n        callResizeFunctions.remove = function (f) {\n            for (var i = 0; i < resizeFunctions.length; i++) {\n                if (resizeFunctions[i] === f) {\n                    resizeFunctions.splice(i, 1);\n                    break;\n                }\n            }\n        };\n        return callResizeFunctions;\n    };\n\n    c3_chart_internal_fn.endall = function (transition, callback) {\n        var n = 0;\n        transition.each(function () {\n            ++n;\n        }).on(\"end\", function () {\n            if (! --n) {\n                callback.apply(this, arguments);\n            }\n        });\n    };\n    c3_chart_internal_fn.generateWait = function () {\n        var transitionsToWait = [],\n            f = function f(callback) {\n            var timer = setInterval(function () {\n                var done = 0;\n                transitionsToWait.forEach(function (t) {\n                    if (t.empty()) {\n                        done += 1;\n                        return;\n                    }\n                    try {\n                        t.transition();\n                    } catch (e) {\n                        done += 1;\n                    }\n                });\n                if (done === transitionsToWait.length) {\n                    clearInterval(timer);\n                    if (callback) {\n                        callback();\n                    }\n                }\n            }, 50);\n        };\n        f.add = function (transition) {\n            transitionsToWait.push(transition);\n        };\n        return f;\n    };\n\n    c3_chart_internal_fn.parseDate = function (date) {\n        var $$ = this,\n            parsedDate;\n        if (date instanceof Date) {\n            parsedDate = date;\n        } else if (typeof date === 'string') {\n            parsedDate = $$.dataTimeParse(date);\n        } else if ((typeof date === 'undefined' ? 'undefined' : _typeof(date)) === 'object') {\n            parsedDate = new Date(+date);\n        } else if (typeof date === 'number' && !isNaN(date)) {\n            parsedDate = new Date(+date);\n        }\n        if (!parsedDate || isNaN(+parsedDate)) {\n            window.console.error(\"Failed to parse x '\" + date + \"' to Date object\");\n        }\n        return parsedDate;\n    };\n\n    c3_chart_internal_fn.isTabVisible = function () {\n        var hidden;\n        if (typeof document.hidden !== \"undefined\") {\n            // Opera 12.10 and Firefox 18 and later support\n            hidden = \"hidden\";\n        } else if (typeof document.mozHidden !== \"undefined\") {\n            hidden = \"mozHidden\";\n        } else if (typeof document.msHidden !== \"undefined\") {\n            hidden = \"msHidden\";\n        } else if (typeof document.webkitHidden !== \"undefined\") {\n            hidden = \"webkitHidden\";\n        }\n\n        return document[hidden] ? false : true;\n    };\n\n    c3_chart_internal_fn.isValue = isValue;\n    c3_chart_internal_fn.isFunction = isFunction;\n    c3_chart_internal_fn.isString = isString;\n    c3_chart_internal_fn.isUndefined = isUndefined;\n    c3_chart_internal_fn.isDefined = isDefined;\n    c3_chart_internal_fn.ceil10 = ceil10;\n    c3_chart_internal_fn.asHalfPixel = asHalfPixel;\n    c3_chart_internal_fn.diffDomain = diffDomain;\n    c3_chart_internal_fn.isEmpty = isEmpty;\n    c3_chart_internal_fn.notEmpty = notEmpty;\n    c3_chart_internal_fn.notEmpty = notEmpty;\n    c3_chart_internal_fn.getOption = getOption;\n    c3_chart_internal_fn.hasValue = hasValue;\n    c3_chart_internal_fn.sanitise = sanitise;\n    c3_chart_internal_fn.getPathBox = getPathBox;\n    c3_chart_internal_fn.CLASS = CLASS;\n\n    /* jshint ignore:start */\n\n    // PhantomJS doesn't have support for Function.prototype.bind, which has caused confusion. Use\n    // this polyfill to avoid the confusion.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind#Polyfill\n\n    if (!Function.prototype.bind) {\n        Function.prototype.bind = function (oThis) {\n            if (typeof this !== 'function') {\n                // closest thing possible to the ECMAScript 5\n                // internal IsCallable function\n                throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n            }\n\n            var aArgs = Array.prototype.slice.call(arguments, 1),\n                fToBind = this,\n                fNOP = function fNOP() {},\n                fBound = function fBound() {\n                return fToBind.apply(this instanceof fNOP ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));\n            };\n\n            fNOP.prototype = this.prototype;\n            fBound.prototype = new fNOP();\n\n            return fBound;\n        };\n    }\n\n    // SVGPathSeg API polyfill\n    // https://github.com/progers/pathseg\n    //\n    // This is a drop-in replacement for the SVGPathSeg and SVGPathSegList APIs that were removed from\n    // SVG2 (https://lists.w3.org/Archives/Public/www-svg/2015Jun/0044.html), including the latest spec\n    // changes which were implemented in Firefox 43 and Chrome 46.\n\n    (function () {\n\n        if (!(\"SVGPathSeg\" in window)) {\n            // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGPathSeg\n            window.SVGPathSeg = function (type, typeAsLetter, owningPathSegList) {\n                this.pathSegType = type;\n                this.pathSegTypeAsLetter = typeAsLetter;\n                this._owningPathSegList = owningPathSegList;\n            };\n\n            window.SVGPathSeg.prototype.classname = \"SVGPathSeg\";\n\n            window.SVGPathSeg.PATHSEG_UNKNOWN = 0;\n            window.SVGPathSeg.PATHSEG_CLOSEPATH = 1;\n            window.SVGPathSeg.PATHSEG_MOVETO_ABS = 2;\n            window.SVGPathSeg.PATHSEG_MOVETO_REL = 3;\n            window.SVGPathSeg.PATHSEG_LINETO_ABS = 4;\n            window.SVGPathSeg.PATHSEG_LINETO_REL = 5;\n            window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS = 6;\n            window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL = 7;\n            window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS = 8;\n            window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL = 9;\n            window.SVGPathSeg.PATHSEG_ARC_ABS = 10;\n            window.SVGPathSeg.PATHSEG_ARC_REL = 11;\n            window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS = 12;\n            window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL = 13;\n            window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS = 14;\n            window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL = 15;\n            window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS = 16;\n            window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL = 17;\n            window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS = 18;\n            window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL = 19;\n\n            // Notify owning PathSegList on any changes so they can be synchronized back to the path element.\n            window.SVGPathSeg.prototype._segmentChanged = function () {\n                if (this._owningPathSegList) this._owningPathSegList.segmentChanged(this);\n            };\n\n            window.SVGPathSegClosePath = function (owningPathSegList) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CLOSEPATH, \"z\", owningPathSegList);\n            };\n            window.SVGPathSegClosePath.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegClosePath.prototype.toString = function () {\n                return \"[object SVGPathSegClosePath]\";\n            };\n            window.SVGPathSegClosePath.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter;\n            };\n            window.SVGPathSegClosePath.prototype.clone = function () {\n                return new window.SVGPathSegClosePath(undefined);\n            };\n\n            window.SVGPathSegMovetoAbs = function (owningPathSegList, x, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_MOVETO_ABS, \"M\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n            };\n            window.SVGPathSegMovetoAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegMovetoAbs.prototype.toString = function () {\n                return \"[object SVGPathSegMovetoAbs]\";\n            };\n            window.SVGPathSegMovetoAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegMovetoAbs.prototype.clone = function () {\n                return new window.SVGPathSegMovetoAbs(undefined, this._x, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegMovetoAbs.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegMovetoAbs.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegMovetoRel = function (owningPathSegList, x, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_MOVETO_REL, \"m\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n            };\n            window.SVGPathSegMovetoRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegMovetoRel.prototype.toString = function () {\n                return \"[object SVGPathSegMovetoRel]\";\n            };\n            window.SVGPathSegMovetoRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegMovetoRel.prototype.clone = function () {\n                return new window.SVGPathSegMovetoRel(undefined, this._x, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegMovetoRel.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegMovetoRel.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegLinetoAbs = function (owningPathSegList, x, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_ABS, \"L\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n            };\n            window.SVGPathSegLinetoAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegLinetoAbs.prototype.toString = function () {\n                return \"[object SVGPathSegLinetoAbs]\";\n            };\n            window.SVGPathSegLinetoAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegLinetoAbs.prototype.clone = function () {\n                return new window.SVGPathSegLinetoAbs(undefined, this._x, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegLinetoAbs.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegLinetoAbs.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegLinetoRel = function (owningPathSegList, x, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_REL, \"l\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n            };\n            window.SVGPathSegLinetoRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegLinetoRel.prototype.toString = function () {\n                return \"[object SVGPathSegLinetoRel]\";\n            };\n            window.SVGPathSegLinetoRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegLinetoRel.prototype.clone = function () {\n                return new window.SVGPathSegLinetoRel(undefined, this._x, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegLinetoRel.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegLinetoRel.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegCurvetoCubicAbs = function (owningPathSegList, x, y, x1, y1, x2, y2) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS, \"C\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._x1 = x1;\n                this._y1 = y1;\n                this._x2 = x2;\n                this._y2 = y2;\n            };\n            window.SVGPathSegCurvetoCubicAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoCubicAbs.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoCubicAbs]\";\n            };\n            window.SVGPathSegCurvetoCubicAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegCurvetoCubicAbs.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoCubicAbs(undefined, this._x, this._y, this._x1, this._y1, this._x2, this._y2);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"x1\", { get: function get() {\n                    return this._x1;\n                }, set: function set(x1) {\n                    this._x1 = x1;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"y1\", { get: function get() {\n                    return this._y1;\n                }, set: function set(y1) {\n                    this._y1 = y1;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"x2\", { get: function get() {\n                    return this._x2;\n                }, set: function set(x2) {\n                    this._x2 = x2;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"y2\", { get: function get() {\n                    return this._y2;\n                }, set: function set(y2) {\n                    this._y2 = y2;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegCurvetoCubicRel = function (owningPathSegList, x, y, x1, y1, x2, y2) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL, \"c\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._x1 = x1;\n                this._y1 = y1;\n                this._x2 = x2;\n                this._y2 = y2;\n            };\n            window.SVGPathSegCurvetoCubicRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoCubicRel.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoCubicRel]\";\n            };\n            window.SVGPathSegCurvetoCubicRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegCurvetoCubicRel.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoCubicRel(undefined, this._x, this._y, this._x1, this._y1, this._x2, this._y2);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"x1\", { get: function get() {\n                    return this._x1;\n                }, set: function set(x1) {\n                    this._x1 = x1;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"y1\", { get: function get() {\n                    return this._y1;\n                }, set: function set(y1) {\n                    this._y1 = y1;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"x2\", { get: function get() {\n                    return this._x2;\n                }, set: function set(x2) {\n                    this._x2 = x2;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"y2\", { get: function get() {\n                    return this._y2;\n                }, set: function set(y2) {\n                    this._y2 = y2;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegCurvetoQuadraticAbs = function (owningPathSegList, x, y, x1, y1) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS, \"Q\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._x1 = x1;\n                this._y1 = y1;\n            };\n            window.SVGPathSegCurvetoQuadraticAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoQuadraticAbs.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoQuadraticAbs]\";\n            };\n            window.SVGPathSegCurvetoQuadraticAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegCurvetoQuadraticAbs.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoQuadraticAbs(undefined, this._x, this._y, this._x1, this._y1);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, \"x1\", { get: function get() {\n                    return this._x1;\n                }, set: function set(x1) {\n                    this._x1 = x1;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, \"y1\", { get: function get() {\n                    return this._y1;\n                }, set: function set(y1) {\n                    this._y1 = y1;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegCurvetoQuadraticRel = function (owningPathSegList, x, y, x1, y1) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL, \"q\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._x1 = x1;\n                this._y1 = y1;\n            };\n            window.SVGPathSegCurvetoQuadraticRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoQuadraticRel.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoQuadraticRel]\";\n            };\n            window.SVGPathSegCurvetoQuadraticRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegCurvetoQuadraticRel.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoQuadraticRel(undefined, this._x, this._y, this._x1, this._y1);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, \"x1\", { get: function get() {\n                    return this._x1;\n                }, set: function set(x1) {\n                    this._x1 = x1;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, \"y1\", { get: function get() {\n                    return this._y1;\n                }, set: function set(y1) {\n                    this._y1 = y1;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegArcAbs = function (owningPathSegList, x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_ARC_ABS, \"A\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._r1 = r1;\n                this._r2 = r2;\n                this._angle = angle;\n                this._largeArcFlag = largeArcFlag;\n                this._sweepFlag = sweepFlag;\n            };\n            window.SVGPathSegArcAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegArcAbs.prototype.toString = function () {\n                return \"[object SVGPathSegArcAbs]\";\n            };\n            window.SVGPathSegArcAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._r1 + \" \" + this._r2 + \" \" + this._angle + \" \" + (this._largeArcFlag ? \"1\" : \"0\") + \" \" + (this._sweepFlag ? \"1\" : \"0\") + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegArcAbs.prototype.clone = function () {\n                return new window.SVGPathSegArcAbs(undefined, this._x, this._y, this._r1, this._r2, this._angle, this._largeArcFlag, this._sweepFlag);\n            };\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"r1\", { get: function get() {\n                    return this._r1;\n                }, set: function set(r1) {\n                    this._r1 = r1;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"r2\", { get: function get() {\n                    return this._r2;\n                }, set: function set(r2) {\n                    this._r2 = r2;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"angle\", { get: function get() {\n                    return this._angle;\n                }, set: function set(angle) {\n                    this._angle = angle;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"largeArcFlag\", { get: function get() {\n                    return this._largeArcFlag;\n                }, set: function set(largeArcFlag) {\n                    this._largeArcFlag = largeArcFlag;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"sweepFlag\", { get: function get() {\n                    return this._sweepFlag;\n                }, set: function set(sweepFlag) {\n                    this._sweepFlag = sweepFlag;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegArcRel = function (owningPathSegList, x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_ARC_REL, \"a\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._r1 = r1;\n                this._r2 = r2;\n                this._angle = angle;\n                this._largeArcFlag = largeArcFlag;\n                this._sweepFlag = sweepFlag;\n            };\n            window.SVGPathSegArcRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegArcRel.prototype.toString = function () {\n                return \"[object SVGPathSegArcRel]\";\n            };\n            window.SVGPathSegArcRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._r1 + \" \" + this._r2 + \" \" + this._angle + \" \" + (this._largeArcFlag ? \"1\" : \"0\") + \" \" + (this._sweepFlag ? \"1\" : \"0\") + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegArcRel.prototype.clone = function () {\n                return new window.SVGPathSegArcRel(undefined, this._x, this._y, this._r1, this._r2, this._angle, this._largeArcFlag, this._sweepFlag);\n            };\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"r1\", { get: function get() {\n                    return this._r1;\n                }, set: function set(r1) {\n                    this._r1 = r1;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"r2\", { get: function get() {\n                    return this._r2;\n                }, set: function set(r2) {\n                    this._r2 = r2;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"angle\", { get: function get() {\n                    return this._angle;\n                }, set: function set(angle) {\n                    this._angle = angle;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"largeArcFlag\", { get: function get() {\n                    return this._largeArcFlag;\n                }, set: function set(largeArcFlag) {\n                    this._largeArcFlag = largeArcFlag;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"sweepFlag\", { get: function get() {\n                    return this._sweepFlag;\n                }, set: function set(sweepFlag) {\n                    this._sweepFlag = sweepFlag;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegLinetoHorizontalAbs = function (owningPathSegList, x) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS, \"H\", owningPathSegList);\n                this._x = x;\n            };\n            window.SVGPathSegLinetoHorizontalAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegLinetoHorizontalAbs.prototype.toString = function () {\n                return \"[object SVGPathSegLinetoHorizontalAbs]\";\n            };\n            window.SVGPathSegLinetoHorizontalAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x;\n            };\n            window.SVGPathSegLinetoHorizontalAbs.prototype.clone = function () {\n                return new window.SVGPathSegLinetoHorizontalAbs(undefined, this._x);\n            };\n            Object.defineProperty(window.SVGPathSegLinetoHorizontalAbs.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegLinetoHorizontalRel = function (owningPathSegList, x) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL, \"h\", owningPathSegList);\n                this._x = x;\n            };\n            window.SVGPathSegLinetoHorizontalRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegLinetoHorizontalRel.prototype.toString = function () {\n                return \"[object SVGPathSegLinetoHorizontalRel]\";\n            };\n            window.SVGPathSegLinetoHorizontalRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x;\n            };\n            window.SVGPathSegLinetoHorizontalRel.prototype.clone = function () {\n                return new window.SVGPathSegLinetoHorizontalRel(undefined, this._x);\n            };\n            Object.defineProperty(window.SVGPathSegLinetoHorizontalRel.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegLinetoVerticalAbs = function (owningPathSegList, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS, \"V\", owningPathSegList);\n                this._y = y;\n            };\n            window.SVGPathSegLinetoVerticalAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegLinetoVerticalAbs.prototype.toString = function () {\n                return \"[object SVGPathSegLinetoVerticalAbs]\";\n            };\n            window.SVGPathSegLinetoVerticalAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._y;\n            };\n            window.SVGPathSegLinetoVerticalAbs.prototype.clone = function () {\n                return new window.SVGPathSegLinetoVerticalAbs(undefined, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegLinetoVerticalAbs.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegLinetoVerticalRel = function (owningPathSegList, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL, \"v\", owningPathSegList);\n                this._y = y;\n            };\n            window.SVGPathSegLinetoVerticalRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegLinetoVerticalRel.prototype.toString = function () {\n                return \"[object SVGPathSegLinetoVerticalRel]\";\n            };\n            window.SVGPathSegLinetoVerticalRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._y;\n            };\n            window.SVGPathSegLinetoVerticalRel.prototype.clone = function () {\n                return new window.SVGPathSegLinetoVerticalRel(undefined, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegLinetoVerticalRel.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegCurvetoCubicSmoothAbs = function (owningPathSegList, x, y, x2, y2) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS, \"S\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._x2 = x2;\n                this._y2 = y2;\n            };\n            window.SVGPathSegCurvetoCubicSmoothAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoCubicSmoothAbs.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoCubicSmoothAbs]\";\n            };\n            window.SVGPathSegCurvetoCubicSmoothAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegCurvetoCubicSmoothAbs.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoCubicSmoothAbs(undefined, this._x, this._y, this._x2, this._y2);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, \"x2\", { get: function get() {\n                    return this._x2;\n                }, set: function set(x2) {\n                    this._x2 = x2;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, \"y2\", { get: function get() {\n                    return this._y2;\n                }, set: function set(y2) {\n                    this._y2 = y2;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegCurvetoCubicSmoothRel = function (owningPathSegList, x, y, x2, y2) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL, \"s\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._x2 = x2;\n                this._y2 = y2;\n            };\n            window.SVGPathSegCurvetoCubicSmoothRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoCubicSmoothRel.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoCubicSmoothRel]\";\n            };\n            window.SVGPathSegCurvetoCubicSmoothRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegCurvetoCubicSmoothRel.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoCubicSmoothRel(undefined, this._x, this._y, this._x2, this._y2);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, \"x2\", { get: function get() {\n                    return this._x2;\n                }, set: function set(x2) {\n                    this._x2 = x2;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, \"y2\", { get: function get() {\n                    return this._y2;\n                }, set: function set(y2) {\n                    this._y2 = y2;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegCurvetoQuadraticSmoothAbs = function (owningPathSegList, x, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS, \"T\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n            };\n            window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoQuadraticSmoothAbs]\";\n            };\n            window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoQuadraticSmoothAbs(undefined, this._x, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegCurvetoQuadraticSmoothRel = function (owningPathSegList, x, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL, \"t\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n            };\n            window.SVGPathSegCurvetoQuadraticSmoothRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoQuadraticSmoothRel.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoQuadraticSmoothRel]\";\n            };\n            window.SVGPathSegCurvetoQuadraticSmoothRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegCurvetoQuadraticSmoothRel.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoQuadraticSmoothRel(undefined, this._x, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothRel.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothRel.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n\n            // Add createSVGPathSeg* functions to window.SVGPathElement.\n            // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-Interfacewindow.SVGPathElement.\n            window.SVGPathElement.prototype.createSVGPathSegClosePath = function () {\n                return new window.SVGPathSegClosePath(undefined);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegMovetoAbs = function (x, y) {\n                return new window.SVGPathSegMovetoAbs(undefined, x, y);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegMovetoRel = function (x, y) {\n                return new window.SVGPathSegMovetoRel(undefined, x, y);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegLinetoAbs = function (x, y) {\n                return new window.SVGPathSegLinetoAbs(undefined, x, y);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegLinetoRel = function (x, y) {\n                return new window.SVGPathSegLinetoRel(undefined, x, y);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicAbs = function (x, y, x1, y1, x2, y2) {\n                return new window.SVGPathSegCurvetoCubicAbs(undefined, x, y, x1, y1, x2, y2);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicRel = function (x, y, x1, y1, x2, y2) {\n                return new window.SVGPathSegCurvetoCubicRel(undefined, x, y, x1, y1, x2, y2);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticAbs = function (x, y, x1, y1) {\n                return new window.SVGPathSegCurvetoQuadraticAbs(undefined, x, y, x1, y1);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticRel = function (x, y, x1, y1) {\n                return new window.SVGPathSegCurvetoQuadraticRel(undefined, x, y, x1, y1);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegArcAbs = function (x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n                return new window.SVGPathSegArcAbs(undefined, x, y, r1, r2, angle, largeArcFlag, sweepFlag);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegArcRel = function (x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n                return new window.SVGPathSegArcRel(undefined, x, y, r1, r2, angle, largeArcFlag, sweepFlag);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegLinetoHorizontalAbs = function (x) {\n                return new window.SVGPathSegLinetoHorizontalAbs(undefined, x);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegLinetoHorizontalRel = function (x) {\n                return new window.SVGPathSegLinetoHorizontalRel(undefined, x);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegLinetoVerticalAbs = function (y) {\n                return new window.SVGPathSegLinetoVerticalAbs(undefined, y);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegLinetoVerticalRel = function (y) {\n                return new window.SVGPathSegLinetoVerticalRel(undefined, y);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothAbs = function (x, y, x2, y2) {\n                return new window.SVGPathSegCurvetoCubicSmoothAbs(undefined, x, y, x2, y2);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothRel = function (x, y, x2, y2) {\n                return new window.SVGPathSegCurvetoCubicSmoothRel(undefined, x, y, x2, y2);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothAbs = function (x, y) {\n                return new window.SVGPathSegCurvetoQuadraticSmoothAbs(undefined, x, y);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothRel = function (x, y) {\n                return new window.SVGPathSegCurvetoQuadraticSmoothRel(undefined, x, y);\n            };\n\n            if (!(\"getPathSegAtLength\" in window.SVGPathElement.prototype)) {\n                // Add getPathSegAtLength to SVGPathElement.\n                // Spec: https://www.w3.org/TR/SVG11/single-page.html#paths-__svg__SVGPathElement__getPathSegAtLength\n                // This polyfill requires SVGPathElement.getTotalLength to implement the distance-along-a-path algorithm.\n                window.SVGPathElement.prototype.getPathSegAtLength = function (distance) {\n                    if (distance === undefined || !isFinite(distance)) throw \"Invalid arguments.\";\n\n                    var measurementElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n                    measurementElement.setAttribute(\"d\", this.getAttribute(\"d\"));\n                    var lastPathSegment = measurementElement.pathSegList.numberOfItems - 1;\n\n                    // If the path is empty, return 0.\n                    if (lastPathSegment <= 0) return 0;\n\n                    do {\n                        measurementElement.pathSegList.removeItem(lastPathSegment);\n                        if (distance > measurementElement.getTotalLength()) break;\n                        lastPathSegment--;\n                    } while (lastPathSegment > 0);\n                    return lastPathSegment;\n                };\n            }\n        }\n\n        if (!(\"SVGPathSegList\" in window)) {\n            // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGPathSegList\n            window.SVGPathSegList = function (pathElement) {\n                this._pathElement = pathElement;\n                this._list = this._parsePath(this._pathElement.getAttribute(\"d\"));\n\n                // Use a MutationObserver to catch changes to the path's \"d\" attribute.\n                this._mutationObserverConfig = { \"attributes\": true, \"attributeFilter\": [\"d\"] };\n                this._pathElementMutationObserver = new MutationObserver(this._updateListFromPathMutations.bind(this));\n                this._pathElementMutationObserver.observe(this._pathElement, this._mutationObserverConfig);\n            };\n\n            window.SVGPathSegList.prototype.classname = \"SVGPathSegList\";\n\n            Object.defineProperty(window.SVGPathSegList.prototype, \"numberOfItems\", {\n                get: function get() {\n                    this._checkPathSynchronizedToList();\n                    return this._list.length;\n                },\n                enumerable: true\n            });\n\n            // Add the pathSegList accessors to window.SVGPathElement.\n            // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGAnimatedPathData\n            Object.defineProperty(window.SVGPathElement.prototype, \"pathSegList\", {\n                get: function get() {\n                    if (!this._pathSegList) this._pathSegList = new window.SVGPathSegList(this);\n                    return this._pathSegList;\n                },\n                enumerable: true\n            });\n            // FIXME: The following are not implemented and simply return window.SVGPathElement.pathSegList.\n            Object.defineProperty(window.SVGPathElement.prototype, \"normalizedPathSegList\", { get: function get() {\n                    return this.pathSegList;\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathElement.prototype, \"animatedPathSegList\", { get: function get() {\n                    return this.pathSegList;\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathElement.prototype, \"animatedNormalizedPathSegList\", { get: function get() {\n                    return this.pathSegList;\n                }, enumerable: true });\n\n            // Process any pending mutations to the path element and update the list as needed.\n            // This should be the first call of all public functions and is needed because\n            // MutationObservers are not synchronous so we can have pending asynchronous mutations.\n            window.SVGPathSegList.prototype._checkPathSynchronizedToList = function () {\n                this._updateListFromPathMutations(this._pathElementMutationObserver.takeRecords());\n            };\n\n            window.SVGPathSegList.prototype._updateListFromPathMutations = function (mutationRecords) {\n                if (!this._pathElement) return;\n                var hasPathMutations = false;\n                mutationRecords.forEach(function (record) {\n                    if (record.attributeName == \"d\") hasPathMutations = true;\n                });\n                if (hasPathMutations) this._list = this._parsePath(this._pathElement.getAttribute(\"d\"));\n            };\n\n            // Serialize the list and update the path's 'd' attribute.\n            window.SVGPathSegList.prototype._writeListToPath = function () {\n                this._pathElementMutationObserver.disconnect();\n                this._pathElement.setAttribute(\"d\", window.SVGPathSegList._pathSegArrayAsString(this._list));\n                this._pathElementMutationObserver.observe(this._pathElement, this._mutationObserverConfig);\n            };\n\n            // When a path segment changes the list needs to be synchronized back to the path element.\n            window.SVGPathSegList.prototype.segmentChanged = function (pathSeg) {\n                this._writeListToPath();\n            };\n\n            window.SVGPathSegList.prototype.clear = function () {\n                this._checkPathSynchronizedToList();\n\n                this._list.forEach(function (pathSeg) {\n                    pathSeg._owningPathSegList = null;\n                });\n                this._list = [];\n                this._writeListToPath();\n            };\n\n            window.SVGPathSegList.prototype.initialize = function (newItem) {\n                this._checkPathSynchronizedToList();\n\n                this._list = [newItem];\n                newItem._owningPathSegList = this;\n                this._writeListToPath();\n                return newItem;\n            };\n\n            window.SVGPathSegList.prototype._checkValidIndex = function (index) {\n                if (isNaN(index) || index < 0 || index >= this.numberOfItems) throw \"INDEX_SIZE_ERR\";\n            };\n\n            window.SVGPathSegList.prototype.getItem = function (index) {\n                this._checkPathSynchronizedToList();\n\n                this._checkValidIndex(index);\n                return this._list[index];\n            };\n\n            window.SVGPathSegList.prototype.insertItemBefore = function (newItem, index) {\n                this._checkPathSynchronizedToList();\n\n                // Spec: If the index is greater than or equal to numberOfItems, then the new item is appended to the end of the list.\n                if (index > this.numberOfItems) index = this.numberOfItems;\n                if (newItem._owningPathSegList) {\n                    // SVG2 spec says to make a copy.\n                    newItem = newItem.clone();\n                }\n                this._list.splice(index, 0, newItem);\n                newItem._owningPathSegList = this;\n                this._writeListToPath();\n                return newItem;\n            };\n\n            window.SVGPathSegList.prototype.replaceItem = function (newItem, index) {\n                this._checkPathSynchronizedToList();\n\n                if (newItem._owningPathSegList) {\n                    // SVG2 spec says to make a copy.\n                    newItem = newItem.clone();\n                }\n                this._checkValidIndex(index);\n                this._list[index] = newItem;\n                newItem._owningPathSegList = this;\n                this._writeListToPath();\n                return newItem;\n            };\n\n            window.SVGPathSegList.prototype.removeItem = function (index) {\n                this._checkPathSynchronizedToList();\n\n                this._checkValidIndex(index);\n                var item = this._list[index];\n                this._list.splice(index, 1);\n                this._writeListToPath();\n                return item;\n            };\n\n            window.SVGPathSegList.prototype.appendItem = function (newItem) {\n                this._checkPathSynchronizedToList();\n\n                if (newItem._owningPathSegList) {\n                    // SVG2 spec says to make a copy.\n                    newItem = newItem.clone();\n                }\n                this._list.push(newItem);\n                newItem._owningPathSegList = this;\n                // TODO: Optimize this to just append to the existing attribute.\n                this._writeListToPath();\n                return newItem;\n            };\n\n            window.SVGPathSegList._pathSegArrayAsString = function (pathSegArray) {\n                var string = \"\";\n                var first = true;\n                pathSegArray.forEach(function (pathSeg) {\n                    if (first) {\n                        first = false;\n                        string += pathSeg._asPathString();\n                    } else {\n                        string += \" \" + pathSeg._asPathString();\n                    }\n                });\n                return string;\n            };\n\n            // This closely follows SVGPathParser::parsePath from Source/core/svg/SVGPathParser.cpp.\n            window.SVGPathSegList.prototype._parsePath = function (string) {\n                if (!string || string.length == 0) return [];\n\n                var owningPathSegList = this;\n\n                var Builder = function Builder() {\n                    this.pathSegList = [];\n                };\n\n                Builder.prototype.appendSegment = function (pathSeg) {\n                    this.pathSegList.push(pathSeg);\n                };\n\n                var Source = function Source(string) {\n                    this._string = string;\n                    this._currentIndex = 0;\n                    this._endIndex = this._string.length;\n                    this._previousCommand = window.SVGPathSeg.PATHSEG_UNKNOWN;\n\n                    this._skipOptionalSpaces();\n                };\n\n                Source.prototype._isCurrentSpace = function () {\n                    var character = this._string[this._currentIndex];\n                    return character <= \" \" && (character == \" \" || character == \"\\n\" || character == \"\\t\" || character == \"\\r\" || character == \"\\f\");\n                };\n\n                Source.prototype._skipOptionalSpaces = function () {\n                    while (this._currentIndex < this._endIndex && this._isCurrentSpace()) {\n                        this._currentIndex++;\n                    }return this._currentIndex < this._endIndex;\n                };\n\n                Source.prototype._skipOptionalSpacesOrDelimiter = function () {\n                    if (this._currentIndex < this._endIndex && !this._isCurrentSpace() && this._string.charAt(this._currentIndex) != \",\") return false;\n                    if (this._skipOptionalSpaces()) {\n                        if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \",\") {\n                            this._currentIndex++;\n                            this._skipOptionalSpaces();\n                        }\n                    }\n                    return this._currentIndex < this._endIndex;\n                };\n\n                Source.prototype.hasMoreData = function () {\n                    return this._currentIndex < this._endIndex;\n                };\n\n                Source.prototype.peekSegmentType = function () {\n                    var lookahead = this._string[this._currentIndex];\n                    return this._pathSegTypeFromChar(lookahead);\n                };\n\n                Source.prototype._pathSegTypeFromChar = function (lookahead) {\n                    switch (lookahead) {\n                        case \"Z\":\n                        case \"z\":\n                            return window.SVGPathSeg.PATHSEG_CLOSEPATH;\n                        case \"M\":\n                            return window.SVGPathSeg.PATHSEG_MOVETO_ABS;\n                        case \"m\":\n                            return window.SVGPathSeg.PATHSEG_MOVETO_REL;\n                        case \"L\":\n                            return window.SVGPathSeg.PATHSEG_LINETO_ABS;\n                        case \"l\":\n                            return window.SVGPathSeg.PATHSEG_LINETO_REL;\n                        case \"C\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS;\n                        case \"c\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL;\n                        case \"Q\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS;\n                        case \"q\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL;\n                        case \"A\":\n                            return window.SVGPathSeg.PATHSEG_ARC_ABS;\n                        case \"a\":\n                            return window.SVGPathSeg.PATHSEG_ARC_REL;\n                        case \"H\":\n                            return window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS;\n                        case \"h\":\n                            return window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL;\n                        case \"V\":\n                            return window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS;\n                        case \"v\":\n                            return window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL;\n                        case \"S\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS;\n                        case \"s\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL;\n                        case \"T\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS;\n                        case \"t\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL;\n                        default:\n                            return window.SVGPathSeg.PATHSEG_UNKNOWN;\n                    }\n                };\n\n                Source.prototype._nextCommandHelper = function (lookahead, previousCommand) {\n                    // Check for remaining coordinates in the current command.\n                    if ((lookahead == \"+\" || lookahead == \"-\" || lookahead == \".\" || lookahead >= \"0\" && lookahead <= \"9\") && previousCommand != window.SVGPathSeg.PATHSEG_CLOSEPATH) {\n                        if (previousCommand == window.SVGPathSeg.PATHSEG_MOVETO_ABS) return window.SVGPathSeg.PATHSEG_LINETO_ABS;\n                        if (previousCommand == window.SVGPathSeg.PATHSEG_MOVETO_REL) return window.SVGPathSeg.PATHSEG_LINETO_REL;\n                        return previousCommand;\n                    }\n                    return window.SVGPathSeg.PATHSEG_UNKNOWN;\n                };\n\n                Source.prototype.initialCommandIsMoveTo = function () {\n                    // If the path is empty it is still valid, so return true.\n                    if (!this.hasMoreData()) return true;\n                    var command = this.peekSegmentType();\n                    // Path must start with moveTo.\n                    return command == window.SVGPathSeg.PATHSEG_MOVETO_ABS || command == window.SVGPathSeg.PATHSEG_MOVETO_REL;\n                };\n\n                // Parse a number from an SVG path. This very closely follows genericParseNumber(...) from Source/core/svg/SVGParserUtilities.cpp.\n                // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-PathDataBNF\n                Source.prototype._parseNumber = function () {\n                    var exponent = 0;\n                    var integer = 0;\n                    var frac = 1;\n                    var decimal = 0;\n                    var sign = 1;\n                    var expsign = 1;\n\n                    var startIndex = this._currentIndex;\n\n                    this._skipOptionalSpaces();\n\n                    // Read the sign.\n                    if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \"+\") this._currentIndex++;else if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \"-\") {\n                        this._currentIndex++;\n                        sign = -1;\n                    }\n\n                    if (this._currentIndex == this._endIndex || (this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\") && this._string.charAt(this._currentIndex) != \".\")\n                        // The first character of a number must be one of [0-9+-.].\n                        return undefined;\n\n                    // Read the integer part, build right-to-left.\n                    var startIntPartIndex = this._currentIndex;\n                    while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\") {\n                        this._currentIndex++;\n                    } // Advance to first non-digit.\n\n                    if (this._currentIndex != startIntPartIndex) {\n                        var scanIntPartIndex = this._currentIndex - 1;\n                        var multiplier = 1;\n                        while (scanIntPartIndex >= startIntPartIndex) {\n                            integer += multiplier * (this._string.charAt(scanIntPartIndex--) - \"0\");\n                            multiplier *= 10;\n                        }\n                    }\n\n                    // Read the decimals.\n                    if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \".\") {\n                        this._currentIndex++;\n\n                        // There must be a least one digit following the .\n                        if (this._currentIndex >= this._endIndex || this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\") return undefined;\n                        while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\") {\n                            frac *= 10;\n                            decimal += (this._string.charAt(this._currentIndex) - \"0\") / frac;\n                            this._currentIndex += 1;\n                        }\n                    }\n\n                    // Read the exponent part.\n                    if (this._currentIndex != startIndex && this._currentIndex + 1 < this._endIndex && (this._string.charAt(this._currentIndex) == \"e\" || this._string.charAt(this._currentIndex) == \"E\") && this._string.charAt(this._currentIndex + 1) != \"x\" && this._string.charAt(this._currentIndex + 1) != \"m\") {\n                        this._currentIndex++;\n\n                        // Read the sign of the exponent.\n                        if (this._string.charAt(this._currentIndex) == \"+\") {\n                            this._currentIndex++;\n                        } else if (this._string.charAt(this._currentIndex) == \"-\") {\n                            this._currentIndex++;\n                            expsign = -1;\n                        }\n\n                        // There must be an exponent.\n                        if (this._currentIndex >= this._endIndex || this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\") return undefined;\n\n                        while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\") {\n                            exponent *= 10;\n                            exponent += this._string.charAt(this._currentIndex) - \"0\";\n                            this._currentIndex++;\n                        }\n                    }\n\n                    var number = integer + decimal;\n                    number *= sign;\n\n                    if (exponent) number *= Math.pow(10, expsign * exponent);\n\n                    if (startIndex == this._currentIndex) return undefined;\n\n                    this._skipOptionalSpacesOrDelimiter();\n\n                    return number;\n                };\n\n                Source.prototype._parseArcFlag = function () {\n                    if (this._currentIndex >= this._endIndex) return undefined;\n                    var flag = false;\n                    var flagChar = this._string.charAt(this._currentIndex++);\n                    if (flagChar == \"0\") flag = false;else if (flagChar == \"1\") flag = true;else return undefined;\n\n                    this._skipOptionalSpacesOrDelimiter();\n                    return flag;\n                };\n\n                Source.prototype.parseSegment = function () {\n                    var lookahead = this._string[this._currentIndex];\n                    var command = this._pathSegTypeFromChar(lookahead);\n                    if (command == window.SVGPathSeg.PATHSEG_UNKNOWN) {\n                        // Possibly an implicit command. Not allowed if this is the first command.\n                        if (this._previousCommand == window.SVGPathSeg.PATHSEG_UNKNOWN) return null;\n                        command = this._nextCommandHelper(lookahead, this._previousCommand);\n                        if (command == window.SVGPathSeg.PATHSEG_UNKNOWN) return null;\n                    } else {\n                        this._currentIndex++;\n                    }\n\n                    this._previousCommand = command;\n\n                    switch (command) {\n                        case window.SVGPathSeg.PATHSEG_MOVETO_REL:\n                            return new window.SVGPathSegMovetoRel(owningPathSegList, this._parseNumber(), this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_MOVETO_ABS:\n                            return new window.SVGPathSegMovetoAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_LINETO_REL:\n                            return new window.SVGPathSegLinetoRel(owningPathSegList, this._parseNumber(), this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_LINETO_ABS:\n                            return new window.SVGPathSegLinetoAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL:\n                            return new window.SVGPathSegLinetoHorizontalRel(owningPathSegList, this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS:\n                            return new window.SVGPathSegLinetoHorizontalAbs(owningPathSegList, this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL:\n                            return new window.SVGPathSegLinetoVerticalRel(owningPathSegList, this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS:\n                            return new window.SVGPathSegLinetoVerticalAbs(owningPathSegList, this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_CLOSEPATH:\n                            this._skipOptionalSpaces();\n                            return new window.SVGPathSegClosePath(owningPathSegList);\n                        case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL:\n                            var points = { x1: this._parseNumber(), y1: this._parseNumber(), x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\n                            return new window.SVGPathSegCurvetoCubicRel(owningPathSegList, points.x, points.y, points.x1, points.y1, points.x2, points.y2);\n                        case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS:\n                            var points = { x1: this._parseNumber(), y1: this._parseNumber(), x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\n                            return new window.SVGPathSegCurvetoCubicAbs(owningPathSegList, points.x, points.y, points.x1, points.y1, points.x2, points.y2);\n                        case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL:\n                            var points = { x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\n                            return new window.SVGPathSegCurvetoCubicSmoothRel(owningPathSegList, points.x, points.y, points.x2, points.y2);\n                        case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS:\n                            var points = { x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\n                            return new window.SVGPathSegCurvetoCubicSmoothAbs(owningPathSegList, points.x, points.y, points.x2, points.y2);\n                        case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL:\n                            var points = { x1: this._parseNumber(), y1: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\n                            return new window.SVGPathSegCurvetoQuadraticRel(owningPathSegList, points.x, points.y, points.x1, points.y1);\n                        case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS:\n                            var points = { x1: this._parseNumber(), y1: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\n                            return new window.SVGPathSegCurvetoQuadraticAbs(owningPathSegList, points.x, points.y, points.x1, points.y1);\n                        case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL:\n                            return new window.SVGPathSegCurvetoQuadraticSmoothRel(owningPathSegList, this._parseNumber(), this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS:\n                            return new window.SVGPathSegCurvetoQuadraticSmoothAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_ARC_REL:\n                            var points = { x1: this._parseNumber(), y1: this._parseNumber(), arcAngle: this._parseNumber(), arcLarge: this._parseArcFlag(), arcSweep: this._parseArcFlag(), x: this._parseNumber(), y: this._parseNumber() };\n                            return new window.SVGPathSegArcRel(owningPathSegList, points.x, points.y, points.x1, points.y1, points.arcAngle, points.arcLarge, points.arcSweep);\n                        case window.SVGPathSeg.PATHSEG_ARC_ABS:\n                            var points = { x1: this._parseNumber(), y1: this._parseNumber(), arcAngle: this._parseNumber(), arcLarge: this._parseArcFlag(), arcSweep: this._parseArcFlag(), x: this._parseNumber(), y: this._parseNumber() };\n                            return new window.SVGPathSegArcAbs(owningPathSegList, points.x, points.y, points.x1, points.y1, points.arcAngle, points.arcLarge, points.arcSweep);\n                        default:\n                            throw \"Unknown path seg type.\";\n                    }\n                };\n\n                var builder = new Builder();\n                var source = new Source(string);\n\n                if (!source.initialCommandIsMoveTo()) return [];\n                while (source.hasMoreData()) {\n                    var pathSeg = source.parseSegment();\n                    if (!pathSeg) return [];\n                    builder.appendSegment(pathSeg);\n                }\n\n                return builder.pathSegList;\n            };\n        }\n    })();\n\n    // String.padEnd polyfill for IE11\n    //\n    // https://github.com/uxitten/polyfill/blob/master/string.polyfill.js\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padEnd\n    if (!String.prototype.padEnd) {\n        String.prototype.padEnd = function padEnd(targetLength, padString) {\n            targetLength = targetLength >> 0; //floor if number or convert non-number to 0;\n            padString = String(typeof padString !== 'undefined' ? padString : ' ');\n            if (this.length > targetLength) {\n                return String(this);\n            } else {\n                targetLength = targetLength - this.length;\n                if (targetLength > padString.length) {\n                    padString += padString.repeat(targetLength / padString.length); //append to original to ensure we are longer than needed\n                }\n                return String(this) + padString.slice(0, targetLength);\n            }\n        };\n    }\n\n    /* jshint ignore:end */\n\n    c3_chart_fn.axis = function () {};\n    c3_chart_fn.axis.labels = function (labels) {\n        var $$ = this.internal;\n        if (arguments.length) {\n            Object.keys(labels).forEach(function (axisId) {\n                $$.axis.setLabelText(axisId, labels[axisId]);\n            });\n            $$.axis.updateLabels();\n        }\n        // TODO: return some values?\n    };\n    c3_chart_fn.axis.max = function (max) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (arguments.length) {\n            if ((typeof max === 'undefined' ? 'undefined' : _typeof(max)) === 'object') {\n                if (isValue(max.x)) {\n                    config.axis_x_max = max.x;\n                }\n                if (isValue(max.y)) {\n                    config.axis_y_max = max.y;\n                }\n                if (isValue(max.y2)) {\n                    config.axis_y2_max = max.y2;\n                }\n            } else {\n                config.axis_y_max = config.axis_y2_max = max;\n            }\n            $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true });\n        } else {\n            return {\n                x: config.axis_x_max,\n                y: config.axis_y_max,\n                y2: config.axis_y2_max\n            };\n        }\n    };\n    c3_chart_fn.axis.min = function (min) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (arguments.length) {\n            if ((typeof min === 'undefined' ? 'undefined' : _typeof(min)) === 'object') {\n                if (isValue(min.x)) {\n                    config.axis_x_min = min.x;\n                }\n                if (isValue(min.y)) {\n                    config.axis_y_min = min.y;\n                }\n                if (isValue(min.y2)) {\n                    config.axis_y2_min = min.y2;\n                }\n            } else {\n                config.axis_y_min = config.axis_y2_min = min;\n            }\n            $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true });\n        } else {\n            return {\n                x: config.axis_x_min,\n                y: config.axis_y_min,\n                y2: config.axis_y2_min\n            };\n        }\n    };\n    c3_chart_fn.axis.range = function (range) {\n        if (arguments.length) {\n            if (isDefined(range.max)) {\n                this.axis.max(range.max);\n            }\n            if (isDefined(range.min)) {\n                this.axis.min(range.min);\n            }\n        } else {\n            return {\n                max: this.axis.max(),\n                min: this.axis.min()\n            };\n        }\n    };\n\n    c3_chart_fn.category = function (i, category) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (arguments.length > 1) {\n            config.axis_x_categories[i] = category;\n            $$.redraw();\n        }\n        return config.axis_x_categories[i];\n    };\n    c3_chart_fn.categories = function (categories) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (!arguments.length) {\n            return config.axis_x_categories;\n        }\n        config.axis_x_categories = categories;\n        $$.redraw();\n        return config.axis_x_categories;\n    };\n\n    c3_chart_fn.resize = function (size) {\n        var $$ = this.internal,\n            config = $$.config;\n        config.size_width = size ? size.width : null;\n        config.size_height = size ? size.height : null;\n        this.flush();\n    };\n\n    c3_chart_fn.flush = function () {\n        var $$ = this.internal;\n        $$.updateAndRedraw({ withLegend: true, withTransition: false, withTransitionForTransform: false });\n    };\n\n    c3_chart_fn.destroy = function () {\n        var $$ = this.internal;\n\n        window.clearInterval($$.intervalForObserveInserted);\n\n        if ($$.resizeTimeout !== undefined) {\n            window.clearTimeout($$.resizeTimeout);\n        }\n\n        if (window.detachEvent) {\n            window.detachEvent('onresize', $$.resizeIfElementDisplayed);\n        } else if (window.removeEventListener) {\n            window.removeEventListener('resize', $$.resizeIfElementDisplayed);\n        } else {\n            var wrapper = window.onresize;\n            // check if no one else removed our wrapper and remove our resizeFunction from it\n            if (wrapper && wrapper.add && wrapper.remove) {\n                wrapper.remove($$.resizeFunction);\n            }\n        }\n\n        // remove the inner resize functions\n        $$.resizeFunction.remove();\n\n        $$.selectChart.classed('c3', false).html(\"\");\n\n        // MEMO: this is needed because the reference of some elements will not be released, then memory leak will happen.\n        Object.keys($$).forEach(function (key) {\n            $$[key] = null;\n        });\n\n        return null;\n    };\n\n    // TODO: fix\n    c3_chart_fn.color = function (id) {\n        var $$ = this.internal;\n        return $$.color(id); // more patterns\n    };\n\n    c3_chart_fn.data = function (targetIds) {\n        var targets = this.internal.data.targets;\n        return typeof targetIds === 'undefined' ? targets : targets.filter(function (t) {\n            return [].concat(targetIds).indexOf(t.id) >= 0;\n        });\n    };\n    c3_chart_fn.data.shown = function (targetIds) {\n        return this.internal.filterTargetsToShow(this.data(targetIds));\n    };\n    c3_chart_fn.data.values = function (targetId) {\n        var targets,\n            values = null;\n        if (targetId) {\n            targets = this.data(targetId);\n            values = targets[0] ? targets[0].values.map(function (d) {\n                return d.value;\n            }) : null;\n        }\n        return values;\n    };\n    c3_chart_fn.data.names = function (names) {\n        this.internal.clearLegendItemTextBoxCache();\n        return this.internal.updateDataAttributes('names', names);\n    };\n    c3_chart_fn.data.colors = function (colors) {\n        return this.internal.updateDataAttributes('colors', colors);\n    };\n    c3_chart_fn.data.axes = function (axes) {\n        return this.internal.updateDataAttributes('axes', axes);\n    };\n\n    c3_chart_fn.flow = function (args) {\n        var $$ = this.internal,\n            targets,\n            data,\n            notfoundIds = [],\n            orgDataCount = $$.getMaxDataCount(),\n            dataCount,\n            domain,\n            baseTarget,\n            baseValue,\n            length = 0,\n            tail = 0,\n            diff,\n            to;\n\n        if (args.json) {\n            data = $$.convertJsonToData(args.json, args.keys);\n        } else if (args.rows) {\n            data = $$.convertRowsToData(args.rows);\n        } else if (args.columns) {\n            data = $$.convertColumnsToData(args.columns);\n        } else {\n            return;\n        }\n        targets = $$.convertDataToTargets(data, true);\n\n        // Update/Add data\n        $$.data.targets.forEach(function (t) {\n            var found = false,\n                i,\n                j;\n            for (i = 0; i < targets.length; i++) {\n                if (t.id === targets[i].id) {\n                    found = true;\n\n                    if (t.values[t.values.length - 1]) {\n                        tail = t.values[t.values.length - 1].index + 1;\n                    }\n                    length = targets[i].values.length;\n\n                    for (j = 0; j < length; j++) {\n                        targets[i].values[j].index = tail + j;\n                        if (!$$.isTimeSeries()) {\n                            targets[i].values[j].x = tail + j;\n                        }\n                    }\n                    t.values = t.values.concat(targets[i].values);\n\n                    targets.splice(i, 1);\n                    break;\n                }\n            }\n            if (!found) {\n                notfoundIds.push(t.id);\n            }\n        });\n\n        // Append null for not found targets\n        $$.data.targets.forEach(function (t) {\n            var i, j;\n            for (i = 0; i < notfoundIds.length; i++) {\n                if (t.id === notfoundIds[i]) {\n                    tail = t.values[t.values.length - 1].index + 1;\n                    for (j = 0; j < length; j++) {\n                        t.values.push({\n                            id: t.id,\n                            index: tail + j,\n                            x: $$.isTimeSeries() ? $$.getOtherTargetX(tail + j) : tail + j,\n                            value: null\n                        });\n                    }\n                }\n            }\n        });\n\n        // Generate null values for new target\n        if ($$.data.targets.length) {\n            targets.forEach(function (t) {\n                var i,\n                    missing = [];\n                for (i = $$.data.targets[0].values[0].index; i < tail; i++) {\n                    missing.push({\n                        id: t.id,\n                        index: i,\n                        x: $$.isTimeSeries() ? $$.getOtherTargetX(i) : i,\n                        value: null\n                    });\n                }\n                t.values.forEach(function (v) {\n                    v.index += tail;\n                    if (!$$.isTimeSeries()) {\n                        v.x += tail;\n                    }\n                });\n                t.values = missing.concat(t.values);\n            });\n        }\n        $$.data.targets = $$.data.targets.concat(targets); // add remained\n\n        // check data count because behavior needs to change when it's only one\n        dataCount = $$.getMaxDataCount();\n        baseTarget = $$.data.targets[0];\n        baseValue = baseTarget.values[0];\n\n        // Update length to flow if needed\n        if (isDefined(args.to)) {\n            length = 0;\n            to = $$.isTimeSeries() ? $$.parseDate(args.to) : args.to;\n            baseTarget.values.forEach(function (v) {\n                if (v.x < to) {\n                    length++;\n                }\n            });\n        } else if (isDefined(args.length)) {\n            length = args.length;\n        }\n\n        // If only one data, update the domain to flow from left edge of the chart\n        if (!orgDataCount) {\n            if ($$.isTimeSeries()) {\n                if (baseTarget.values.length > 1) {\n                    diff = baseTarget.values[baseTarget.values.length - 1].x - baseValue.x;\n                } else {\n                    diff = baseValue.x - $$.getXDomain($$.data.targets)[0];\n                }\n            } else {\n                diff = 1;\n            }\n            domain = [baseValue.x - diff, baseValue.x];\n            $$.updateXDomain(null, true, true, false, domain);\n        } else if (orgDataCount === 1) {\n            if ($$.isTimeSeries()) {\n                diff = (baseTarget.values[baseTarget.values.length - 1].x - baseValue.x) / 2;\n                domain = [new Date(+baseValue.x - diff), new Date(+baseValue.x + diff)];\n                $$.updateXDomain(null, true, true, false, domain);\n            }\n        }\n\n        // Set targets\n        $$.updateTargets($$.data.targets);\n\n        // Redraw with new targets\n        $$.redraw({\n            flow: {\n                index: baseValue.index,\n                length: length,\n                duration: isValue(args.duration) ? args.duration : $$.config.transition_duration,\n                done: args.done,\n                orgDataCount: orgDataCount\n            },\n            withLegend: true,\n            withTransition: orgDataCount > 1,\n            withTrimXDomain: false,\n            withUpdateXAxis: true\n        });\n    };\n\n    c3_chart_internal_fn.generateFlow = function (args) {\n        var $$ = this,\n            config = $$.config,\n            d3 = $$.d3;\n\n        return function () {\n            var targets = args.targets,\n                flow = args.flow,\n                drawBar = args.drawBar,\n                drawLine = args.drawLine,\n                drawArea = args.drawArea,\n                cx = args.cx,\n                cy = args.cy,\n                xv = args.xv,\n                xForText = args.xForText,\n                yForText = args.yForText,\n                duration = args.duration;\n\n            var translateX,\n                scaleX = 1,\n                transform,\n                flowIndex = flow.index,\n                flowLength = flow.length,\n                flowStart = $$.getValueOnIndex($$.data.targets[0].values, flowIndex),\n                flowEnd = $$.getValueOnIndex($$.data.targets[0].values, flowIndex + flowLength),\n                orgDomain = $$.x.domain(),\n                domain,\n                durationForFlow = flow.duration || duration,\n                done = flow.done || function () {},\n                wait = $$.generateWait();\n\n            var xgrid, xgridLines, mainRegion, mainText, mainBar, mainLine, mainArea, mainCircle;\n\n            // set flag\n            $$.flowing = true;\n\n            // remove head data after rendered\n            $$.data.targets.forEach(function (d) {\n                d.values.splice(0, flowLength);\n            });\n\n            // update x domain to generate axis elements for flow\n            domain = $$.updateXDomain(targets, true, true);\n            // update elements related to x scale\n            if ($$.updateXGrid) {\n                $$.updateXGrid(true);\n            }\n\n            xgrid = $$.xgrid || d3.selectAll([]); // xgrid needs to be obtained after updateXGrid\n            xgridLines = $$.xgridLines || d3.selectAll([]);\n            mainRegion = $$.mainRegion || d3.selectAll([]);\n            mainText = $$.mainText || d3.selectAll([]);\n            mainBar = $$.mainBar || d3.selectAll([]);\n            mainLine = $$.mainLine || d3.selectAll([]);\n            mainArea = $$.mainArea || d3.selectAll([]);\n            mainCircle = $$.mainCircle || d3.selectAll([]);\n\n            // generate transform to flow\n            if (!flow.orgDataCount) {\n                // if empty\n                if ($$.data.targets[0].values.length !== 1) {\n                    translateX = $$.x(orgDomain[0]) - $$.x(domain[0]);\n                } else {\n                    if ($$.isTimeSeries()) {\n                        flowStart = $$.getValueOnIndex($$.data.targets[0].values, 0);\n                        flowEnd = $$.getValueOnIndex($$.data.targets[0].values, $$.data.targets[0].values.length - 1);\n                        translateX = $$.x(flowStart.x) - $$.x(flowEnd.x);\n                    } else {\n                        translateX = diffDomain(domain) / 2;\n                    }\n                }\n            } else if (flow.orgDataCount === 1 || (flowStart && flowStart.x) === (flowEnd && flowEnd.x)) {\n                translateX = $$.x(orgDomain[0]) - $$.x(domain[0]);\n            } else {\n                if ($$.isTimeSeries()) {\n                    translateX = $$.x(orgDomain[0]) - $$.x(domain[0]);\n                } else {\n                    translateX = $$.x(flowStart.x) - $$.x(flowEnd.x);\n                }\n            }\n            scaleX = diffDomain(orgDomain) / diffDomain(domain);\n            transform = 'translate(' + translateX + ',0) scale(' + scaleX + ',1)';\n\n            $$.hideXGridFocus();\n\n            var flowTransition = d3.transition().ease(d3.easeLinear).duration(durationForFlow);\n            wait.add($$.xAxis($$.axes.x, flowTransition));\n            wait.add(mainBar.transition(flowTransition).attr('transform', transform));\n            wait.add(mainLine.transition(flowTransition).attr('transform', transform));\n            wait.add(mainArea.transition(flowTransition).attr('transform', transform));\n            wait.add(mainCircle.transition(flowTransition).attr('transform', transform));\n            wait.add(mainText.transition(flowTransition).attr('transform', transform));\n            wait.add(mainRegion.filter($$.isRegionOnX).transition(flowTransition).attr('transform', transform));\n            wait.add(xgrid.transition(flowTransition).attr('transform', transform));\n            wait.add(xgridLines.transition(flowTransition).attr('transform', transform));\n            wait(function () {\n                var i,\n                    shapes = [],\n                    texts = [];\n\n                // remove flowed elements\n                if (flowLength) {\n                    for (i = 0; i < flowLength; i++) {\n                        shapes.push('.' + CLASS.shape + '-' + (flowIndex + i));\n                        texts.push('.' + CLASS.text + '-' + (flowIndex + i));\n                    }\n                    $$.svg.selectAll('.' + CLASS.shapes).selectAll(shapes).remove();\n                    $$.svg.selectAll('.' + CLASS.texts).selectAll(texts).remove();\n                    $$.svg.select('.' + CLASS.xgrid).remove();\n                }\n\n                // draw again for removing flowed elements and reverting attr\n                xgrid.attr('transform', null).attr('x1', $$.xgridAttr.x1).attr('x2', $$.xgridAttr.x2).attr('y1', $$.xgridAttr.y1).attr('y2', $$.xgridAttr.y2).style(\"opacity\", $$.xgridAttr.opacity);\n                xgridLines.attr('transform', null);\n                xgridLines.select('line').attr(\"x1\", config.axis_rotated ? 0 : xv).attr(\"x2\", config.axis_rotated ? $$.width : xv);\n                xgridLines.select('text').attr(\"x\", config.axis_rotated ? $$.width : 0).attr(\"y\", xv);\n                mainBar.attr('transform', null).attr(\"d\", drawBar);\n                mainLine.attr('transform', null).attr(\"d\", drawLine);\n                mainArea.attr('transform', null).attr(\"d\", drawArea);\n                mainCircle.attr('transform', null).attr(\"cx\", cx).attr(\"cy\", cy);\n                mainText.attr('transform', null).attr('x', xForText).attr('y', yForText).style('fill-opacity', $$.opacityForText.bind($$));\n                mainRegion.attr('transform', null);\n                mainRegion.filter($$.isRegionOnX).attr(\"x\", $$.regionX.bind($$)).attr(\"width\", $$.regionWidth.bind($$));\n\n                // callback for end of flow\n                done();\n\n                $$.flowing = false;\n            });\n        };\n    };\n\n    c3_chart_fn.focus = function (targetIds) {\n        var $$ = this.internal,\n            candidates;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        candidates = $$.svg.selectAll($$.selectorTargets(targetIds.filter($$.isTargetToShow, $$))), this.revert();\n        this.defocus();\n        candidates.classed(CLASS.focused, true).classed(CLASS.defocused, false);\n        if ($$.hasArcType()) {\n            $$.expandArc(targetIds);\n        }\n        $$.toggleFocusLegend(targetIds, true);\n\n        $$.focusedTargetIds = targetIds;\n        $$.defocusedTargetIds = $$.defocusedTargetIds.filter(function (id) {\n            return targetIds.indexOf(id) < 0;\n        });\n    };\n\n    c3_chart_fn.defocus = function (targetIds) {\n        var $$ = this.internal,\n            candidates;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        candidates = $$.svg.selectAll($$.selectorTargets(targetIds.filter($$.isTargetToShow, $$))), candidates.classed(CLASS.focused, false).classed(CLASS.defocused, true);\n        if ($$.hasArcType()) {\n            $$.unexpandArc(targetIds);\n        }\n        $$.toggleFocusLegend(targetIds, false);\n\n        $$.focusedTargetIds = $$.focusedTargetIds.filter(function (id) {\n            return targetIds.indexOf(id) < 0;\n        });\n        $$.defocusedTargetIds = targetIds;\n    };\n\n    c3_chart_fn.revert = function (targetIds) {\n        var $$ = this.internal,\n            candidates;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        candidates = $$.svg.selectAll($$.selectorTargets(targetIds)); // should be for all targets\n\n        candidates.classed(CLASS.focused, false).classed(CLASS.defocused, false);\n        if ($$.hasArcType()) {\n            $$.unexpandArc(targetIds);\n        }\n        if ($$.config.legend_show) {\n            $$.showLegend(targetIds.filter($$.isLegendToShow.bind($$)));\n            $$.legend.selectAll($$.selectorLegends(targetIds)).filter(function () {\n                return $$.d3.select(this).classed(CLASS.legendItemFocused);\n            }).classed(CLASS.legendItemFocused, false);\n        }\n\n        $$.focusedTargetIds = [];\n        $$.defocusedTargetIds = [];\n    };\n\n    c3_chart_fn.xgrids = function (grids) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (!grids) {\n            return config.grid_x_lines;\n        }\n        config.grid_x_lines = grids;\n        $$.redrawWithoutRescale();\n        return config.grid_x_lines;\n    };\n    c3_chart_fn.xgrids.add = function (grids) {\n        var $$ = this.internal;\n        return this.xgrids($$.config.grid_x_lines.concat(grids ? grids : []));\n    };\n    c3_chart_fn.xgrids.remove = function (params) {\n        // TODO: multiple\n        var $$ = this.internal;\n        $$.removeGridLines(params, true);\n    };\n\n    c3_chart_fn.ygrids = function (grids) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (!grids) {\n            return config.grid_y_lines;\n        }\n        config.grid_y_lines = grids;\n        $$.redrawWithoutRescale();\n        return config.grid_y_lines;\n    };\n    c3_chart_fn.ygrids.add = function (grids) {\n        var $$ = this.internal;\n        return this.ygrids($$.config.grid_y_lines.concat(grids ? grids : []));\n    };\n    c3_chart_fn.ygrids.remove = function (params) {\n        // TODO: multiple\n        var $$ = this.internal;\n        $$.removeGridLines(params, false);\n    };\n\n    c3_chart_fn.groups = function (groups) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (isUndefined(groups)) {\n            return config.data_groups;\n        }\n        config.data_groups = groups;\n        $$.redraw();\n        return config.data_groups;\n    };\n\n    c3_chart_fn.legend = function () {};\n    c3_chart_fn.legend.show = function (targetIds) {\n        var $$ = this.internal;\n        $$.showLegend($$.mapToTargetIds(targetIds));\n        $$.updateAndRedraw({ withLegend: true });\n    };\n    c3_chart_fn.legend.hide = function (targetIds) {\n        var $$ = this.internal;\n        $$.hideLegend($$.mapToTargetIds(targetIds));\n        $$.updateAndRedraw({ withLegend: true });\n    };\n\n    c3_chart_fn.load = function (args) {\n        var $$ = this.internal,\n            config = $$.config;\n        // update xs if specified\n        if (args.xs) {\n            $$.addXs(args.xs);\n        }\n        // update names if exists\n        if ('names' in args) {\n            c3_chart_fn.data.names.bind(this)(args.names);\n        }\n        // update classes if exists\n        if ('classes' in args) {\n            Object.keys(args.classes).forEach(function (id) {\n                config.data_classes[id] = args.classes[id];\n            });\n        }\n        // update categories if exists\n        if ('categories' in args && $$.isCategorized()) {\n            config.axis_x_categories = args.categories;\n        }\n        // update axes if exists\n        if ('axes' in args) {\n            Object.keys(args.axes).forEach(function (id) {\n                config.data_axes[id] = args.axes[id];\n            });\n        }\n        // update colors if exists\n        if ('colors' in args) {\n            Object.keys(args.colors).forEach(function (id) {\n                config.data_colors[id] = args.colors[id];\n            });\n        }\n        // use cache if exists\n        if ('cacheIds' in args && $$.hasCaches(args.cacheIds)) {\n            $$.load($$.getCaches(args.cacheIds), args.done);\n            return;\n        }\n        // unload if needed\n        if ('unload' in args) {\n            // TODO: do not unload if target will load (included in url/rows/columns)\n            $$.unload($$.mapToTargetIds(typeof args.unload === 'boolean' && args.unload ? null : args.unload), function () {\n                $$.loadFromArgs(args);\n            });\n        } else {\n            $$.loadFromArgs(args);\n        }\n    };\n\n    c3_chart_fn.unload = function (args) {\n        var $$ = this.internal;\n        args = args || {};\n        if (args instanceof Array) {\n            args = { ids: args };\n        } else if (typeof args === 'string') {\n            args = { ids: [args] };\n        }\n        $$.unload($$.mapToTargetIds(args.ids), function () {\n            $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true });\n            if (args.done) {\n                args.done();\n            }\n        });\n    };\n\n    c3_chart_fn.regions = function (regions) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (!regions) {\n            return config.regions;\n        }\n        config.regions = regions;\n        $$.redrawWithoutRescale();\n        return config.regions;\n    };\n    c3_chart_fn.regions.add = function (regions) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (!regions) {\n            return config.regions;\n        }\n        config.regions = config.regions.concat(regions);\n        $$.redrawWithoutRescale();\n        return config.regions;\n    };\n    c3_chart_fn.regions.remove = function (options) {\n        var $$ = this.internal,\n            config = $$.config,\n            duration,\n            classes,\n            regions;\n\n        options = options || {};\n        duration = $$.getOption(options, \"duration\", config.transition_duration);\n        classes = $$.getOption(options, \"classes\", [CLASS.region]);\n\n        regions = $$.main.select('.' + CLASS.regions).selectAll(classes.map(function (c) {\n            return '.' + c;\n        }));\n        (duration ? regions.transition().duration(duration) : regions).style('opacity', 0).remove();\n\n        config.regions = config.regions.filter(function (region) {\n            var found = false;\n            if (!region['class']) {\n                return true;\n            }\n            region['class'].split(' ').forEach(function (c) {\n                if (classes.indexOf(c) >= 0) {\n                    found = true;\n                }\n            });\n            return !found;\n        });\n\n        return config.regions;\n    };\n\n    c3_chart_fn.selected = function (targetId) {\n        var $$ = this.internal,\n            d3 = $$.d3;\n        return d3.merge($$.main.selectAll('.' + CLASS.shapes + $$.getTargetSelectorSuffix(targetId)).selectAll('.' + CLASS.shape).filter(function () {\n            return d3.select(this).classed(CLASS.SELECTED);\n        }).map(function (d) {\n            return d.map(function (d) {\n                var data = d.__data__;return data.data ? data.data : data;\n            });\n        }));\n    };\n    c3_chart_fn.select = function (ids, indices, resetOther) {\n        var $$ = this.internal,\n            d3 = $$.d3,\n            config = $$.config;\n        if (!config.data_selection_enabled) {\n            return;\n        }\n        $$.main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape).each(function (d, i) {\n            var shape = d3.select(this),\n                id = d.data ? d.data.id : d.id,\n                toggle = $$.getToggle(this, d).bind($$),\n                isTargetId = config.data_selection_grouped || !ids || ids.indexOf(id) >= 0,\n                isTargetIndex = !indices || indices.indexOf(i) >= 0,\n                isSelected = shape.classed(CLASS.SELECTED);\n            // line/area selection not supported yet\n            if (shape.classed(CLASS.line) || shape.classed(CLASS.area)) {\n                return;\n            }\n            if (isTargetId && isTargetIndex) {\n                if (config.data_selection_isselectable(d) && !isSelected) {\n                    toggle(true, shape.classed(CLASS.SELECTED, true), d, i);\n                }\n            } else if (isDefined(resetOther) && resetOther) {\n                if (isSelected) {\n                    toggle(false, shape.classed(CLASS.SELECTED, false), d, i);\n                }\n            }\n        });\n    };\n    c3_chart_fn.unselect = function (ids, indices) {\n        var $$ = this.internal,\n            d3 = $$.d3,\n            config = $$.config;\n        if (!config.data_selection_enabled) {\n            return;\n        }\n        $$.main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape).each(function (d, i) {\n            var shape = d3.select(this),\n                id = d.data ? d.data.id : d.id,\n                toggle = $$.getToggle(this, d).bind($$),\n                isTargetId = config.data_selection_grouped || !ids || ids.indexOf(id) >= 0,\n                isTargetIndex = !indices || indices.indexOf(i) >= 0,\n                isSelected = shape.classed(CLASS.SELECTED);\n            // line/area selection not supported yet\n            if (shape.classed(CLASS.line) || shape.classed(CLASS.area)) {\n                return;\n            }\n            if (isTargetId && isTargetIndex) {\n                if (config.data_selection_isselectable(d)) {\n                    if (isSelected) {\n                        toggle(false, shape.classed(CLASS.SELECTED, false), d, i);\n                    }\n                }\n            }\n        });\n    };\n\n    c3_chart_fn.show = function (targetIds, options) {\n        var $$ = this.internal,\n            targets;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        options = options || {};\n\n        $$.removeHiddenTargetIds(targetIds);\n        targets = $$.svg.selectAll($$.selectorTargets(targetIds));\n\n        targets.transition().style('display', 'initial', 'important').style('opacity', 1, 'important').call($$.endall, function () {\n            targets.style('opacity', null).style('opacity', 1);\n        });\n\n        if (options.withLegend) {\n            $$.showLegend(targetIds);\n        }\n\n        $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true });\n    };\n\n    c3_chart_fn.hide = function (targetIds, options) {\n        var $$ = this.internal,\n            targets;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        options = options || {};\n\n        $$.addHiddenTargetIds(targetIds);\n        targets = $$.svg.selectAll($$.selectorTargets(targetIds));\n\n        targets.transition().style('opacity', 0, 'important').call($$.endall, function () {\n            targets.style('opacity', null).style('opacity', 0);\n            targets.style('display', 'none');\n        });\n\n        if (options.withLegend) {\n            $$.hideLegend(targetIds);\n        }\n\n        $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true });\n    };\n\n    c3_chart_fn.toggle = function (targetIds, options) {\n        var that = this,\n            $$ = this.internal;\n        $$.mapToTargetIds(targetIds).forEach(function (targetId) {\n            $$.isTargetToShow(targetId) ? that.hide(targetId, options) : that.show(targetId, options);\n        });\n    };\n\n    c3_chart_fn.tooltip = function () {};\n    c3_chart_fn.tooltip.show = function (args) {\n        var $$ = this.internal,\n            targets,\n            data,\n            mouse = {};\n\n        // determine mouse position on the chart\n        if (args.mouse) {\n            mouse = args.mouse;\n        } else {\n            // determine focus data\n            if (args.data) {\n                data = args.data;\n            } else if (typeof args.x !== 'undefined') {\n                if (args.id) {\n                    targets = $$.data.targets.filter(function (t) {\n                        return t.id === args.id;\n                    });\n                } else {\n                    targets = $$.data.targets;\n                }\n                data = $$.filterByX(targets, args.x).slice(0, 1)[0];\n            }\n            mouse = data ? $$.getMousePosition(data) : null;\n        }\n\n        // emulate mouse events to show\n        $$.dispatchEvent('mousemove', mouse);\n\n        $$.config.tooltip_onshow.call($$, data);\n    };\n    c3_chart_fn.tooltip.hide = function () {\n        // TODO: get target data by checking the state of focus\n        this.internal.dispatchEvent('mouseout', 0);\n\n        this.internal.config.tooltip_onhide.call(this);\n    };\n\n    c3_chart_fn.transform = function (type, targetIds) {\n        var $$ = this.internal,\n            options = ['pie', 'donut'].indexOf(type) >= 0 ? { withTransform: true } : null;\n        $$.transformTo(targetIds, type, options);\n    };\n\n    c3_chart_internal_fn.transformTo = function (targetIds, type, optionsForRedraw) {\n        var $$ = this,\n            withTransitionForAxis = !$$.hasArcType(),\n            options = optionsForRedraw || { withTransitionForAxis: withTransitionForAxis };\n        options.withTransitionForTransform = false;\n        $$.transiting = false;\n        $$.setTargetType(targetIds, type);\n        $$.updateTargets($$.data.targets); // this is needed when transforming to arc\n        $$.updateAndRedraw(options);\n    };\n\n    c3_chart_fn.x = function (x) {\n        var $$ = this.internal;\n        if (arguments.length) {\n            $$.updateTargetX($$.data.targets, x);\n            $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true });\n        }\n        return $$.data.xs;\n    };\n    c3_chart_fn.xs = function (xs) {\n        var $$ = this.internal;\n        if (arguments.length) {\n            $$.updateTargetXs($$.data.targets, xs);\n            $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true });\n        }\n        return $$.data.xs;\n    };\n\n    c3_chart_fn.zoom = function (domain) {\n        var $$ = this.internal;\n        if (domain) {\n            if ($$.isTimeSeries()) {\n                domain = domain.map(function (x) {\n                    return $$.parseDate(x);\n                });\n            }\n            if ($$.config.subchart_show) {\n                $$.brush.selectionAsValue(domain, true);\n            } else {\n                $$.updateXDomain(null, true, false, false, domain);\n                $$.redraw({ withY: $$.config.zoom_rescale, withSubchart: false });\n            }\n            $$.config.zoom_onzoom.call(this, $$.x.orgDomain());\n            return domain;\n        } else {\n            return $$.x.domain();\n        }\n    };\n    c3_chart_fn.zoom.enable = function (enabled) {\n        var $$ = this.internal;\n        $$.config.zoom_enabled = enabled;\n        $$.updateAndRedraw();\n    };\n    c3_chart_fn.unzoom = function () {\n        var $$ = this.internal;\n        if ($$.config.subchart_show) {\n            $$.brush.clear();\n        } else {\n            $$.updateXDomain(null, true, false, false, $$.subX.domain());\n            $$.redraw({ withY: $$.config.zoom_rescale, withSubchart: false });\n        }\n    };\n\n    c3_chart_fn.zoom.max = function (max) {\n        var $$ = this.internal,\n            config = $$.config,\n            d3 = $$.d3;\n        if (max === 0 || max) {\n            config.zoom_x_max = d3.max([$$.orgXDomain[1], max]);\n        } else {\n            return config.zoom_x_max;\n        }\n    };\n\n    c3_chart_fn.zoom.min = function (min) {\n        var $$ = this.internal,\n            config = $$.config,\n            d3 = $$.d3;\n        if (min === 0 || min) {\n            config.zoom_x_min = d3.min([$$.orgXDomain[0], min]);\n        } else {\n            return config.zoom_x_min;\n        }\n    };\n\n    c3_chart_fn.zoom.range = function (range) {\n        if (arguments.length) {\n            if (isDefined(range.max)) {\n                this.domain.max(range.max);\n            }\n            if (isDefined(range.min)) {\n                this.domain.min(range.min);\n            }\n        } else {\n            return {\n                max: this.domain.max(),\n                min: this.domain.min()\n            };\n        }\n    };\n\n    c3_chart_internal_fn.initPie = function () {\n        var $$ = this,\n            d3 = $$.d3;\n        $$.pie = d3.pie().value(function (d) {\n            return d.values.reduce(function (a, b) {\n                return a + b.value;\n            }, 0);\n        });\n\n        var orderFct = $$.getOrderFunction();\n\n        // we need to reverse the returned order if asc or desc to have the slice in expected order.\n        if (orderFct && ($$.isOrderAsc() || $$.isOrderDesc())) {\n            var defaultSort = orderFct;\n            orderFct = function orderFct(t1, t2) {\n                return defaultSort(t1, t2) * -1;\n            };\n        }\n\n        $$.pie.sort(orderFct || null);\n    };\n\n    c3_chart_internal_fn.updateRadius = function () {\n        var $$ = this,\n            config = $$.config,\n            w = config.gauge_width || config.donut_width,\n            gaugeArcWidth = $$.filterTargetsToShow($$.data.targets).length * $$.config.gauge_arcs_minWidth;\n        $$.radiusExpanded = Math.min($$.arcWidth, $$.arcHeight) / 2 * ($$.hasType('gauge') ? 0.85 : 1);\n        $$.radius = $$.radiusExpanded * 0.95;\n        $$.innerRadiusRatio = w ? ($$.radius - w) / $$.radius : 0.6;\n        $$.innerRadius = $$.hasType('donut') || $$.hasType('gauge') ? $$.radius * $$.innerRadiusRatio : 0;\n        $$.gaugeArcWidth = w ? w : gaugeArcWidth <= $$.radius - $$.innerRadius ? $$.radius - $$.innerRadius : gaugeArcWidth <= $$.radius ? gaugeArcWidth : $$.radius;\n    };\n\n    c3_chart_internal_fn.updateArc = function () {\n        var $$ = this;\n        $$.svgArc = $$.getSvgArc();\n        $$.svgArcExpanded = $$.getSvgArcExpanded();\n        $$.svgArcExpandedSub = $$.getSvgArcExpanded(0.98);\n    };\n\n    c3_chart_internal_fn.updateAngle = function (d) {\n        var $$ = this,\n            config = $$.config,\n            found = false,\n            index = 0,\n            gMin,\n            gMax,\n            gTic,\n            gValue;\n\n        if (!config) {\n            return null;\n        }\n\n        $$.pie($$.filterTargetsToShow($$.data.targets)).forEach(function (t) {\n            if (!found && t.data.id === d.data.id) {\n                found = true;\n                d = t;\n                d.index = index;\n            }\n            index++;\n        });\n        if (isNaN(d.startAngle)) {\n            d.startAngle = 0;\n        }\n        if (isNaN(d.endAngle)) {\n            d.endAngle = d.startAngle;\n        }\n        if ($$.isGaugeType(d.data)) {\n            gMin = config.gauge_min;\n            gMax = config.gauge_max;\n            gTic = Math.PI * (config.gauge_fullCircle ? 2 : 1) / (gMax - gMin);\n            gValue = d.value < gMin ? 0 : d.value < gMax ? d.value - gMin : gMax - gMin;\n            d.startAngle = config.gauge_startingAngle;\n            d.endAngle = d.startAngle + gTic * gValue;\n        }\n        return found ? d : null;\n    };\n\n    c3_chart_internal_fn.getSvgArc = function () {\n        var $$ = this,\n            hasGaugeType = $$.hasType('gauge'),\n            singleArcWidth = $$.gaugeArcWidth / $$.filterTargetsToShow($$.data.targets).length,\n            arc = $$.d3.arc().outerRadius(function (d) {\n            return hasGaugeType ? $$.radius - singleArcWidth * d.index : $$.radius;\n        }).innerRadius(function (d) {\n            return hasGaugeType ? $$.radius - singleArcWidth * (d.index + 1) : $$.innerRadius;\n        }),\n            newArc = function newArc(d, withoutUpdate) {\n            var updated;\n            if (withoutUpdate) {\n                return arc(d);\n            } // for interpolate\n            updated = $$.updateAngle(d);\n            return updated ? arc(updated) : \"M 0 0\";\n        };\n        // TODO: extends all function\n        newArc.centroid = arc.centroid;\n        return newArc;\n    };\n\n    c3_chart_internal_fn.getSvgArcExpanded = function (rate) {\n        rate = rate || 1;\n        var $$ = this,\n            hasGaugeType = $$.hasType('gauge'),\n            singleArcWidth = $$.gaugeArcWidth / $$.filterTargetsToShow($$.data.targets).length,\n            expandWidth = Math.min($$.radiusExpanded * rate - $$.radius, singleArcWidth * 0.8 - (1 - rate) * 100),\n            arc = $$.d3.arc().outerRadius(function (d) {\n            return hasGaugeType ? $$.radius - singleArcWidth * d.index + expandWidth : $$.radiusExpanded * rate;\n        }).innerRadius(function (d) {\n            return hasGaugeType ? $$.radius - singleArcWidth * (d.index + 1) : $$.innerRadius;\n        });\n        return function (d) {\n            var updated = $$.updateAngle(d);\n            return updated ? arc(updated) : \"M 0 0\";\n        };\n    };\n\n    c3_chart_internal_fn.getArc = function (d, withoutUpdate, force) {\n        return force || this.isArcType(d.data) ? this.svgArc(d, withoutUpdate) : \"M 0 0\";\n    };\n\n    c3_chart_internal_fn.transformForArcLabel = function (d) {\n        var $$ = this,\n            config = $$.config,\n            updated = $$.updateAngle(d),\n            c,\n            x,\n            y,\n            h,\n            ratio,\n            translate = \"\",\n            hasGauge = $$.hasType('gauge');\n        if (updated && !hasGauge) {\n            c = this.svgArc.centroid(updated);\n            x = isNaN(c[0]) ? 0 : c[0];\n            y = isNaN(c[1]) ? 0 : c[1];\n            h = Math.sqrt(x * x + y * y);\n            if ($$.hasType('donut') && config.donut_label_ratio) {\n                ratio = isFunction(config.donut_label_ratio) ? config.donut_label_ratio(d, $$.radius, h) : config.donut_label_ratio;\n            } else if ($$.hasType('pie') && config.pie_label_ratio) {\n                ratio = isFunction(config.pie_label_ratio) ? config.pie_label_ratio(d, $$.radius, h) : config.pie_label_ratio;\n            } else {\n                ratio = $$.radius && h ? (36 / $$.radius > 0.375 ? 1.175 - 36 / $$.radius : 0.8) * $$.radius / h : 0;\n            }\n            translate = \"translate(\" + x * ratio + ',' + y * ratio + \")\";\n        } else if (updated && hasGauge && $$.filterTargetsToShow($$.data.targets).length > 1) {\n            var y1 = Math.sin(updated.endAngle - Math.PI / 2);\n            x = Math.cos(updated.endAngle - Math.PI / 2) * ($$.radiusExpanded + 25);\n            y = y1 * ($$.radiusExpanded + 15 - Math.abs(y1 * 10)) + 3;\n            translate = \"translate(\" + x + ',' + y + \")\";\n        }\n        return translate;\n    };\n\n    c3_chart_internal_fn.getArcRatio = function (d) {\n        var $$ = this,\n            config = $$.config,\n            whole = Math.PI * ($$.hasType('gauge') && !config.gauge_fullCircle ? 1 : 2);\n        return d ? (d.endAngle - d.startAngle) / whole : null;\n    };\n\n    c3_chart_internal_fn.convertToArcData = function (d) {\n        return this.addName({\n            id: d.data.id,\n            value: d.value,\n            ratio: this.getArcRatio(d),\n            index: d.index\n        });\n    };\n\n    c3_chart_internal_fn.textForArcLabel = function (d) {\n        var $$ = this,\n            updated,\n            value,\n            ratio,\n            id,\n            format;\n        if (!$$.shouldShowArcLabel()) {\n            return \"\";\n        }\n        updated = $$.updateAngle(d);\n        value = updated ? updated.value : null;\n        ratio = $$.getArcRatio(updated);\n        id = d.data.id;\n        if (!$$.hasType('gauge') && !$$.meetsArcLabelThreshold(ratio)) {\n            return \"\";\n        }\n        format = $$.getArcLabelFormat();\n        return format ? format(value, ratio, id) : $$.defaultArcValueFormat(value, ratio);\n    };\n\n    c3_chart_internal_fn.textForGaugeMinMax = function (value, isMax) {\n        var $$ = this,\n            format = $$.getGaugeLabelExtents();\n\n        return format ? format(value, isMax) : value;\n    };\n\n    c3_chart_internal_fn.expandArc = function (targetIds) {\n        var $$ = this,\n            interval;\n\n        // MEMO: avoid to cancel transition\n        if ($$.transiting) {\n            interval = window.setInterval(function () {\n                if (!$$.transiting) {\n                    window.clearInterval(interval);\n                    if ($$.legend.selectAll('.c3-legend-item-focused').size() > 0) {\n                        $$.expandArc(targetIds);\n                    }\n                }\n            }, 10);\n            return;\n        }\n\n        targetIds = $$.mapToTargetIds(targetIds);\n\n        $$.svg.selectAll($$.selectorTargets(targetIds, '.' + CLASS.chartArc)).each(function (d) {\n            if (!$$.shouldExpand(d.data.id)) {\n                return;\n            }\n            $$.d3.select(this).selectAll('path').transition().duration($$.expandDuration(d.data.id)).attr(\"d\", $$.svgArcExpanded).transition().duration($$.expandDuration(d.data.id) * 2).attr(\"d\", $$.svgArcExpandedSub).each(function (d) {\n                if ($$.isDonutType(d.data)) {\n                    // callback here\n                }\n            });\n        });\n    };\n\n    c3_chart_internal_fn.unexpandArc = function (targetIds) {\n        var $$ = this;\n\n        if ($$.transiting) {\n            return;\n        }\n\n        targetIds = $$.mapToTargetIds(targetIds);\n\n        $$.svg.selectAll($$.selectorTargets(targetIds, '.' + CLASS.chartArc)).selectAll('path').transition().duration(function (d) {\n            return $$.expandDuration(d.data.id);\n        }).attr(\"d\", $$.svgArc);\n        $$.svg.selectAll('.' + CLASS.arc);\n    };\n\n    c3_chart_internal_fn.expandDuration = function (id) {\n        var $$ = this,\n            config = $$.config;\n\n        if ($$.isDonutType(id)) {\n            return config.donut_expand_duration;\n        } else if ($$.isGaugeType(id)) {\n            return config.gauge_expand_duration;\n        } else if ($$.isPieType(id)) {\n            return config.pie_expand_duration;\n        } else {\n            return 50;\n        }\n    };\n\n    c3_chart_internal_fn.shouldExpand = function (id) {\n        var $$ = this,\n            config = $$.config;\n        return $$.isDonutType(id) && config.donut_expand || $$.isGaugeType(id) && config.gauge_expand || $$.isPieType(id) && config.pie_expand;\n    };\n\n    c3_chart_internal_fn.shouldShowArcLabel = function () {\n        var $$ = this,\n            config = $$.config,\n            shouldShow = true;\n        if ($$.hasType('donut')) {\n            shouldShow = config.donut_label_show;\n        } else if ($$.hasType('pie')) {\n            shouldShow = config.pie_label_show;\n        }\n        // when gauge, always true\n        return shouldShow;\n    };\n\n    c3_chart_internal_fn.meetsArcLabelThreshold = function (ratio) {\n        var $$ = this,\n            config = $$.config,\n            threshold = $$.hasType('donut') ? config.donut_label_threshold : config.pie_label_threshold;\n        return ratio >= threshold;\n    };\n\n    c3_chart_internal_fn.getArcLabelFormat = function () {\n        var $$ = this,\n            config = $$.config,\n            format = config.pie_label_format;\n        if ($$.hasType('gauge')) {\n            format = config.gauge_label_format;\n        } else if ($$.hasType('donut')) {\n            format = config.donut_label_format;\n        }\n        return format;\n    };\n\n    c3_chart_internal_fn.getGaugeLabelExtents = function () {\n        var $$ = this,\n            config = $$.config;\n        return config.gauge_label_extents;\n    };\n\n    c3_chart_internal_fn.getArcTitle = function () {\n        var $$ = this;\n        return $$.hasType('donut') ? $$.config.donut_title : \"\";\n    };\n\n    c3_chart_internal_fn.updateTargetsForArc = function (targets) {\n        var $$ = this,\n            main = $$.main,\n            mainPies,\n            mainPieEnter,\n            classChartArc = $$.classChartArc.bind($$),\n            classArcs = $$.classArcs.bind($$),\n            classFocus = $$.classFocus.bind($$);\n        mainPies = main.select('.' + CLASS.chartArcs).selectAll('.' + CLASS.chartArc).data($$.pie(targets)).attr(\"class\", function (d) {\n            return classChartArc(d) + classFocus(d.data);\n        });\n        mainPieEnter = mainPies.enter().append(\"g\").attr(\"class\", classChartArc);\n        mainPieEnter.append('g').attr('class', classArcs);\n        mainPieEnter.append(\"text\").attr(\"dy\", $$.hasType('gauge') ? \"-.1em\" : \".35em\").style(\"opacity\", 0).style(\"text-anchor\", \"middle\").style(\"pointer-events\", \"none\");\n        // MEMO: can not keep same color..., but not bad to update color in redraw\n        //mainPieUpdate.exit().remove();\n    };\n\n    c3_chart_internal_fn.initArc = function () {\n        var $$ = this;\n        $$.arcs = $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartArcs).attr(\"transform\", $$.getTranslate('arc'));\n        $$.arcs.append('text').attr('class', CLASS.chartArcsTitle).style(\"text-anchor\", \"middle\").text($$.getArcTitle());\n    };\n\n    c3_chart_internal_fn.redrawArc = function (duration, durationForExit, withTransform) {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config,\n            main = $$.main,\n            arcs,\n            mainArc,\n            backgroundArc,\n            arcLabelLines,\n            mainArcLabelLine,\n            hasGaugeType = $$.hasType('gauge');\n        arcs = main.selectAll('.' + CLASS.arcs).selectAll('.' + CLASS.arc).data($$.arcData.bind($$));\n        mainArc = arcs.enter().append('path').attr(\"class\", $$.classArc.bind($$)).style(\"fill\", function (d) {\n            return $$.color(d.data);\n        }).style(\"cursor\", function (d) {\n            return config.interaction_enabled && config.data_selection_isselectable(d) ? \"pointer\" : null;\n        }).each(function (d) {\n            if ($$.isGaugeType(d.data)) {\n                d.startAngle = d.endAngle = config.gauge_startingAngle;\n            }\n            this._current = d;\n        }).merge(arcs);\n        if (hasGaugeType) {\n            arcLabelLines = main.selectAll('.' + CLASS.arcs).selectAll('.' + CLASS.arcLabelLine).data($$.arcData.bind($$));\n            mainArcLabelLine = arcLabelLines.enter().append('rect').attr(\"class\", function (d) {\n                return CLASS.arcLabelLine + ' ' + CLASS.target + ' ' + CLASS.target + '-' + d.data.id;\n            }).merge(arcLabelLines);\n\n            if ($$.filterTargetsToShow($$.data.targets).length === 1) {\n                mainArcLabelLine.style(\"display\", \"none\");\n            } else {\n                mainArcLabelLine.style(\"fill\", function (d) {\n                    return config.color_pattern.length > 0 ? $$.levelColor(d.data.values[0].value) : $$.color(d.data);\n                }).style(\"display\", config.gauge_labelLine_show ? \"\" : \"none\").each(function (d) {\n                    var lineLength = 0,\n                        lineThickness = 2,\n                        x = 0,\n                        y = 0,\n                        transform = \"\";\n                    if ($$.hiddenTargetIds.indexOf(d.data.id) < 0) {\n                        var updated = $$.updateAngle(d),\n                            innerLineLength = $$.gaugeArcWidth / $$.filterTargetsToShow($$.data.targets).length * (updated.index + 1),\n                            lineAngle = updated.endAngle - Math.PI / 2,\n                            arcInnerRadius = $$.radius - innerLineLength,\n                            linePositioningAngle = lineAngle - (arcInnerRadius === 0 ? 0 : 1 / arcInnerRadius);\n                        lineLength = $$.radiusExpanded - $$.radius + innerLineLength;\n                        x = Math.cos(linePositioningAngle) * arcInnerRadius;\n                        y = Math.sin(linePositioningAngle) * arcInnerRadius;\n                        transform = \"rotate(\" + lineAngle * 180 / Math.PI + \", \" + x + \", \" + y + \")\";\n                    }\n                    d3.select(this).attr('x', x).attr('y', y).attr('width', lineLength).attr('height', lineThickness).attr('transform', transform).style(\"stroke-dasharray\", \"0, \" + (lineLength + lineThickness) + \", 0\");\n                });\n            }\n        }\n        mainArc.attr(\"transform\", function (d) {\n            return !$$.isGaugeType(d.data) && withTransform ? \"scale(0)\" : \"\";\n        }).on('mouseover', config.interaction_enabled ? function (d) {\n            var updated, arcData;\n            if ($$.transiting) {\n                // skip while transiting\n                return;\n            }\n            updated = $$.updateAngle(d);\n            if (updated) {\n                arcData = $$.convertToArcData(updated);\n                // transitions\n                $$.expandArc(updated.data.id);\n                $$.api.focus(updated.data.id);\n                $$.toggleFocusLegend(updated.data.id, true);\n                $$.config.data_onmouseover(arcData, this);\n            }\n        } : null).on('mousemove', config.interaction_enabled ? function (d) {\n            var updated = $$.updateAngle(d),\n                arcData,\n                selectedData;\n            if (updated) {\n                arcData = $$.convertToArcData(updated), selectedData = [arcData];\n                $$.showTooltip(selectedData, this);\n            }\n        } : null).on('mouseout', config.interaction_enabled ? function (d) {\n            var updated, arcData;\n            if ($$.transiting) {\n                // skip while transiting\n                return;\n            }\n            updated = $$.updateAngle(d);\n            if (updated) {\n                arcData = $$.convertToArcData(updated);\n                // transitions\n                $$.unexpandArc(updated.data.id);\n                $$.api.revert();\n                $$.revertLegend();\n                $$.hideTooltip();\n                $$.config.data_onmouseout(arcData, this);\n            }\n        } : null).on('click', config.interaction_enabled ? function (d, i) {\n            var updated = $$.updateAngle(d),\n                arcData;\n            if (updated) {\n                arcData = $$.convertToArcData(updated);\n                if ($$.toggleShape) {\n                    $$.toggleShape(this, arcData, i);\n                }\n                $$.config.data_onclick.call($$.api, arcData, this);\n            }\n        } : null).each(function () {\n            $$.transiting = true;\n        }).transition().duration(duration).attrTween(\"d\", function (d) {\n            var updated = $$.updateAngle(d),\n                interpolate;\n            if (!updated) {\n                return function () {\n                    return \"M 0 0\";\n                };\n            }\n            //                if (this._current === d) {\n            //                    this._current = {\n            //                        startAngle: Math.PI*2,\n            //                        endAngle: Math.PI*2,\n            //                    };\n            //                }\n            if (isNaN(this._current.startAngle)) {\n                this._current.startAngle = 0;\n            }\n            if (isNaN(this._current.endAngle)) {\n                this._current.endAngle = this._current.startAngle;\n            }\n            interpolate = d3.interpolate(this._current, updated);\n            this._current = interpolate(0);\n            return function (t) {\n                var interpolated = interpolate(t);\n                interpolated.data = d.data; // data.id will be updated by interporator\n                return $$.getArc(interpolated, true);\n            };\n        }).attr(\"transform\", withTransform ? \"scale(1)\" : \"\").style(\"fill\", function (d) {\n            return $$.levelColor ? $$.levelColor(d.data.values[0].value) : $$.color(d.data.id);\n        }) // Where gauge reading color would receive customization.\n        .call($$.endall, function () {\n            $$.transiting = false;\n        });\n        arcs.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n        main.selectAll('.' + CLASS.chartArc).select('text').style(\"opacity\", 0).attr('class', function (d) {\n            return $$.isGaugeType(d.data) ? CLASS.gaugeValue : '';\n        }).text($$.textForArcLabel.bind($$)).attr(\"transform\", $$.transformForArcLabel.bind($$)).style('font-size', function (d) {\n            return $$.isGaugeType(d.data) && $$.filterTargetsToShow($$.data.targets).length === 1 ? Math.round($$.radius / 5) + 'px' : '';\n        }).transition().duration(duration).style(\"opacity\", function (d) {\n            return $$.isTargetToShow(d.data.id) && $$.isArcType(d.data) ? 1 : 0;\n        });\n        main.select('.' + CLASS.chartArcsTitle).style(\"opacity\", $$.hasType('donut') || hasGaugeType ? 1 : 0);\n\n        if (hasGaugeType) {\n            var index = 0;\n            backgroundArc = $$.arcs.select('g.' + CLASS.chartArcsBackground).selectAll('path.' + CLASS.chartArcsBackground).data($$.data.targets);\n            backgroundArc.enter().append(\"path\");\n            backgroundArc.attr(\"class\", function (d, i) {\n                return CLASS.chartArcsBackground + ' ' + CLASS.chartArcsBackground + '-' + i;\n            }).attr(\"d\", function (d1) {\n                if ($$.hiddenTargetIds.indexOf(d1.id) >= 0) {\n                    return \"M 0 0\";\n                }\n\n                var d = {\n                    data: [{ value: config.gauge_max }],\n                    startAngle: config.gauge_startingAngle,\n                    endAngle: -1 * config.gauge_startingAngle * (config.gauge_fullCircle ? Math.PI : 1),\n                    index: index++\n                };\n                return $$.getArc(d, true, true);\n            });\n            backgroundArc.exit().remove();\n\n            $$.arcs.select('.' + CLASS.chartArcsGaugeUnit).attr(\"dy\", \".75em\").text(config.gauge_label_show ? config.gauge_units : '');\n            $$.arcs.select('.' + CLASS.chartArcsGaugeMin).attr(\"dx\", -1 * ($$.innerRadius + ($$.radius - $$.innerRadius) / (config.gauge_fullCircle ? 1 : 2)) + \"px\").attr(\"dy\", \"1.2em\").text(config.gauge_label_show ? $$.textForGaugeMinMax(config.gauge_min, false) : '');\n            $$.arcs.select('.' + CLASS.chartArcsGaugeMax).attr(\"dx\", $$.innerRadius + ($$.radius - $$.innerRadius) / (config.gauge_fullCircle ? 1 : 2) + \"px\").attr(\"dy\", \"1.2em\").text(config.gauge_label_show ? $$.textForGaugeMinMax(config.gauge_max, true) : '');\n        }\n    };\n    c3_chart_internal_fn.initGauge = function () {\n        var arcs = this.arcs;\n        if (this.hasType('gauge')) {\n            arcs.append('g').attr(\"class\", CLASS.chartArcsBackground);\n            arcs.append(\"text\").attr(\"class\", CLASS.chartArcsGaugeUnit).style(\"text-anchor\", \"middle\").style(\"pointer-events\", \"none\");\n            arcs.append(\"text\").attr(\"class\", CLASS.chartArcsGaugeMin).style(\"text-anchor\", \"middle\").style(\"pointer-events\", \"none\");\n            arcs.append(\"text\").attr(\"class\", CLASS.chartArcsGaugeMax).style(\"text-anchor\", \"middle\").style(\"pointer-events\", \"none\");\n        }\n    };\n    c3_chart_internal_fn.getGaugeLabelHeight = function () {\n        return this.config.gauge_label_show ? 20 : 0;\n    };\n\n    c3_chart_internal_fn.hasCaches = function (ids) {\n        for (var i = 0; i < ids.length; i++) {\n            if (!(ids[i] in this.cache)) {\n                return false;\n            }\n        }\n        return true;\n    };\n    c3_chart_internal_fn.addCache = function (id, target) {\n        this.cache[id] = this.cloneTarget(target);\n    };\n    c3_chart_internal_fn.getCaches = function (ids) {\n        var targets = [],\n            i;\n        for (i = 0; i < ids.length; i++) {\n            if (ids[i] in this.cache) {\n                targets.push(this.cloneTarget(this.cache[ids[i]]));\n            }\n        }\n        return targets;\n    };\n\n    c3_chart_internal_fn.categoryName = function (i) {\n        var config = this.config;\n        return i < config.axis_x_categories.length ? config.axis_x_categories[i] : i;\n    };\n\n    c3_chart_internal_fn.generateTargetClass = function (targetId) {\n        return targetId || targetId === 0 ? ('-' + targetId).replace(/\\s/g, '-') : '';\n    };\n    c3_chart_internal_fn.generateClass = function (prefix, targetId) {\n        return \" \" + prefix + \" \" + prefix + this.generateTargetClass(targetId);\n    };\n    c3_chart_internal_fn.classText = function (d) {\n        return this.generateClass(CLASS.text, d.index);\n    };\n    c3_chart_internal_fn.classTexts = function (d) {\n        return this.generateClass(CLASS.texts, d.id);\n    };\n    c3_chart_internal_fn.classShape = function (d) {\n        return this.generateClass(CLASS.shape, d.index);\n    };\n    c3_chart_internal_fn.classShapes = function (d) {\n        return this.generateClass(CLASS.shapes, d.id);\n    };\n    c3_chart_internal_fn.classLine = function (d) {\n        return this.classShape(d) + this.generateClass(CLASS.line, d.id);\n    };\n    c3_chart_internal_fn.classLines = function (d) {\n        return this.classShapes(d) + this.generateClass(CLASS.lines, d.id);\n    };\n    c3_chart_internal_fn.classCircle = function (d) {\n        return this.classShape(d) + this.generateClass(CLASS.circle, d.index);\n    };\n    c3_chart_internal_fn.classCircles = function (d) {\n        return this.classShapes(d) + this.generateClass(CLASS.circles, d.id);\n    };\n    c3_chart_internal_fn.classBar = function (d) {\n        return this.classShape(d) + this.generateClass(CLASS.bar, d.index);\n    };\n    c3_chart_internal_fn.classBars = function (d) {\n        return this.classShapes(d) + this.generateClass(CLASS.bars, d.id);\n    };\n    c3_chart_internal_fn.classArc = function (d) {\n        return this.classShape(d.data) + this.generateClass(CLASS.arc, d.data.id);\n    };\n    c3_chart_internal_fn.classArcs = function (d) {\n        return this.classShapes(d.data) + this.generateClass(CLASS.arcs, d.data.id);\n    };\n    c3_chart_internal_fn.classArea = function (d) {\n        return this.classShape(d) + this.generateClass(CLASS.area, d.id);\n    };\n    c3_chart_internal_fn.classAreas = function (d) {\n        return this.classShapes(d) + this.generateClass(CLASS.areas, d.id);\n    };\n    c3_chart_internal_fn.classRegion = function (d, i) {\n        return this.generateClass(CLASS.region, i) + ' ' + ('class' in d ? d['class'] : '');\n    };\n    c3_chart_internal_fn.classEvent = function (d) {\n        return this.generateClass(CLASS.eventRect, d.index);\n    };\n    c3_chart_internal_fn.classTarget = function (id) {\n        var $$ = this;\n        var additionalClassSuffix = $$.config.data_classes[id],\n            additionalClass = '';\n        if (additionalClassSuffix) {\n            additionalClass = ' ' + CLASS.target + '-' + additionalClassSuffix;\n        }\n        return $$.generateClass(CLASS.target, id) + additionalClass;\n    };\n    c3_chart_internal_fn.classFocus = function (d) {\n        return this.classFocused(d) + this.classDefocused(d);\n    };\n    c3_chart_internal_fn.classFocused = function (d) {\n        return ' ' + (this.focusedTargetIds.indexOf(d.id) >= 0 ? CLASS.focused : '');\n    };\n    c3_chart_internal_fn.classDefocused = function (d) {\n        return ' ' + (this.defocusedTargetIds.indexOf(d.id) >= 0 ? CLASS.defocused : '');\n    };\n    c3_chart_internal_fn.classChartText = function (d) {\n        return CLASS.chartText + this.classTarget(d.id);\n    };\n    c3_chart_internal_fn.classChartLine = function (d) {\n        return CLASS.chartLine + this.classTarget(d.id);\n    };\n    c3_chart_internal_fn.classChartBar = function (d) {\n        return CLASS.chartBar + this.classTarget(d.id);\n    };\n    c3_chart_internal_fn.classChartArc = function (d) {\n        return CLASS.chartArc + this.classTarget(d.data.id);\n    };\n    c3_chart_internal_fn.getTargetSelectorSuffix = function (targetId) {\n        return this.generateTargetClass(targetId).replace(/([?!@#$%^&*()_=+,.<>'\":;\\[\\]\\/|~`{}\\\\])/g, '\\\\$1');\n    };\n    c3_chart_internal_fn.selectorTarget = function (id, prefix) {\n        return (prefix || '') + '.' + CLASS.target + this.getTargetSelectorSuffix(id);\n    };\n    c3_chart_internal_fn.selectorTargets = function (ids, prefix) {\n        var $$ = this;\n        ids = ids || [];\n        return ids.length ? ids.map(function (id) {\n            return $$.selectorTarget(id, prefix);\n        }) : null;\n    };\n    c3_chart_internal_fn.selectorLegend = function (id) {\n        return '.' + CLASS.legendItem + this.getTargetSelectorSuffix(id);\n    };\n    c3_chart_internal_fn.selectorLegends = function (ids) {\n        var $$ = this;\n        return ids && ids.length ? ids.map(function (id) {\n            return $$.selectorLegend(id);\n        }) : null;\n    };\n\n    c3_chart_internal_fn.getClipPath = function (id) {\n        var isIE9 = window.navigator.appVersion.toLowerCase().indexOf(\"msie 9.\") >= 0;\n        return \"url(\" + (isIE9 ? \"\" : document.URL.split('#')[0]) + \"#\" + id + \")\";\n    };\n    c3_chart_internal_fn.appendClip = function (parent, id) {\n        return parent.append(\"clipPath\").attr(\"id\", id).append(\"rect\");\n    };\n    c3_chart_internal_fn.getAxisClipX = function (forHorizontal) {\n        // axis line width + padding for left\n        var left = Math.max(30, this.margin.left);\n        return forHorizontal ? -(1 + left) : -(left - 1);\n    };\n    c3_chart_internal_fn.getAxisClipY = function (forHorizontal) {\n        return forHorizontal ? -20 : -this.margin.top;\n    };\n    c3_chart_internal_fn.getXAxisClipX = function () {\n        var $$ = this;\n        return $$.getAxisClipX(!$$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getXAxisClipY = function () {\n        var $$ = this;\n        return $$.getAxisClipY(!$$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getYAxisClipX = function () {\n        var $$ = this;\n        return $$.config.axis_y_inner ? -1 : $$.getAxisClipX($$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getYAxisClipY = function () {\n        var $$ = this;\n        return $$.getAxisClipY($$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getAxisClipWidth = function (forHorizontal) {\n        var $$ = this,\n            left = Math.max(30, $$.margin.left),\n            right = Math.max(30, $$.margin.right);\n        // width + axis line width + padding for left/right\n        return forHorizontal ? $$.width + 2 + left + right : $$.margin.left + 20;\n    };\n    c3_chart_internal_fn.getAxisClipHeight = function (forHorizontal) {\n        // less than 20 is not enough to show the axis label 'outer' without legend\n        return (forHorizontal ? this.margin.bottom : this.margin.top + this.height) + 20;\n    };\n    c3_chart_internal_fn.getXAxisClipWidth = function () {\n        var $$ = this;\n        return $$.getAxisClipWidth(!$$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getXAxisClipHeight = function () {\n        var $$ = this;\n        return $$.getAxisClipHeight(!$$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getYAxisClipWidth = function () {\n        var $$ = this;\n        return $$.getAxisClipWidth($$.config.axis_rotated) + ($$.config.axis_y_inner ? 20 : 0);\n    };\n    c3_chart_internal_fn.getYAxisClipHeight = function () {\n        var $$ = this;\n        return $$.getAxisClipHeight($$.config.axis_rotated);\n    };\n\n    c3_chart_internal_fn.generateColor = function () {\n        var $$ = this,\n            config = $$.config,\n            d3 = $$.d3,\n            colors = config.data_colors,\n            pattern = notEmpty(config.color_pattern) ? config.color_pattern : d3.schemeCategory10,\n            callback = config.data_color,\n            ids = [];\n\n        return function (d) {\n            var id = d.id || d.data && d.data.id || d,\n                color;\n\n            // if callback function is provided\n            if (colors[id] instanceof Function) {\n                color = colors[id](d);\n            }\n            // if specified, choose that color\n            else if (colors[id]) {\n                    color = colors[id];\n                }\n                // if not specified, choose from pattern\n                else {\n                        if (ids.indexOf(id) < 0) {\n                            ids.push(id);\n                        }\n                        color = pattern[ids.indexOf(id) % pattern.length];\n                        colors[id] = color;\n                    }\n            return callback instanceof Function ? callback(color, d) : color;\n        };\n    };\n    c3_chart_internal_fn.generateLevelColor = function () {\n        var $$ = this,\n            config = $$.config,\n            colors = config.color_pattern,\n            threshold = config.color_threshold,\n            asValue = threshold.unit === 'value',\n            values = threshold.values && threshold.values.length ? threshold.values : [],\n            max = threshold.max || 100;\n        return notEmpty(config.color_threshold) ? function (value) {\n            var i,\n                v,\n                color = colors[colors.length - 1];\n            for (i = 0; i < values.length; i++) {\n                v = asValue ? value : value * 100 / max;\n                if (v < values[i]) {\n                    color = colors[i];\n                    break;\n                }\n            }\n            return color;\n        } : null;\n    };\n\n    c3_chart_internal_fn.getDefaultConfig = function () {\n        var config = {\n            bindto: '#chart',\n            svg_classname: undefined,\n            size_width: undefined,\n            size_height: undefined,\n            padding_left: undefined,\n            padding_right: undefined,\n            padding_top: undefined,\n            padding_bottom: undefined,\n            resize_auto: true,\n            zoom_enabled: false,\n            zoom_initialRange: undefined,\n            zoom_privileged: false,\n            zoom_rescale: false,\n            zoom_onzoom: function zoom_onzoom() {},\n            zoom_onzoomstart: function zoom_onzoomstart() {},\n            zoom_onzoomend: function zoom_onzoomend() {},\n            zoom_x_min: undefined,\n            zoom_x_max: undefined,\n            interaction_brighten: true,\n            interaction_enabled: true,\n            onmouseover: function onmouseover() {},\n            onmouseout: function onmouseout() {},\n            onresize: function onresize() {},\n            onresized: function onresized() {},\n            oninit: function oninit() {},\n            onrendered: function onrendered() {},\n            transition_duration: 350,\n            data_x: undefined,\n            data_xs: {},\n            data_xFormat: '%Y-%m-%d',\n            data_xLocaltime: true,\n            data_xSort: true,\n            data_idConverter: function data_idConverter(id) {\n                return id;\n            },\n            data_names: {},\n            data_classes: {},\n            data_groups: [],\n            data_axes: {},\n            data_type: undefined,\n            data_types: {},\n            data_labels: {},\n            data_order: 'desc',\n            data_regions: {},\n            data_color: undefined,\n            data_colors: {},\n            data_hide: false,\n            data_filter: undefined,\n            data_selection_enabled: false,\n            data_selection_grouped: false,\n            data_selection_isselectable: function data_selection_isselectable() {\n                return true;\n            },\n            data_selection_multiple: true,\n            data_selection_draggable: false,\n            data_onclick: function data_onclick() {},\n            data_onmouseover: function data_onmouseover() {},\n            data_onmouseout: function data_onmouseout() {},\n            data_onselected: function data_onselected() {},\n            data_onunselected: function data_onunselected() {},\n            data_url: undefined,\n            data_headers: undefined,\n            data_json: undefined,\n            data_rows: undefined,\n            data_columns: undefined,\n            data_mimeType: undefined,\n            data_keys: undefined,\n            // configuration for no plot-able data supplied.\n            data_empty_label_text: \"\",\n            // subchart\n            subchart_show: false,\n            subchart_size_height: 60,\n            subchart_axis_x_show: true,\n            subchart_onbrush: function subchart_onbrush() {},\n            // color\n            color_pattern: [],\n            color_threshold: {},\n            // legend\n            legend_show: true,\n            legend_hide: false,\n            legend_position: 'bottom',\n            legend_inset_anchor: 'top-left',\n            legend_inset_x: 10,\n            legend_inset_y: 0,\n            legend_inset_step: undefined,\n            legend_item_onclick: undefined,\n            legend_item_onmouseover: undefined,\n            legend_item_onmouseout: undefined,\n            legend_equally: false,\n            legend_padding: 0,\n            legend_item_tile_width: 10,\n            legend_item_tile_height: 10,\n            // axis\n            axis_rotated: false,\n            axis_x_show: true,\n            axis_x_type: 'indexed',\n            axis_x_localtime: true,\n            axis_x_categories: [],\n            axis_x_tick_centered: false,\n            axis_x_tick_format: undefined,\n            axis_x_tick_culling: {},\n            axis_x_tick_culling_max: 10,\n            axis_x_tick_count: undefined,\n            axis_x_tick_fit: true,\n            axis_x_tick_values: null,\n            axis_x_tick_rotate: 0,\n            axis_x_tick_outer: true,\n            axis_x_tick_multiline: true,\n            axis_x_tick_multilineMax: 0,\n            axis_x_tick_width: null,\n            axis_x_max: undefined,\n            axis_x_min: undefined,\n            axis_x_padding: {},\n            axis_x_height: undefined,\n            axis_x_selection: undefined,\n            axis_x_label: {},\n            axis_x_inner: undefined,\n            axis_y_show: true,\n            axis_y_type: undefined,\n            axis_y_max: undefined,\n            axis_y_min: undefined,\n            axis_y_inverted: false,\n            axis_y_center: undefined,\n            axis_y_inner: undefined,\n            axis_y_label: {},\n            axis_y_tick_format: undefined,\n            axis_y_tick_outer: true,\n            axis_y_tick_values: null,\n            axis_y_tick_rotate: 0,\n            axis_y_tick_count: undefined,\n            axis_y_tick_time_type: undefined,\n            axis_y_tick_time_interval: undefined,\n            axis_y_padding: {},\n            axis_y_default: undefined,\n            axis_y2_show: false,\n            axis_y2_max: undefined,\n            axis_y2_min: undefined,\n            axis_y2_inverted: false,\n            axis_y2_center: undefined,\n            axis_y2_inner: undefined,\n            axis_y2_label: {},\n            axis_y2_tick_format: undefined,\n            axis_y2_tick_outer: true,\n            axis_y2_tick_values: null,\n            axis_y2_tick_count: undefined,\n            axis_y2_padding: {},\n            axis_y2_default: undefined,\n            // grid\n            grid_x_show: false,\n            grid_x_type: 'tick',\n            grid_x_lines: [],\n            grid_y_show: false,\n            // not used\n            // grid_y_type: 'tick',\n            grid_y_lines: [],\n            grid_y_ticks: 10,\n            grid_focus_show: true,\n            grid_lines_front: true,\n            // point - point of each data\n            point_show: true,\n            point_r: 2.5,\n            point_sensitivity: 10,\n            point_focus_expand_enabled: true,\n            point_focus_expand_r: undefined,\n            point_select_r: undefined,\n            // line\n            line_connectNull: false,\n            line_step_type: 'step',\n            // bar\n            bar_width: undefined,\n            bar_width_ratio: 0.6,\n            bar_width_max: undefined,\n            bar_zerobased: true,\n            bar_space: 0,\n            // area\n            area_zerobased: true,\n            area_above: false,\n            // pie\n            pie_label_show: true,\n            pie_label_format: undefined,\n            pie_label_threshold: 0.05,\n            pie_label_ratio: undefined,\n            pie_expand: {},\n            pie_expand_duration: 50,\n            // gauge\n            gauge_fullCircle: false,\n            gauge_label_show: true,\n            gauge_labelLine_show: true,\n            gauge_label_format: undefined,\n            gauge_min: 0,\n            gauge_max: 100,\n            gauge_startingAngle: -1 * Math.PI / 2,\n            gauge_label_extents: undefined,\n            gauge_units: undefined,\n            gauge_width: undefined,\n            gauge_arcs_minWidth: 5,\n            gauge_expand: {},\n            gauge_expand_duration: 50,\n            // donut\n            donut_label_show: true,\n            donut_label_format: undefined,\n            donut_label_threshold: 0.05,\n            donut_label_ratio: undefined,\n            donut_width: undefined,\n            donut_title: \"\",\n            donut_expand: {},\n            donut_expand_duration: 50,\n            // spline\n            spline_interpolation_type: 'cardinal',\n            // region - region to change style\n            regions: [],\n            // tooltip - show when mouseover on each data\n            tooltip_show: true,\n            tooltip_grouped: true,\n            tooltip_order: undefined,\n            tooltip_format_title: undefined,\n            tooltip_format_name: undefined,\n            tooltip_format_value: undefined,\n            tooltip_position: undefined,\n            tooltip_contents: function tooltip_contents(d, defaultTitleFormat, defaultValueFormat, color) {\n                return this.getTooltipContent ? this.getTooltipContent(d, defaultTitleFormat, defaultValueFormat, color) : '';\n            },\n            tooltip_init_show: false,\n            tooltip_init_x: 0,\n            tooltip_init_position: { top: '0px', left: '50px' },\n            tooltip_onshow: function tooltip_onshow() {},\n            tooltip_onhide: function tooltip_onhide() {},\n            // title\n            title_text: undefined,\n            title_padding: {\n                top: 0,\n                right: 0,\n                bottom: 0,\n                left: 0\n            },\n            title_position: 'top-center'\n        };\n\n        Object.keys(this.additionalConfig).forEach(function (key) {\n            config[key] = this.additionalConfig[key];\n        }, this);\n\n        return config;\n    };\n    c3_chart_internal_fn.additionalConfig = {};\n\n    c3_chart_internal_fn.loadConfig = function (config) {\n        var this_config = this.config,\n            target,\n            keys,\n            read;\n        function find() {\n            var key = keys.shift();\n            //        console.log(\"key =>\", key, \", target =>\", target);\n            if (key && target && (typeof target === 'undefined' ? 'undefined' : _typeof(target)) === 'object' && key in target) {\n                target = target[key];\n                return find();\n            } else if (!key) {\n                return target;\n            } else {\n                return undefined;\n            }\n        }\n        Object.keys(this_config).forEach(function (key) {\n            target = config;\n            keys = key.split('_');\n            read = find();\n            //        console.log(\"CONFIG : \", key, read);\n            if (isDefined(read)) {\n                this_config[key] = read;\n            }\n        });\n    };\n\n    c3_chart_internal_fn.convertUrlToData = function (url, mimeType, headers, keys, done) {\n        var $$ = this,\n            type = mimeType ? mimeType : 'csv',\n            f,\n            converter;\n\n        if (type === 'json') {\n            f = $$.d3.json;\n            converter = $$.convertJsonToData;\n        } else if (type === 'tsv') {\n            f = $$.d3.tsv;\n            converter = $$.convertXsvToData;\n        } else {\n            f = $$.d3.csv;\n            converter = $$.convertXsvToData;\n        }\n\n        f(url, headers).then(function (data) {\n            done.call($$, converter.call($$, data, keys));\n        }).catch(function (error) {\n            throw error;\n        });\n    };\n    c3_chart_internal_fn.convertXsvToData = function (xsv) {\n        var keys = xsv.columns,\n            rows = xsv;\n        if (rows.length === 0) {\n            return { keys: keys, rows: [keys.reduce(function (row, key) {\n                    return Object.assign(row, defineProperty({}, key, null));\n                }, {})] };\n        } else {\n            // [].concat() is to convert result into a plain array otherwise\n            // test is not happy because rows have properties.\n            return { keys: keys, rows: [].concat(xsv) };\n        }\n    };\n    c3_chart_internal_fn.convertJsonToData = function (json, keys) {\n        var $$ = this,\n            new_rows = [],\n            targetKeys,\n            data;\n        if (keys) {\n            // when keys specified, json would be an array that includes objects\n            if (keys.x) {\n                targetKeys = keys.value.concat(keys.x);\n                $$.config.data_x = keys.x;\n            } else {\n                targetKeys = keys.value;\n            }\n            new_rows.push(targetKeys);\n            json.forEach(function (o) {\n                var new_row = [];\n                targetKeys.forEach(function (key) {\n                    // convert undefined to null because undefined data will be removed in convertDataToTargets()\n                    var v = $$.findValueInJson(o, key);\n                    if (isUndefined(v)) {\n                        v = null;\n                    }\n                    new_row.push(v);\n                });\n                new_rows.push(new_row);\n            });\n            data = $$.convertRowsToData(new_rows);\n        } else {\n            Object.keys(json).forEach(function (key) {\n                new_rows.push([key].concat(json[key]));\n            });\n            data = $$.convertColumnsToData(new_rows);\n        }\n        return data;\n    };\n    c3_chart_internal_fn.findValueInJson = function (object, path) {\n        path = path.replace(/\\[(\\w+)\\]/g, '.$1'); // convert indexes to properties (replace [] with .)\n        path = path.replace(/^\\./, ''); // strip a leading dot\n        var pathArray = path.split('.');\n        for (var i = 0; i < pathArray.length; ++i) {\n            var k = pathArray[i];\n            if (k in object) {\n                object = object[k];\n            } else {\n                return;\n            }\n        }\n        return object;\n    };\n\n    /**\n     * Converts the rows to normalized data.\n     * @param {any[][]} rows The row data\n     * @return {Object}\n     */\n    c3_chart_internal_fn.convertRowsToData = function (rows) {\n        var newRows = [];\n        var keys = rows[0];\n\n        for (var i = 1; i < rows.length; i++) {\n            var newRow = {};\n            for (var j = 0; j < rows[i].length; j++) {\n                if (isUndefined(rows[i][j])) {\n                    throw new Error(\"Source data is missing a component at (\" + i + \",\" + j + \")!\");\n                }\n                newRow[keys[j]] = rows[i][j];\n            }\n            newRows.push(newRow);\n        }\n        return { keys: keys, rows: newRows };\n    };\n\n    /**\n     * Converts the columns to normalized data.\n     * @param {any[][]} columns The column data\n     * @return {Object}\n     */\n    c3_chart_internal_fn.convertColumnsToData = function (columns) {\n        var newRows = [];\n        var keys = [];\n\n        for (var i = 0; i < columns.length; i++) {\n            var key = columns[i][0];\n            for (var j = 1; j < columns[i].length; j++) {\n                if (isUndefined(newRows[j - 1])) {\n                    newRows[j - 1] = {};\n                }\n                if (isUndefined(columns[i][j])) {\n                    throw new Error(\"Source data is missing a component at (\" + i + \",\" + j + \")!\");\n                }\n                newRows[j - 1][key] = columns[i][j];\n            }\n            keys.push(key);\n        }\n\n        return { keys: keys, rows: newRows };\n    };\n\n    /**\n     * Converts the data format into the target format.\n     * @param {!Object} data\n     * @param {!Array} data.keys Ordered list of target IDs.\n     * @param {!Array} data.rows Rows of data to convert.\n     * @param {boolean} appendXs True to append to $$.data.xs, False to replace.\n     * @return {!Array}\n     */\n    c3_chart_internal_fn.convertDataToTargets = function (data, appendXs) {\n        var $$ = this,\n            config = $$.config,\n            targets,\n            ids,\n            xs,\n            keys;\n\n        // handles format where keys are not orderly provided\n        if (isArray(data)) {\n            keys = Object.keys(data[0]);\n        } else {\n            keys = data.keys;\n            data = data.rows;\n        }\n\n        ids = keys.filter($$.isNotX, $$);\n        xs = keys.filter($$.isX, $$);\n\n        // save x for update data by load when custom x and c3.x API\n        ids.forEach(function (id) {\n            var xKey = $$.getXKey(id);\n\n            if ($$.isCustomX() || $$.isTimeSeries()) {\n                // if included in input data\n                if (xs.indexOf(xKey) >= 0) {\n                    $$.data.xs[id] = (appendXs && $$.data.xs[id] ? $$.data.xs[id] : []).concat(data.map(function (d) {\n                        return d[xKey];\n                    }).filter(isValue).map(function (rawX, i) {\n                        return $$.generateTargetX(rawX, id, i);\n                    }));\n                }\n                // if not included in input data, find from preloaded data of other id's x\n                else if (config.data_x) {\n                        $$.data.xs[id] = $$.getOtherTargetXs();\n                    }\n                    // if not included in input data, find from preloaded data\n                    else if (notEmpty(config.data_xs)) {\n                            $$.data.xs[id] = $$.getXValuesOfXKey(xKey, $$.data.targets);\n                        }\n                // MEMO: if no x included, use same x of current will be used\n            } else {\n                $$.data.xs[id] = data.map(function (d, i) {\n                    return i;\n                });\n            }\n        });\n\n        // check x is defined\n        ids.forEach(function (id) {\n            if (!$$.data.xs[id]) {\n                throw new Error('x is not defined for id = \"' + id + '\".');\n            }\n        });\n\n        // convert to target\n        targets = ids.map(function (id, index) {\n            var convertedId = config.data_idConverter(id);\n            return {\n                id: convertedId,\n                id_org: id,\n                values: data.map(function (d, i) {\n                    var xKey = $$.getXKey(id),\n                        rawX = d[xKey],\n                        value = d[id] !== null && !isNaN(d[id]) ? +d[id] : null,\n                        x;\n                    // use x as categories if custom x and categorized\n                    if ($$.isCustomX() && $$.isCategorized() && !isUndefined(rawX)) {\n                        if (index === 0 && i === 0) {\n                            config.axis_x_categories = [];\n                        }\n                        x = config.axis_x_categories.indexOf(rawX);\n                        if (x === -1) {\n                            x = config.axis_x_categories.length;\n                            config.axis_x_categories.push(rawX);\n                        }\n                    } else {\n                        x = $$.generateTargetX(rawX, id, i);\n                    }\n                    // mark as x = undefined if value is undefined and filter to remove after mapped\n                    if (isUndefined(d[id]) || $$.data.xs[id].length <= i) {\n                        x = undefined;\n                    }\n                    return { x: x, value: value, id: convertedId };\n                }).filter(function (v) {\n                    return isDefined(v.x);\n                })\n            };\n        });\n\n        // finish targets\n        targets.forEach(function (t) {\n            var i;\n            // sort values by its x\n            if (config.data_xSort) {\n                t.values = t.values.sort(function (v1, v2) {\n                    var x1 = v1.x || v1.x === 0 ? v1.x : Infinity,\n                        x2 = v2.x || v2.x === 0 ? v2.x : Infinity;\n                    return x1 - x2;\n                });\n            }\n            // indexing each value\n            i = 0;\n            t.values.forEach(function (v) {\n                v.index = i++;\n            });\n            // this needs to be sorted because its index and value.index is identical\n            $$.data.xs[t.id].sort(function (v1, v2) {\n                return v1 - v2;\n            });\n        });\n\n        // cache information about values\n        $$.hasNegativeValue = $$.hasNegativeValueInTargets(targets);\n        $$.hasPositiveValue = $$.hasPositiveValueInTargets(targets);\n\n        // set target types\n        if (config.data_type) {\n            $$.setTargetType($$.mapToIds(targets).filter(function (id) {\n                return !(id in config.data_types);\n            }), config.data_type);\n        }\n\n        // cache as original id keyed\n        targets.forEach(function (d) {\n            $$.addCache(d.id_org, d);\n        });\n\n        return targets;\n    };\n\n    c3_chart_internal_fn.isX = function (key) {\n        var $$ = this,\n            config = $$.config;\n        return config.data_x && key === config.data_x || notEmpty(config.data_xs) && hasValue(config.data_xs, key);\n    };\n    c3_chart_internal_fn.isNotX = function (key) {\n        return !this.isX(key);\n    };\n    c3_chart_internal_fn.getXKey = function (id) {\n        var $$ = this,\n            config = $$.config;\n        return config.data_x ? config.data_x : notEmpty(config.data_xs) ? config.data_xs[id] : null;\n    };\n    c3_chart_internal_fn.getXValuesOfXKey = function (key, targets) {\n        var $$ = this,\n            xValues,\n            ids = targets && notEmpty(targets) ? $$.mapToIds(targets) : [];\n        ids.forEach(function (id) {\n            if ($$.getXKey(id) === key) {\n                xValues = $$.data.xs[id];\n            }\n        });\n        return xValues;\n    };\n    c3_chart_internal_fn.getXValue = function (id, i) {\n        var $$ = this;\n        return id in $$.data.xs && $$.data.xs[id] && isValue($$.data.xs[id][i]) ? $$.data.xs[id][i] : i;\n    };\n    c3_chart_internal_fn.getOtherTargetXs = function () {\n        var $$ = this,\n            idsForX = Object.keys($$.data.xs);\n        return idsForX.length ? $$.data.xs[idsForX[0]] : null;\n    };\n    c3_chart_internal_fn.getOtherTargetX = function (index) {\n        var xs = this.getOtherTargetXs();\n        return xs && index < xs.length ? xs[index] : null;\n    };\n    c3_chart_internal_fn.addXs = function (xs) {\n        var $$ = this;\n        Object.keys(xs).forEach(function (id) {\n            $$.config.data_xs[id] = xs[id];\n        });\n    };\n    c3_chart_internal_fn.addName = function (data) {\n        var $$ = this,\n            name;\n        if (data) {\n            name = $$.config.data_names[data.id];\n            data.name = name !== undefined ? name : data.id;\n        }\n        return data;\n    };\n    c3_chart_internal_fn.getValueOnIndex = function (values, index) {\n        var valueOnIndex = values.filter(function (v) {\n            return v.index === index;\n        });\n        return valueOnIndex.length ? valueOnIndex[0] : null;\n    };\n    c3_chart_internal_fn.updateTargetX = function (targets, x) {\n        var $$ = this;\n        targets.forEach(function (t) {\n            t.values.forEach(function (v, i) {\n                v.x = $$.generateTargetX(x[i], t.id, i);\n            });\n            $$.data.xs[t.id] = x;\n        });\n    };\n    c3_chart_internal_fn.updateTargetXs = function (targets, xs) {\n        var $$ = this;\n        targets.forEach(function (t) {\n            if (xs[t.id]) {\n                $$.updateTargetX([t], xs[t.id]);\n            }\n        });\n    };\n    c3_chart_internal_fn.generateTargetX = function (rawX, id, index) {\n        var $$ = this,\n            x;\n        if ($$.isTimeSeries()) {\n            x = rawX ? $$.parseDate(rawX) : $$.parseDate($$.getXValue(id, index));\n        } else if ($$.isCustomX() && !$$.isCategorized()) {\n            x = isValue(rawX) ? +rawX : $$.getXValue(id, index);\n        } else {\n            x = index;\n        }\n        return x;\n    };\n    c3_chart_internal_fn.cloneTarget = function (target) {\n        return {\n            id: target.id,\n            id_org: target.id_org,\n            values: target.values.map(function (d) {\n                return { x: d.x, value: d.value, id: d.id };\n            })\n        };\n    };\n    c3_chart_internal_fn.getMaxDataCount = function () {\n        var $$ = this;\n        return $$.d3.max($$.data.targets, function (t) {\n            return t.values.length;\n        });\n    };\n    c3_chart_internal_fn.mapToIds = function (targets) {\n        return targets.map(function (d) {\n            return d.id;\n        });\n    };\n    c3_chart_internal_fn.mapToTargetIds = function (ids) {\n        var $$ = this;\n        return ids ? [].concat(ids) : $$.mapToIds($$.data.targets);\n    };\n    c3_chart_internal_fn.hasTarget = function (targets, id) {\n        var ids = this.mapToIds(targets),\n            i;\n        for (i = 0; i < ids.length; i++) {\n            if (ids[i] === id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    c3_chart_internal_fn.isTargetToShow = function (targetId) {\n        return this.hiddenTargetIds.indexOf(targetId) < 0;\n    };\n    c3_chart_internal_fn.isLegendToShow = function (targetId) {\n        return this.hiddenLegendIds.indexOf(targetId) < 0;\n    };\n    c3_chart_internal_fn.filterTargetsToShow = function (targets) {\n        var $$ = this;\n        return targets.filter(function (t) {\n            return $$.isTargetToShow(t.id);\n        });\n    };\n    c3_chart_internal_fn.mapTargetsToUniqueXs = function (targets) {\n        var $$ = this;\n        var xs = $$.d3.set($$.d3.merge(targets.map(function (t) {\n            return t.values.map(function (v) {\n                return +v.x;\n            });\n        }))).values();\n        xs = $$.isTimeSeries() ? xs.map(function (x) {\n            return new Date(+x);\n        }) : xs.map(function (x) {\n            return +x;\n        });\n        return xs.sort(function (a, b) {\n            return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n        });\n    };\n    c3_chart_internal_fn.addHiddenTargetIds = function (targetIds) {\n        targetIds = targetIds instanceof Array ? targetIds : new Array(targetIds);\n        for (var i = 0; i < targetIds.length; i++) {\n            if (this.hiddenTargetIds.indexOf(targetIds[i]) < 0) {\n                this.hiddenTargetIds = this.hiddenTargetIds.concat(targetIds[i]);\n            }\n        }\n    };\n    c3_chart_internal_fn.removeHiddenTargetIds = function (targetIds) {\n        this.hiddenTargetIds = this.hiddenTargetIds.filter(function (id) {\n            return targetIds.indexOf(id) < 0;\n        });\n    };\n    c3_chart_internal_fn.addHiddenLegendIds = function (targetIds) {\n        targetIds = targetIds instanceof Array ? targetIds : new Array(targetIds);\n        for (var i = 0; i < targetIds.length; i++) {\n            if (this.hiddenLegendIds.indexOf(targetIds[i]) < 0) {\n                this.hiddenLegendIds = this.hiddenLegendIds.concat(targetIds[i]);\n            }\n        }\n    };\n    c3_chart_internal_fn.removeHiddenLegendIds = function (targetIds) {\n        this.hiddenLegendIds = this.hiddenLegendIds.filter(function (id) {\n            return targetIds.indexOf(id) < 0;\n        });\n    };\n    c3_chart_internal_fn.getValuesAsIdKeyed = function (targets) {\n        var ys = {};\n        targets.forEach(function (t) {\n            ys[t.id] = [];\n            t.values.forEach(function (v) {\n                ys[t.id].push(v.value);\n            });\n        });\n        return ys;\n    };\n    c3_chart_internal_fn.checkValueInTargets = function (targets, checker) {\n        var ids = Object.keys(targets),\n            i,\n            j,\n            values;\n        for (i = 0; i < ids.length; i++) {\n            values = targets[ids[i]].values;\n            for (j = 0; j < values.length; j++) {\n                if (checker(values[j].value)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    c3_chart_internal_fn.hasNegativeValueInTargets = function (targets) {\n        return this.checkValueInTargets(targets, function (v) {\n            return v < 0;\n        });\n    };\n    c3_chart_internal_fn.hasPositiveValueInTargets = function (targets) {\n        return this.checkValueInTargets(targets, function (v) {\n            return v > 0;\n        });\n    };\n    c3_chart_internal_fn.isOrderDesc = function () {\n        var config = this.config;\n        return typeof config.data_order === 'string' && config.data_order.toLowerCase() === 'desc';\n    };\n    c3_chart_internal_fn.isOrderAsc = function () {\n        var config = this.config;\n        return typeof config.data_order === 'string' && config.data_order.toLowerCase() === 'asc';\n    };\n    c3_chart_internal_fn.getOrderFunction = function () {\n        var $$ = this,\n            config = $$.config,\n            orderAsc = $$.isOrderAsc(),\n            orderDesc = $$.isOrderDesc();\n        if (orderAsc || orderDesc) {\n            var reducer = function reducer(p, c) {\n                return p + Math.abs(c.value);\n            };\n            return function (t1, t2) {\n                var t1Sum = t1.values.reduce(reducer, 0),\n                    t2Sum = t2.values.reduce(reducer, 0);\n                return orderAsc ? t2Sum - t1Sum : t1Sum - t2Sum;\n            };\n        } else if (isFunction(config.data_order)) {\n            return config.data_order;\n        } else if (isArray(config.data_order)) {\n            var order = config.data_order;\n            return function (t1, t2) {\n                return order.indexOf(t1.id) - order.indexOf(t2.id);\n            };\n        }\n    };\n    c3_chart_internal_fn.orderTargets = function (targets) {\n        var fct = this.getOrderFunction();\n        if (fct) {\n            targets.sort(fct);\n        }\n        return targets;\n    };\n    c3_chart_internal_fn.filterByX = function (targets, x) {\n        return this.d3.merge(targets.map(function (t) {\n            return t.values;\n        })).filter(function (v) {\n            return v.x - x === 0;\n        });\n    };\n    c3_chart_internal_fn.filterRemoveNull = function (data) {\n        return data.filter(function (d) {\n            return isValue(d.value);\n        });\n    };\n    c3_chart_internal_fn.filterByXDomain = function (targets, xDomain) {\n        return targets.map(function (t) {\n            return {\n                id: t.id,\n                id_org: t.id_org,\n                values: t.values.filter(function (v) {\n                    return xDomain[0] <= v.x && v.x <= xDomain[1];\n                })\n            };\n        });\n    };\n    c3_chart_internal_fn.hasDataLabel = function () {\n        var config = this.config;\n        if (typeof config.data_labels === 'boolean' && config.data_labels) {\n            return true;\n        } else if (_typeof(config.data_labels) === 'object' && notEmpty(config.data_labels)) {\n            return true;\n        }\n        return false;\n    };\n    c3_chart_internal_fn.getDataLabelLength = function (min, max, key) {\n        var $$ = this,\n            lengths = [0, 0],\n            paddingCoef = 1.3;\n        $$.selectChart.select('svg').selectAll('.dummy').data([min, max]).enter().append('text').text(function (d) {\n            return $$.dataLabelFormat(d.id)(d);\n        }).each(function (d, i) {\n            lengths[i] = this.getBoundingClientRect()[key] * paddingCoef;\n        }).remove();\n        return lengths;\n    };\n    c3_chart_internal_fn.isNoneArc = function (d) {\n        return this.hasTarget(this.data.targets, d.id);\n    }, c3_chart_internal_fn.isArc = function (d) {\n        return 'data' in d && this.hasTarget(this.data.targets, d.data.id);\n    };\n    c3_chart_internal_fn.findClosestFromTargets = function (targets, pos) {\n        var $$ = this,\n            candidates;\n\n        // map to array of closest points of each target\n        candidates = targets.map(function (target) {\n            return $$.findClosest(target.values, pos);\n        });\n\n        // decide closest point and return\n        return $$.findClosest(candidates, pos);\n    };\n    c3_chart_internal_fn.findClosest = function (values, pos) {\n        var $$ = this,\n            minDist = $$.config.point_sensitivity,\n            closest;\n\n        // find mouseovering bar\n        values.filter(function (v) {\n            return v && $$.isBarType(v.id);\n        }).forEach(function (v) {\n            var shape = $$.main.select('.' + CLASS.bars + $$.getTargetSelectorSuffix(v.id) + ' .' + CLASS.bar + '-' + v.index).node();\n            if (!closest && $$.isWithinBar($$.d3.mouse(shape), shape)) {\n                closest = v;\n            }\n        });\n\n        // find closest point from non-bar\n        values.filter(function (v) {\n            return v && !$$.isBarType(v.id);\n        }).forEach(function (v) {\n            var d = $$.dist(v, pos);\n            if (d < minDist) {\n                minDist = d;\n                closest = v;\n            }\n        });\n\n        return closest;\n    };\n    c3_chart_internal_fn.dist = function (data, pos) {\n        var $$ = this,\n            config = $$.config,\n            xIndex = config.axis_rotated ? 1 : 0,\n            yIndex = config.axis_rotated ? 0 : 1,\n            y = $$.circleY(data, data.index),\n            x = $$.x(data.x);\n        return Math.sqrt(Math.pow(x - pos[xIndex], 2) + Math.pow(y - pos[yIndex], 2));\n    };\n    c3_chart_internal_fn.convertValuesToStep = function (values) {\n        var converted = [].concat(values),\n            i;\n\n        if (!this.isCategorized()) {\n            return values;\n        }\n\n        for (i = values.length + 1; 0 < i; i--) {\n            converted[i] = converted[i - 1];\n        }\n\n        converted[0] = {\n            x: converted[0].x - 1,\n            value: converted[0].value,\n            id: converted[0].id\n        };\n        converted[values.length + 1] = {\n            x: converted[values.length].x + 1,\n            value: converted[values.length].value,\n            id: converted[values.length].id\n        };\n\n        return converted;\n    };\n    c3_chart_internal_fn.updateDataAttributes = function (name, attrs) {\n        var $$ = this,\n            config = $$.config,\n            current = config['data_' + name];\n        if (typeof attrs === 'undefined') {\n            return current;\n        }\n        Object.keys(attrs).forEach(function (id) {\n            current[id] = attrs[id];\n        });\n        $$.redraw({ withLegend: true });\n        return current;\n    };\n\n    c3_chart_internal_fn.load = function (targets, args) {\n        var $$ = this;\n        if (targets) {\n            // filter loading targets if needed\n            if (args.filter) {\n                targets = targets.filter(args.filter);\n            }\n            // set type if args.types || args.type specified\n            if (args.type || args.types) {\n                targets.forEach(function (t) {\n                    var type = args.types && args.types[t.id] ? args.types[t.id] : args.type;\n                    $$.setTargetType(t.id, type);\n                });\n            }\n            // Update/Add data\n            $$.data.targets.forEach(function (d) {\n                for (var i = 0; i < targets.length; i++) {\n                    if (d.id === targets[i].id) {\n                        d.values = targets[i].values;\n                        targets.splice(i, 1);\n                        break;\n                    }\n                }\n            });\n            $$.data.targets = $$.data.targets.concat(targets); // add remained\n        }\n\n        // Set targets\n        $$.updateTargets($$.data.targets);\n\n        // Redraw with new targets\n        $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true });\n\n        if (args.done) {\n            args.done();\n        }\n    };\n    c3_chart_internal_fn.loadFromArgs = function (args) {\n        var $$ = this;\n        if (args.data) {\n            $$.load($$.convertDataToTargets(args.data), args);\n        } else if (args.url) {\n            $$.convertUrlToData(args.url, args.mimeType, args.headers, args.keys, function (data) {\n                $$.load($$.convertDataToTargets(data), args);\n            });\n        } else if (args.json) {\n            $$.load($$.convertDataToTargets($$.convertJsonToData(args.json, args.keys)), args);\n        } else if (args.rows) {\n            $$.load($$.convertDataToTargets($$.convertRowsToData(args.rows)), args);\n        } else if (args.columns) {\n            $$.load($$.convertDataToTargets($$.convertColumnsToData(args.columns)), args);\n        } else {\n            $$.load(null, args);\n        }\n    };\n    c3_chart_internal_fn.unload = function (targetIds, done) {\n        var $$ = this;\n        if (!done) {\n            done = function done() {};\n        }\n        // filter existing target\n        targetIds = targetIds.filter(function (id) {\n            return $$.hasTarget($$.data.targets, id);\n        });\n        // If no target, call done and return\n        if (!targetIds || targetIds.length === 0) {\n            done();\n            return;\n        }\n        $$.svg.selectAll(targetIds.map(function (id) {\n            return $$.selectorTarget(id);\n        })).transition().style('opacity', 0).remove().call($$.endall, done);\n        targetIds.forEach(function (id) {\n            // Reset fadein for future load\n            $$.withoutFadeIn[id] = false;\n            // Remove target's elements\n            if ($$.legend) {\n                $$.legend.selectAll('.' + CLASS.legendItem + $$.getTargetSelectorSuffix(id)).remove();\n            }\n            // Remove target\n            $$.data.targets = $$.data.targets.filter(function (t) {\n                return t.id !== id;\n            });\n        });\n    };\n\n    c3_chart_internal_fn.getYDomainMin = function (targets) {\n        var $$ = this,\n            config = $$.config,\n            ids = $$.mapToIds(targets),\n            ys = $$.getValuesAsIdKeyed(targets),\n            j,\n            k,\n            baseId,\n            idsInGroup,\n            id,\n            hasNegativeValue;\n        if (config.data_groups.length > 0) {\n            hasNegativeValue = $$.hasNegativeValueInTargets(targets);\n            for (j = 0; j < config.data_groups.length; j++) {\n                // Determine baseId\n                idsInGroup = config.data_groups[j].filter(function (id) {\n                    return ids.indexOf(id) >= 0;\n                });\n                if (idsInGroup.length === 0) {\n                    continue;\n                }\n                baseId = idsInGroup[0];\n                // Consider negative values\n                if (hasNegativeValue && ys[baseId]) {\n                    ys[baseId].forEach(function (v, i) {\n                        ys[baseId][i] = v < 0 ? v : 0;\n                    });\n                }\n                // Compute min\n                for (k = 1; k < idsInGroup.length; k++) {\n                    id = idsInGroup[k];\n                    if (!ys[id]) {\n                        continue;\n                    }\n                    ys[id].forEach(function (v, i) {\n                        if ($$.axis.getId(id) === $$.axis.getId(baseId) && ys[baseId] && !(hasNegativeValue && +v > 0)) {\n                            ys[baseId][i] += +v;\n                        }\n                    });\n                }\n            }\n        }\n        return $$.d3.min(Object.keys(ys).map(function (key) {\n            return $$.d3.min(ys[key]);\n        }));\n    };\n    c3_chart_internal_fn.getYDomainMax = function (targets) {\n        var $$ = this,\n            config = $$.config,\n            ids = $$.mapToIds(targets),\n            ys = $$.getValuesAsIdKeyed(targets),\n            j,\n            k,\n            baseId,\n            idsInGroup,\n            id,\n            hasPositiveValue;\n        if (config.data_groups.length > 0) {\n            hasPositiveValue = $$.hasPositiveValueInTargets(targets);\n            for (j = 0; j < config.data_groups.length; j++) {\n                // Determine baseId\n                idsInGroup = config.data_groups[j].filter(function (id) {\n                    return ids.indexOf(id) >= 0;\n                });\n                if (idsInGroup.length === 0) {\n                    continue;\n                }\n                baseId = idsInGroup[0];\n                // Consider positive values\n                if (hasPositiveValue && ys[baseId]) {\n                    ys[baseId].forEach(function (v, i) {\n                        ys[baseId][i] = v > 0 ? v : 0;\n                    });\n                }\n                // Compute max\n                for (k = 1; k < idsInGroup.length; k++) {\n                    id = idsInGroup[k];\n                    if (!ys[id]) {\n                        continue;\n                    }\n                    ys[id].forEach(function (v, i) {\n                        if ($$.axis.getId(id) === $$.axis.getId(baseId) && ys[baseId] && !(hasPositiveValue && +v < 0)) {\n                            ys[baseId][i] += +v;\n                        }\n                    });\n                }\n            }\n        }\n        return $$.d3.max(Object.keys(ys).map(function (key) {\n            return $$.d3.max(ys[key]);\n        }));\n    };\n    c3_chart_internal_fn.getYDomain = function (targets, axisId, xDomain) {\n        var $$ = this,\n            config = $$.config,\n            targetsByAxisId = targets.filter(function (t) {\n            return $$.axis.getId(t.id) === axisId;\n        }),\n            yTargets = xDomain ? $$.filterByXDomain(targetsByAxisId, xDomain) : targetsByAxisId,\n            yMin = axisId === 'y2' ? config.axis_y2_min : config.axis_y_min,\n            yMax = axisId === 'y2' ? config.axis_y2_max : config.axis_y_max,\n            yDomainMin = $$.getYDomainMin(yTargets),\n            yDomainMax = $$.getYDomainMax(yTargets),\n            domain,\n            domainLength,\n            padding,\n            padding_top,\n            padding_bottom,\n            center = axisId === 'y2' ? config.axis_y2_center : config.axis_y_center,\n            yDomainAbs,\n            lengths,\n            diff,\n            ratio,\n            isAllPositive,\n            isAllNegative,\n            isZeroBased = $$.hasType('bar', yTargets) && config.bar_zerobased || $$.hasType('area', yTargets) && config.area_zerobased,\n            isInverted = axisId === 'y2' ? config.axis_y2_inverted : config.axis_y_inverted,\n            showHorizontalDataLabel = $$.hasDataLabel() && config.axis_rotated,\n            showVerticalDataLabel = $$.hasDataLabel() && !config.axis_rotated;\n\n        // MEMO: avoid inverting domain unexpectedly\n        yDomainMin = isValue(yMin) ? yMin : isValue(yMax) ? yDomainMin < yMax ? yDomainMin : yMax - 10 : yDomainMin;\n        yDomainMax = isValue(yMax) ? yMax : isValue(yMin) ? yMin < yDomainMax ? yDomainMax : yMin + 10 : yDomainMax;\n\n        if (yTargets.length === 0) {\n            // use current domain if target of axisId is none\n            return axisId === 'y2' ? $$.y2.domain() : $$.y.domain();\n        }\n        if (isNaN(yDomainMin)) {\n            // set minimum to zero when not number\n            yDomainMin = 0;\n        }\n        if (isNaN(yDomainMax)) {\n            // set maximum to have same value as yDomainMin\n            yDomainMax = yDomainMin;\n        }\n        if (yDomainMin === yDomainMax) {\n            yDomainMin < 0 ? yDomainMax = 0 : yDomainMin = 0;\n        }\n        isAllPositive = yDomainMin >= 0 && yDomainMax >= 0;\n        isAllNegative = yDomainMin <= 0 && yDomainMax <= 0;\n\n        // Cancel zerobased if axis_*_min / axis_*_max specified\n        if (isValue(yMin) && isAllPositive || isValue(yMax) && isAllNegative) {\n            isZeroBased = false;\n        }\n\n        // Bar/Area chart should be 0-based if all positive|negative\n        if (isZeroBased) {\n            if (isAllPositive) {\n                yDomainMin = 0;\n            }\n            if (isAllNegative) {\n                yDomainMax = 0;\n            }\n        }\n\n        domainLength = Math.abs(yDomainMax - yDomainMin);\n        padding = padding_top = padding_bottom = domainLength * 0.1;\n\n        if (typeof center !== 'undefined') {\n            yDomainAbs = Math.max(Math.abs(yDomainMin), Math.abs(yDomainMax));\n            yDomainMax = center + yDomainAbs;\n            yDomainMin = center - yDomainAbs;\n        }\n        // add padding for data label\n        if (showHorizontalDataLabel) {\n            lengths = $$.getDataLabelLength(yDomainMin, yDomainMax, 'width');\n            diff = diffDomain($$.y.range());\n            ratio = [lengths[0] / diff, lengths[1] / diff];\n            padding_top += domainLength * (ratio[1] / (1 - ratio[0] - ratio[1]));\n            padding_bottom += domainLength * (ratio[0] / (1 - ratio[0] - ratio[1]));\n        } else if (showVerticalDataLabel) {\n            lengths = $$.getDataLabelLength(yDomainMin, yDomainMax, 'height');\n            padding_top += $$.axis.convertPixelsToAxisPadding(lengths[1], domainLength);\n            padding_bottom += $$.axis.convertPixelsToAxisPadding(lengths[0], domainLength);\n        }\n        if (axisId === 'y' && notEmpty(config.axis_y_padding)) {\n            padding_top = $$.axis.getPadding(config.axis_y_padding, 'top', padding_top, domainLength);\n            padding_bottom = $$.axis.getPadding(config.axis_y_padding, 'bottom', padding_bottom, domainLength);\n        }\n        if (axisId === 'y2' && notEmpty(config.axis_y2_padding)) {\n            padding_top = $$.axis.getPadding(config.axis_y2_padding, 'top', padding_top, domainLength);\n            padding_bottom = $$.axis.getPadding(config.axis_y2_padding, 'bottom', padding_bottom, domainLength);\n        }\n        // Bar/Area chart should be 0-based if all positive|negative\n        if (isZeroBased) {\n            if (isAllPositive) {\n                padding_bottom = yDomainMin;\n            }\n            if (isAllNegative) {\n                padding_top = -yDomainMax;\n            }\n        }\n        domain = [yDomainMin - padding_bottom, yDomainMax + padding_top];\n        return isInverted ? domain.reverse() : domain;\n    };\n    c3_chart_internal_fn.getXDomainMin = function (targets) {\n        var $$ = this,\n            config = $$.config;\n        return isDefined(config.axis_x_min) ? $$.isTimeSeries() ? this.parseDate(config.axis_x_min) : config.axis_x_min : $$.d3.min(targets, function (t) {\n            return $$.d3.min(t.values, function (v) {\n                return v.x;\n            });\n        });\n    };\n    c3_chart_internal_fn.getXDomainMax = function (targets) {\n        var $$ = this,\n            config = $$.config;\n        return isDefined(config.axis_x_max) ? $$.isTimeSeries() ? this.parseDate(config.axis_x_max) : config.axis_x_max : $$.d3.max(targets, function (t) {\n            return $$.d3.max(t.values, function (v) {\n                return v.x;\n            });\n        });\n    };\n    c3_chart_internal_fn.getXDomainPadding = function (domain) {\n        var $$ = this,\n            config = $$.config,\n            diff = domain[1] - domain[0],\n            maxDataCount,\n            padding,\n            paddingLeft,\n            paddingRight;\n        if ($$.isCategorized()) {\n            padding = 0;\n        } else if ($$.hasType('bar')) {\n            maxDataCount = $$.getMaxDataCount();\n            padding = maxDataCount > 1 ? diff / (maxDataCount - 1) / 2 : 0.5;\n        } else {\n            padding = diff * 0.01;\n        }\n        if (_typeof(config.axis_x_padding) === 'object' && notEmpty(config.axis_x_padding)) {\n            paddingLeft = isValue(config.axis_x_padding.left) ? config.axis_x_padding.left : padding;\n            paddingRight = isValue(config.axis_x_padding.right) ? config.axis_x_padding.right : padding;\n        } else if (typeof config.axis_x_padding === 'number') {\n            paddingLeft = paddingRight = config.axis_x_padding;\n        } else {\n            paddingLeft = paddingRight = padding;\n        }\n        return { left: paddingLeft, right: paddingRight };\n    };\n    c3_chart_internal_fn.getXDomain = function (targets) {\n        var $$ = this,\n            xDomain = [$$.getXDomainMin(targets), $$.getXDomainMax(targets)],\n            firstX = xDomain[0],\n            lastX = xDomain[1],\n            padding = $$.getXDomainPadding(xDomain),\n            min = 0,\n            max = 0;\n        // show center of x domain if min and max are the same\n        if (firstX - lastX === 0 && !$$.isCategorized()) {\n            if ($$.isTimeSeries()) {\n                firstX = new Date(firstX.getTime() * 0.5);\n                lastX = new Date(lastX.getTime() * 1.5);\n            } else {\n                firstX = firstX === 0 ? 1 : firstX * 0.5;\n                lastX = lastX === 0 ? -1 : lastX * 1.5;\n            }\n        }\n        if (firstX || firstX === 0) {\n            min = $$.isTimeSeries() ? new Date(firstX.getTime() - padding.left) : firstX - padding.left;\n        }\n        if (lastX || lastX === 0) {\n            max = $$.isTimeSeries() ? new Date(lastX.getTime() + padding.right) : lastX + padding.right;\n        }\n        return [min, max];\n    };\n    c3_chart_internal_fn.updateXDomain = function (targets, withUpdateXDomain, withUpdateOrgXDomain, withTrim, domain) {\n        var $$ = this,\n            config = $$.config;\n\n        if (withUpdateOrgXDomain) {\n            $$.x.domain(domain ? domain : $$.d3.extent($$.getXDomain(targets)));\n            $$.orgXDomain = $$.x.domain();\n            if (config.zoom_enabled) {\n                $$.zoom.update();\n            }\n            $$.subX.domain($$.x.domain());\n            if ($$.brush) {\n                $$.brush.updateScale($$.subX);\n            }\n        }\n        if (withUpdateXDomain) {\n            $$.x.domain(domain ? domain : !$$.brush || $$.brush.empty() ? $$.orgXDomain : $$.brush.selectionAsValue());\n        }\n\n        // Trim domain when too big by zoom mousemove event\n        if (withTrim) {\n            $$.x.domain($$.trimXDomain($$.x.orgDomain()));\n        }\n\n        return $$.x.domain();\n    };\n    c3_chart_internal_fn.trimXDomain = function (domain) {\n        var zoomDomain = this.getZoomDomain(),\n            min = zoomDomain[0],\n            max = zoomDomain[1];\n        if (domain[0] <= min) {\n            domain[1] = +domain[1] + (min - domain[0]);\n            domain[0] = min;\n        }\n        if (max <= domain[1]) {\n            domain[0] = +domain[0] - (domain[1] - max);\n            domain[1] = max;\n        }\n        return domain;\n    };\n\n    c3_chart_internal_fn.drag = function (mouse) {\n        var $$ = this,\n            config = $$.config,\n            main = $$.main,\n            d3 = $$.d3;\n        var sx, sy, mx, my, minX, maxX, minY, maxY;\n\n        if ($$.hasArcType()) {\n            return;\n        }\n        if (!config.data_selection_enabled) {\n            return;\n        } // do nothing if not selectable\n        if (!config.data_selection_multiple) {\n            return;\n        } // skip when single selection because drag is used for multiple selection\n\n        sx = $$.dragStart[0];\n        sy = $$.dragStart[1];\n        mx = mouse[0];\n        my = mouse[1];\n        minX = Math.min(sx, mx);\n        maxX = Math.max(sx, mx);\n        minY = config.data_selection_grouped ? $$.margin.top : Math.min(sy, my);\n        maxY = config.data_selection_grouped ? $$.height : Math.max(sy, my);\n\n        main.select('.' + CLASS.dragarea).attr('x', minX).attr('y', minY).attr('width', maxX - minX).attr('height', maxY - minY);\n        // TODO: binary search when multiple xs\n        main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape).filter(function (d) {\n            return config.data_selection_isselectable(d);\n        }).each(function (d, i) {\n            var shape = d3.select(this),\n                isSelected = shape.classed(CLASS.SELECTED),\n                isIncluded = shape.classed(CLASS.INCLUDED),\n                _x,\n                _y,\n                _w,\n                _h,\n                toggle,\n                isWithin = false,\n                box;\n            if (shape.classed(CLASS.circle)) {\n                _x = shape.attr(\"cx\") * 1;\n                _y = shape.attr(\"cy\") * 1;\n                toggle = $$.togglePoint;\n                isWithin = minX < _x && _x < maxX && minY < _y && _y < maxY;\n            } else if (shape.classed(CLASS.bar)) {\n                box = getPathBox(this);\n                _x = box.x;\n                _y = box.y;\n                _w = box.width;\n                _h = box.height;\n                toggle = $$.togglePath;\n                isWithin = !(maxX < _x || _x + _w < minX) && !(maxY < _y || _y + _h < minY);\n            } else {\n                // line/area selection not supported yet\n                return;\n            }\n            if (isWithin ^ isIncluded) {\n                shape.classed(CLASS.INCLUDED, !isIncluded);\n                // TODO: included/unincluded callback here\n                shape.classed(CLASS.SELECTED, !isSelected);\n                toggle.call($$, !isSelected, shape, d, i);\n            }\n        });\n    };\n\n    c3_chart_internal_fn.dragstart = function (mouse) {\n        var $$ = this,\n            config = $$.config;\n        if ($$.hasArcType()) {\n            return;\n        }\n        if (!config.data_selection_enabled) {\n            return;\n        } // do nothing if not selectable\n        $$.dragStart = mouse;\n        $$.main.select('.' + CLASS.chart).append('rect').attr('class', CLASS.dragarea).style('opacity', 0.1);\n        $$.dragging = true;\n    };\n\n    c3_chart_internal_fn.dragend = function () {\n        var $$ = this,\n            config = $$.config;\n        if ($$.hasArcType()) {\n            return;\n        }\n        if (!config.data_selection_enabled) {\n            return;\n        } // do nothing if not selectable\n        $$.main.select('.' + CLASS.dragarea).transition().duration(100).style('opacity', 0).remove();\n        $$.main.selectAll('.' + CLASS.shape).classed(CLASS.INCLUDED, false);\n        $$.dragging = false;\n    };\n\n    c3_chart_internal_fn.getYFormat = function (forArc) {\n        var $$ = this,\n            formatForY = forArc && !$$.hasType('gauge') ? $$.defaultArcValueFormat : $$.yFormat,\n            formatForY2 = forArc && !$$.hasType('gauge') ? $$.defaultArcValueFormat : $$.y2Format;\n        return function (v, ratio, id) {\n            var format = $$.axis.getId(id) === 'y2' ? formatForY2 : formatForY;\n            return format.call($$, v, ratio);\n        };\n    };\n    c3_chart_internal_fn.yFormat = function (v) {\n        var $$ = this,\n            config = $$.config,\n            format = config.axis_y_tick_format ? config.axis_y_tick_format : $$.defaultValueFormat;\n        return format(v);\n    };\n    c3_chart_internal_fn.y2Format = function (v) {\n        var $$ = this,\n            config = $$.config,\n            format = config.axis_y2_tick_format ? config.axis_y2_tick_format : $$.defaultValueFormat;\n        return format(v);\n    };\n    c3_chart_internal_fn.defaultValueFormat = function (v) {\n        return isValue(v) ? +v : \"\";\n    };\n    c3_chart_internal_fn.defaultArcValueFormat = function (v, ratio) {\n        return (ratio * 100).toFixed(1) + '%';\n    };\n    c3_chart_internal_fn.dataLabelFormat = function (targetId) {\n        var $$ = this,\n            data_labels = $$.config.data_labels,\n            format,\n            defaultFormat = function defaultFormat(v) {\n            return isValue(v) ? +v : \"\";\n        };\n        // find format according to axis id\n        if (typeof data_labels.format === 'function') {\n            format = data_labels.format;\n        } else if (_typeof(data_labels.format) === 'object') {\n            if (data_labels.format[targetId]) {\n                format = data_labels.format[targetId] === true ? defaultFormat : data_labels.format[targetId];\n            } else {\n                format = function format() {\n                    return '';\n                };\n            }\n        } else {\n            format = defaultFormat;\n        }\n        return format;\n    };\n\n    c3_chart_internal_fn.initGrid = function () {\n        var $$ = this,\n            config = $$.config,\n            d3 = $$.d3;\n        $$.grid = $$.main.append('g').attr(\"clip-path\", $$.clipPathForGrid).attr('class', CLASS.grid);\n        if (config.grid_x_show) {\n            $$.grid.append(\"g\").attr(\"class\", CLASS.xgrids);\n        }\n        if (config.grid_y_show) {\n            $$.grid.append('g').attr('class', CLASS.ygrids);\n        }\n        if (config.grid_focus_show) {\n            $$.grid.append('g').attr(\"class\", CLASS.xgridFocus).append('line').attr('class', CLASS.xgridFocus);\n        }\n        $$.xgrid = d3.selectAll([]);\n        if (!config.grid_lines_front) {\n            $$.initGridLines();\n        }\n    };\n    c3_chart_internal_fn.initGridLines = function () {\n        var $$ = this,\n            d3 = $$.d3;\n        $$.gridLines = $$.main.append('g').attr(\"clip-path\", $$.clipPathForGrid).attr('class', CLASS.grid + ' ' + CLASS.gridLines);\n        $$.gridLines.append('g').attr(\"class\", CLASS.xgridLines);\n        $$.gridLines.append('g').attr('class', CLASS.ygridLines);\n        $$.xgridLines = d3.selectAll([]);\n    };\n    c3_chart_internal_fn.updateXGrid = function (withoutUpdate) {\n        var $$ = this,\n            config = $$.config,\n            d3 = $$.d3,\n            xgridData = $$.generateGridData(config.grid_x_type, $$.x),\n            tickOffset = $$.isCategorized() ? $$.xAxis.tickOffset() : 0;\n\n        $$.xgridAttr = config.axis_rotated ? {\n            'x1': 0,\n            'x2': $$.width,\n            'y1': function y1(d) {\n                return $$.x(d) - tickOffset;\n            },\n            'y2': function y2(d) {\n                return $$.x(d) - tickOffset;\n            }\n        } : {\n            'x1': function x1(d) {\n                return $$.x(d) + tickOffset;\n            },\n            'x2': function x2(d) {\n                return $$.x(d) + tickOffset;\n            },\n            'y1': 0,\n            'y2': $$.height\n        };\n        $$.xgridAttr.opacity = function () {\n            var pos = +d3.select(this).attr(config.axis_rotated ? 'y1' : 'x1');\n            return pos === (config.axis_rotated ? $$.height : 0) ? 0 : 1;\n        };\n\n        var xgrid = $$.main.select('.' + CLASS.xgrids).selectAll('.' + CLASS.xgrid).data(xgridData);\n        var xgridEnter = xgrid.enter().append('line').attr(\"class\", CLASS.xgrid).attr('x1', $$.xgridAttr.x1).attr('x2', $$.xgridAttr.x2).attr('y1', $$.xgridAttr.y1).attr('y2', $$.xgridAttr.y2).style(\"opacity\", 0);\n        $$.xgrid = xgridEnter.merge(xgrid);\n        if (!withoutUpdate) {\n            $$.xgrid.attr('x1', $$.xgridAttr.x1).attr('x2', $$.xgridAttr.x2).attr('y1', $$.xgridAttr.y1).attr('y2', $$.xgridAttr.y2).style(\"opacity\", $$.xgridAttr.opacity);\n        }\n        xgrid.exit().remove();\n    };\n\n    c3_chart_internal_fn.updateYGrid = function () {\n        var $$ = this,\n            config = $$.config,\n            gridValues = $$.yAxis.tickValues() || $$.y.ticks(config.grid_y_ticks);\n        var ygrid = $$.main.select('.' + CLASS.ygrids).selectAll('.' + CLASS.ygrid).data(gridValues);\n        var ygridEnter = ygrid.enter().append('line')\n        // TODO: x1, x2, y1, y2, opacity need to be set here maybe\n        .attr('class', CLASS.ygrid);\n        $$.ygrid = ygridEnter.merge(ygrid);\n        $$.ygrid.attr(\"x1\", config.axis_rotated ? $$.y : 0).attr(\"x2\", config.axis_rotated ? $$.y : $$.width).attr(\"y1\", config.axis_rotated ? 0 : $$.y).attr(\"y2\", config.axis_rotated ? $$.height : $$.y);\n        ygrid.exit().remove();\n        $$.smoothLines($$.ygrid, 'grid');\n    };\n\n    c3_chart_internal_fn.gridTextAnchor = function (d) {\n        return d.position ? d.position : \"end\";\n    };\n    c3_chart_internal_fn.gridTextDx = function (d) {\n        return d.position === 'start' ? 4 : d.position === 'middle' ? 0 : -4;\n    };\n    c3_chart_internal_fn.xGridTextX = function (d) {\n        return d.position === 'start' ? -this.height : d.position === 'middle' ? -this.height / 2 : 0;\n    };\n    c3_chart_internal_fn.yGridTextX = function (d) {\n        return d.position === 'start' ? 0 : d.position === 'middle' ? this.width / 2 : this.width;\n    };\n    c3_chart_internal_fn.updateGrid = function (duration) {\n        var $$ = this,\n            main = $$.main,\n            config = $$.config,\n            xgridLine,\n            xgridLineEnter,\n            ygridLine,\n            ygridLineEnter,\n            xv = $$.xv.bind($$),\n            yv = $$.yv.bind($$),\n            xGridTextX = $$.xGridTextX.bind($$),\n            yGridTextX = $$.yGridTextX.bind($$);\n\n        // hide if arc type\n        $$.grid.style('visibility', $$.hasArcType() ? 'hidden' : 'visible');\n\n        main.select('line.' + CLASS.xgridFocus).style(\"visibility\", \"hidden\");\n        if (config.grid_x_show) {\n            $$.updateXGrid();\n        }\n        xgridLine = main.select('.' + CLASS.xgridLines).selectAll('.' + CLASS.xgridLine).data(config.grid_x_lines);\n        // enter\n        xgridLineEnter = xgridLine.enter().append('g').attr(\"class\", function (d) {\n            return CLASS.xgridLine + (d['class'] ? ' ' + d['class'] : '');\n        });\n        xgridLineEnter.append('line').attr(\"x1\", config.axis_rotated ? 0 : xv).attr(\"x2\", config.axis_rotated ? $$.width : xv).attr(\"y1\", config.axis_rotated ? xv : 0).attr(\"y2\", config.axis_rotated ? xv : $$.height).style(\"opacity\", 0);\n        xgridLineEnter.append('text').attr(\"text-anchor\", $$.gridTextAnchor).attr(\"transform\", config.axis_rotated ? \"\" : \"rotate(-90)\").attr(\"x\", config.axis_rotated ? yGridTextX : xGridTextX).attr(\"y\", xv).attr('dx', $$.gridTextDx).attr('dy', -5).style(\"opacity\", 0);\n        // udpate\n        $$.xgridLines = xgridLineEnter.merge(xgridLine);\n        // done in d3.transition() of the end of this function\n        // exit\n        xgridLine.exit().transition().duration(duration).style(\"opacity\", 0).remove();\n\n        // Y-Grid\n        if (config.grid_y_show) {\n            $$.updateYGrid();\n        }\n        ygridLine = main.select('.' + CLASS.ygridLines).selectAll('.' + CLASS.ygridLine).data(config.grid_y_lines);\n        // enter\n        ygridLineEnter = ygridLine.enter().append('g').attr(\"class\", function (d) {\n            return CLASS.ygridLine + (d['class'] ? ' ' + d['class'] : '');\n        });\n        ygridLineEnter.append('line').attr(\"x1\", config.axis_rotated ? yv : 0).attr(\"x2\", config.axis_rotated ? yv : $$.width).attr(\"y1\", config.axis_rotated ? 0 : yv).attr(\"y2\", config.axis_rotated ? $$.height : yv).style(\"opacity\", 0);\n        ygridLineEnter.append('text').attr(\"text-anchor\", $$.gridTextAnchor).attr(\"transform\", config.axis_rotated ? \"rotate(-90)\" : \"\").attr(\"x\", config.axis_rotated ? xGridTextX : yGridTextX).attr(\"y\", yv).attr('dx', $$.gridTextDx).attr('dy', -5).style(\"opacity\", 0);\n        // update\n        $$.ygridLines = ygridLineEnter.merge(ygridLine);\n        $$.ygridLines.select('line').transition().duration(duration).attr(\"x1\", config.axis_rotated ? yv : 0).attr(\"x2\", config.axis_rotated ? yv : $$.width).attr(\"y1\", config.axis_rotated ? 0 : yv).attr(\"y2\", config.axis_rotated ? $$.height : yv).style(\"opacity\", 1);\n        $$.ygridLines.select('text').transition().duration(duration).attr(\"x\", config.axis_rotated ? $$.xGridTextX.bind($$) : $$.yGridTextX.bind($$)).attr(\"y\", yv).text(function (d) {\n            return d.text;\n        }).style(\"opacity\", 1);\n        // exit\n        ygridLine.exit().transition().duration(duration).style(\"opacity\", 0).remove();\n    };\n    c3_chart_internal_fn.redrawGrid = function (withTransition, transition) {\n        var $$ = this,\n            config = $$.config,\n            xv = $$.xv.bind($$),\n            lines = $$.xgridLines.select('line'),\n            texts = $$.xgridLines.select('text');\n        return [(withTransition ? lines.transition(transition) : lines).attr(\"x1\", config.axis_rotated ? 0 : xv).attr(\"x2\", config.axis_rotated ? $$.width : xv).attr(\"y1\", config.axis_rotated ? xv : 0).attr(\"y2\", config.axis_rotated ? xv : $$.height).style(\"opacity\", 1), (withTransition ? texts.transition(transition) : texts).attr(\"x\", config.axis_rotated ? $$.yGridTextX.bind($$) : $$.xGridTextX.bind($$)).attr(\"y\", xv).text(function (d) {\n            return d.text;\n        }).style(\"opacity\", 1)];\n    };\n    c3_chart_internal_fn.showXGridFocus = function (selectedData) {\n        var $$ = this,\n            config = $$.config,\n            dataToShow = selectedData.filter(function (d) {\n            return d && isValue(d.value);\n        }),\n            focusEl = $$.main.selectAll('line.' + CLASS.xgridFocus),\n            xx = $$.xx.bind($$);\n        if (!config.tooltip_show) {\n            return;\n        }\n        // Hide when scatter plot exists\n        if ($$.hasType('scatter') || $$.hasArcType()) {\n            return;\n        }\n        focusEl.style(\"visibility\", \"visible\").data([dataToShow[0]]).attr(config.axis_rotated ? 'y1' : 'x1', xx).attr(config.axis_rotated ? 'y2' : 'x2', xx);\n        $$.smoothLines(focusEl, 'grid');\n    };\n    c3_chart_internal_fn.hideXGridFocus = function () {\n        this.main.select('line.' + CLASS.xgridFocus).style(\"visibility\", \"hidden\");\n    };\n    c3_chart_internal_fn.updateXgridFocus = function () {\n        var $$ = this,\n            config = $$.config;\n        $$.main.select('line.' + CLASS.xgridFocus).attr(\"x1\", config.axis_rotated ? 0 : -10).attr(\"x2\", config.axis_rotated ? $$.width : -10).attr(\"y1\", config.axis_rotated ? -10 : 0).attr(\"y2\", config.axis_rotated ? -10 : $$.height);\n    };\n    c3_chart_internal_fn.generateGridData = function (type, scale) {\n        var $$ = this,\n            gridData = [],\n            xDomain,\n            firstYear,\n            lastYear,\n            i,\n            tickNum = $$.main.select(\".\" + CLASS.axisX).selectAll('.tick').size();\n        if (type === 'year') {\n            xDomain = $$.getXDomain();\n            firstYear = xDomain[0].getFullYear();\n            lastYear = xDomain[1].getFullYear();\n            for (i = firstYear; i <= lastYear; i++) {\n                gridData.push(new Date(i + '-01-01 00:00:00'));\n            }\n        } else {\n            gridData = scale.ticks(10);\n            if (gridData.length > tickNum) {\n                // use only int\n                gridData = gridData.filter(function (d) {\n                    return (\"\" + d).indexOf('.') < 0;\n                });\n            }\n        }\n        return gridData;\n    };\n    c3_chart_internal_fn.getGridFilterToRemove = function (params) {\n        return params ? function (line) {\n            var found = false;\n            [].concat(params).forEach(function (param) {\n                if ('value' in param && line.value === param.value || 'class' in param && line['class'] === param['class']) {\n                    found = true;\n                }\n            });\n            return found;\n        } : function () {\n            return true;\n        };\n    };\n    c3_chart_internal_fn.removeGridLines = function (params, forX) {\n        var $$ = this,\n            config = $$.config,\n            toRemove = $$.getGridFilterToRemove(params),\n            toShow = function toShow(line) {\n            return !toRemove(line);\n        },\n            classLines = forX ? CLASS.xgridLines : CLASS.ygridLines,\n            classLine = forX ? CLASS.xgridLine : CLASS.ygridLine;\n        $$.main.select('.' + classLines).selectAll('.' + classLine).filter(toRemove).transition().duration(config.transition_duration).style('opacity', 0).remove();\n        if (forX) {\n            config.grid_x_lines = config.grid_x_lines.filter(toShow);\n        } else {\n            config.grid_y_lines = config.grid_y_lines.filter(toShow);\n        }\n    };\n\n    c3_chart_internal_fn.initEventRect = function () {\n        var $$ = this,\n            config = $$.config;\n\n        $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.eventRects).style('fill-opacity', 0);\n        $$.eventRect = $$.main.select('.' + CLASS.eventRects).append('rect').attr('class', CLASS.eventRect);\n\n        // event rect handle zoom event as well\n        if (config.zoom_enabled && $$.zoom) {\n            $$.eventRect.call($$.zoom).on(\"dblclick.zoom\", null);\n            if (config.zoom_initialRange) {\n                // WORKAROUND: Add transition to apply transform immediately when no subchart\n                $$.eventRect.transition().duration(0).call($$.zoom.transform, $$.zoomTransform(config.zoom_initialRange));\n            }\n        }\n    };\n    c3_chart_internal_fn.redrawEventRect = function () {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config,\n            x,\n            y,\n            w,\n            h;\n\n        // TODO: rotated not supported yet\n        x = 0;\n        y = 0;\n        w = $$.width;\n        h = $$.height;\n\n        function mouseout() {\n            $$.svg.select('.' + CLASS.eventRect).style('cursor', null);\n            $$.hideXGridFocus();\n            $$.hideTooltip();\n            $$.unexpandCircles();\n            $$.unexpandBars();\n        }\n\n        // rects for mouseover\n        $$.main.select('.' + CLASS.eventRects).style('cursor', config.zoom_enabled ? config.axis_rotated ? 'ns-resize' : 'ew-resize' : null);\n\n        $$.eventRect.attr('x', x).attr('y', y).attr('width', w).attr('height', h).on('mouseout', config.interaction_enabled ? function () {\n            if (!config) {\n                return;\n            } // chart is destroyed\n            if ($$.hasArcType()) {\n                return;\n            }\n            mouseout();\n        } : null).on('mousemove', config.interaction_enabled ? function () {\n            var targetsToShow, mouse, closest, sameXData, selectedData;\n\n            if ($$.dragging) {\n                return;\n            } // do nothing when dragging\n            if ($$.hasArcType(targetsToShow)) {\n                return;\n            }\n\n            targetsToShow = $$.filterTargetsToShow($$.data.targets);\n            mouse = d3.mouse(this);\n            closest = $$.findClosestFromTargets(targetsToShow, mouse);\n\n            if ($$.mouseover && (!closest || closest.id !== $$.mouseover.id)) {\n                config.data_onmouseout.call($$.api, $$.mouseover);\n                $$.mouseover = undefined;\n            }\n\n            if (!closest) {\n                mouseout();\n                return;\n            }\n\n            if ($$.isScatterType(closest) || !config.tooltip_grouped) {\n                sameXData = [closest];\n            } else {\n                sameXData = $$.filterByX(targetsToShow, closest.x);\n            }\n\n            // show tooltip when cursor is close to some point\n            selectedData = sameXData.map(function (d) {\n                return $$.addName(d);\n            });\n            $$.showTooltip(selectedData, this);\n\n            // expand points\n            if (config.point_focus_expand_enabled) {\n                $$.unexpandCircles();\n                selectedData.forEach(function (d) {\n                    $$.expandCircles(d.index, d.id, false);\n                });\n            }\n            $$.expandBars(closest.index, closest.id, true);\n\n            // Show xgrid focus line\n            $$.showXGridFocus(selectedData);\n\n            // Show cursor as pointer if point is close to mouse position\n            if ($$.isBarType(closest.id) || $$.dist(closest, mouse) < config.point_sensitivity) {\n                $$.svg.select('.' + CLASS.eventRect).style('cursor', 'pointer');\n                if (!$$.mouseover) {\n                    config.data_onmouseover.call($$.api, closest);\n                    $$.mouseover = closest;\n                }\n            }\n        } : null).on('click', config.interaction_enabled ? function () {\n            var targetsToShow, mouse, closest, sameXData;\n            if ($$.hasArcType(targetsToShow)) {\n                return;\n            }\n\n            targetsToShow = $$.filterTargetsToShow($$.data.targets);\n            mouse = d3.mouse(this);\n            closest = $$.findClosestFromTargets(targetsToShow, mouse);\n            if (!closest) {\n                return;\n            }\n            // select if selection enabled\n            if ($$.isBarType(closest.id) || $$.dist(closest, mouse) < config.point_sensitivity) {\n                if ($$.isScatterType(closest) || !config.data_selection_grouped) {\n                    sameXData = [closest];\n                } else {\n                    sameXData = $$.filterByX(targetsToShow, closest.x);\n                }\n                sameXData.forEach(function (d) {\n                    $$.main.selectAll('.' + CLASS.shapes + $$.getTargetSelectorSuffix(d.id)).selectAll('.' + CLASS.shape + '-' + d.index).each(function () {\n                        if (config.data_selection_grouped || $$.isWithinShape(this, d)) {\n                            $$.toggleShape(this, d, d.index);\n                            config.data_onclick.call($$.api, d, this);\n                        }\n                    });\n                });\n            }\n        } : null).call(config.interaction_enabled && config.data_selection_draggable && $$.drag ? d3.drag().on('drag', function () {\n            $$.drag(d3.mouse(this));\n        }).on('start', function () {\n            $$.dragstart(d3.mouse(this));\n        }).on('end', function () {\n            $$.dragend();\n        }) : function () {});\n    };\n    c3_chart_internal_fn.getMousePosition = function (data) {\n        var $$ = this;\n        return [$$.x(data.x), $$.getYScale(data.id)(data.value)];\n    };\n    c3_chart_internal_fn.dispatchEvent = function (type, mouse) {\n        var $$ = this,\n            selector = '.' + CLASS.eventRect,\n            eventRect = $$.main.select(selector).node(),\n            box = eventRect.getBoundingClientRect(),\n            x = box.left + (mouse ? mouse[0] : 0),\n            y = box.top + (mouse ? mouse[1] : 0),\n            event = document.createEvent(\"MouseEvents\");\n\n        event.initMouseEvent(type, true, true, window, 0, x, y, x, y, false, false, false, false, 0, null);\n        eventRect.dispatchEvent(event);\n    };\n\n    c3_chart_internal_fn.initLegend = function () {\n        var $$ = this;\n        $$.legendItemTextBox = {};\n        $$.legendHasRendered = false;\n        $$.legend = $$.svg.append(\"g\").attr(\"transform\", $$.getTranslate('legend'));\n        if (!$$.config.legend_show) {\n            $$.legend.style('visibility', 'hidden');\n            $$.hiddenLegendIds = $$.mapToIds($$.data.targets);\n            return;\n        }\n        // MEMO: call here to update legend box and tranlate for all\n        // MEMO: translate will be upated by this, so transform not needed in updateLegend()\n        $$.updateLegendWithDefaults();\n    };\n    c3_chart_internal_fn.updateLegendWithDefaults = function () {\n        var $$ = this;\n        $$.updateLegend($$.mapToIds($$.data.targets), { withTransform: false, withTransitionForTransform: false, withTransition: false });\n    };\n    c3_chart_internal_fn.updateSizeForLegend = function (legendHeight, legendWidth) {\n        var $$ = this,\n            config = $$.config,\n            insetLegendPosition = {\n            top: $$.isLegendTop ? $$.getCurrentPaddingTop() + config.legend_inset_y + 5.5 : $$.currentHeight - legendHeight - $$.getCurrentPaddingBottom() - config.legend_inset_y,\n            left: $$.isLegendLeft ? $$.getCurrentPaddingLeft() + config.legend_inset_x + 0.5 : $$.currentWidth - legendWidth - $$.getCurrentPaddingRight() - config.legend_inset_x + 0.5\n        };\n\n        $$.margin3 = {\n            top: $$.isLegendRight ? 0 : $$.isLegendInset ? insetLegendPosition.top : $$.currentHeight - legendHeight,\n            right: NaN,\n            bottom: 0,\n            left: $$.isLegendRight ? $$.currentWidth - legendWidth : $$.isLegendInset ? insetLegendPosition.left : 0\n        };\n    };\n    c3_chart_internal_fn.transformLegend = function (withTransition) {\n        var $$ = this;\n        (withTransition ? $$.legend.transition() : $$.legend).attr(\"transform\", $$.getTranslate('legend'));\n    };\n    c3_chart_internal_fn.updateLegendStep = function (step) {\n        this.legendStep = step;\n    };\n    c3_chart_internal_fn.updateLegendItemWidth = function (w) {\n        this.legendItemWidth = w;\n    };\n    c3_chart_internal_fn.updateLegendItemHeight = function (h) {\n        this.legendItemHeight = h;\n    };\n    c3_chart_internal_fn.getLegendWidth = function () {\n        var $$ = this;\n        return $$.config.legend_show ? $$.isLegendRight || $$.isLegendInset ? $$.legendItemWidth * ($$.legendStep + 1) : $$.currentWidth : 0;\n    };\n    c3_chart_internal_fn.getLegendHeight = function () {\n        var $$ = this,\n            h = 0;\n        if ($$.config.legend_show) {\n            if ($$.isLegendRight) {\n                h = $$.currentHeight;\n            } else {\n                h = Math.max(20, $$.legendItemHeight) * ($$.legendStep + 1);\n            }\n        }\n        return h;\n    };\n    c3_chart_internal_fn.opacityForLegend = function (legendItem) {\n        return legendItem.classed(CLASS.legendItemHidden) ? null : 1;\n    };\n    c3_chart_internal_fn.opacityForUnfocusedLegend = function (legendItem) {\n        return legendItem.classed(CLASS.legendItemHidden) ? null : 0.3;\n    };\n    c3_chart_internal_fn.toggleFocusLegend = function (targetIds, focus) {\n        var $$ = this;\n        targetIds = $$.mapToTargetIds(targetIds);\n        $$.legend.selectAll('.' + CLASS.legendItem).filter(function (id) {\n            return targetIds.indexOf(id) >= 0;\n        }).classed(CLASS.legendItemFocused, focus).transition().duration(100).style('opacity', function () {\n            var opacity = focus ? $$.opacityForLegend : $$.opacityForUnfocusedLegend;\n            return opacity.call($$, $$.d3.select(this));\n        });\n    };\n    c3_chart_internal_fn.revertLegend = function () {\n        var $$ = this,\n            d3 = $$.d3;\n        $$.legend.selectAll('.' + CLASS.legendItem).classed(CLASS.legendItemFocused, false).transition().duration(100).style('opacity', function () {\n            return $$.opacityForLegend(d3.select(this));\n        });\n    };\n    c3_chart_internal_fn.showLegend = function (targetIds) {\n        var $$ = this,\n            config = $$.config;\n        if (!config.legend_show) {\n            config.legend_show = true;\n            $$.legend.style('visibility', 'visible');\n            if (!$$.legendHasRendered) {\n                $$.updateLegendWithDefaults();\n            }\n        }\n        $$.removeHiddenLegendIds(targetIds);\n        $$.legend.selectAll($$.selectorLegends(targetIds)).style('visibility', 'visible').transition().style('opacity', function () {\n            return $$.opacityForLegend($$.d3.select(this));\n        });\n    };\n    c3_chart_internal_fn.hideLegend = function (targetIds) {\n        var $$ = this,\n            config = $$.config;\n        if (config.legend_show && isEmpty(targetIds)) {\n            config.legend_show = false;\n            $$.legend.style('visibility', 'hidden');\n        }\n        $$.addHiddenLegendIds(targetIds);\n        $$.legend.selectAll($$.selectorLegends(targetIds)).style('opacity', 0).style('visibility', 'hidden');\n    };\n    c3_chart_internal_fn.clearLegendItemTextBoxCache = function () {\n        this.legendItemTextBox = {};\n    };\n    c3_chart_internal_fn.updateLegend = function (targetIds, options, transitions) {\n        var $$ = this,\n            config = $$.config;\n        var xForLegend, xForLegendText, xForLegendRect, yForLegend, yForLegendText, yForLegendRect, x1ForLegendTile, x2ForLegendTile, yForLegendTile;\n        var paddingTop = 4,\n            paddingRight = 10,\n            maxWidth = 0,\n            maxHeight = 0,\n            posMin = 10,\n            tileWidth = config.legend_item_tile_width + 5;\n        var l,\n            totalLength = 0,\n            offsets = {},\n            widths = {},\n            heights = {},\n            margins = [0],\n            steps = {},\n            step = 0;\n        var withTransition, withTransitionForTransform;\n        var texts, rects, tiles, background;\n\n        // Skip elements when their name is set to null\n        targetIds = targetIds.filter(function (id) {\n            return !isDefined(config.data_names[id]) || config.data_names[id] !== null;\n        });\n\n        options = options || {};\n        withTransition = getOption(options, \"withTransition\", true);\n        withTransitionForTransform = getOption(options, \"withTransitionForTransform\", true);\n\n        function getTextBox(textElement, id) {\n            if (!$$.legendItemTextBox[id]) {\n                $$.legendItemTextBox[id] = $$.getTextRect(textElement.textContent, CLASS.legendItem, textElement);\n            }\n            return $$.legendItemTextBox[id];\n        }\n\n        function updatePositions(textElement, id, index) {\n            var reset = index === 0,\n                isLast = index === targetIds.length - 1,\n                box = getTextBox(textElement, id),\n                itemWidth = box.width + tileWidth + (isLast && !($$.isLegendRight || $$.isLegendInset) ? 0 : paddingRight) + config.legend_padding,\n                itemHeight = box.height + paddingTop,\n                itemLength = $$.isLegendRight || $$.isLegendInset ? itemHeight : itemWidth,\n                areaLength = $$.isLegendRight || $$.isLegendInset ? $$.getLegendHeight() : $$.getLegendWidth(),\n                margin,\n                maxLength;\n\n            // MEMO: care about condifion of step, totalLength\n            function updateValues(id, withoutStep) {\n                if (!withoutStep) {\n                    margin = (areaLength - totalLength - itemLength) / 2;\n                    if (margin < posMin) {\n                        margin = (areaLength - itemLength) / 2;\n                        totalLength = 0;\n                        step++;\n                    }\n                }\n                steps[id] = step;\n                margins[step] = $$.isLegendInset ? 10 : margin;\n                offsets[id] = totalLength;\n                totalLength += itemLength;\n            }\n\n            if (reset) {\n                totalLength = 0;\n                step = 0;\n                maxWidth = 0;\n                maxHeight = 0;\n            }\n\n            if (config.legend_show && !$$.isLegendToShow(id)) {\n                widths[id] = heights[id] = steps[id] = offsets[id] = 0;\n                return;\n            }\n\n            widths[id] = itemWidth;\n            heights[id] = itemHeight;\n\n            if (!maxWidth || itemWidth >= maxWidth) {\n                maxWidth = itemWidth;\n            }\n            if (!maxHeight || itemHeight >= maxHeight) {\n                maxHeight = itemHeight;\n            }\n            maxLength = $$.isLegendRight || $$.isLegendInset ? maxHeight : maxWidth;\n\n            if (config.legend_equally) {\n                Object.keys(widths).forEach(function (id) {\n                    widths[id] = maxWidth;\n                });\n                Object.keys(heights).forEach(function (id) {\n                    heights[id] = maxHeight;\n                });\n                margin = (areaLength - maxLength * targetIds.length) / 2;\n                if (margin < posMin) {\n                    totalLength = 0;\n                    step = 0;\n                    targetIds.forEach(function (id) {\n                        updateValues(id);\n                    });\n                } else {\n                    updateValues(id, true);\n                }\n            } else {\n                updateValues(id);\n            }\n        }\n\n        if ($$.isLegendInset) {\n            step = config.legend_inset_step ? config.legend_inset_step : targetIds.length;\n            $$.updateLegendStep(step);\n        }\n\n        if ($$.isLegendRight) {\n            xForLegend = function xForLegend(id) {\n                return maxWidth * steps[id];\n            };\n            yForLegend = function yForLegend(id) {\n                return margins[steps[id]] + offsets[id];\n            };\n        } else if ($$.isLegendInset) {\n            xForLegend = function xForLegend(id) {\n                return maxWidth * steps[id] + 10;\n            };\n            yForLegend = function yForLegend(id) {\n                return margins[steps[id]] + offsets[id];\n            };\n        } else {\n            xForLegend = function xForLegend(id) {\n                return margins[steps[id]] + offsets[id];\n            };\n            yForLegend = function yForLegend(id) {\n                return maxHeight * steps[id];\n            };\n        }\n        xForLegendText = function xForLegendText(id, i) {\n            return xForLegend(id, i) + 4 + config.legend_item_tile_width;\n        };\n        yForLegendText = function yForLegendText(id, i) {\n            return yForLegend(id, i) + 9;\n        };\n        xForLegendRect = function xForLegendRect(id, i) {\n            return xForLegend(id, i);\n        };\n        yForLegendRect = function yForLegendRect(id, i) {\n            return yForLegend(id, i) - 5;\n        };\n        x1ForLegendTile = function x1ForLegendTile(id, i) {\n            return xForLegend(id, i) - 2;\n        };\n        x2ForLegendTile = function x2ForLegendTile(id, i) {\n            return xForLegend(id, i) - 2 + config.legend_item_tile_width;\n        };\n        yForLegendTile = function yForLegendTile(id, i) {\n            return yForLegend(id, i) + 4;\n        };\n\n        // Define g for legend area\n        l = $$.legend.selectAll('.' + CLASS.legendItem).data(targetIds).enter().append('g').attr('class', function (id) {\n            return $$.generateClass(CLASS.legendItem, id);\n        }).style('visibility', function (id) {\n            return $$.isLegendToShow(id) ? 'visible' : 'hidden';\n        }).style('cursor', 'pointer').on('click', function (id) {\n            if (config.legend_item_onclick) {\n                config.legend_item_onclick.call($$, id);\n            } else {\n                if ($$.d3.event.altKey) {\n                    $$.api.hide();\n                    $$.api.show(id);\n                } else {\n                    $$.api.toggle(id);\n                    $$.isTargetToShow(id) ? $$.api.focus(id) : $$.api.revert();\n                }\n            }\n        }).on('mouseover', function (id) {\n            if (config.legend_item_onmouseover) {\n                config.legend_item_onmouseover.call($$, id);\n            } else {\n                $$.d3.select(this).classed(CLASS.legendItemFocused, true);\n                if (!$$.transiting && $$.isTargetToShow(id)) {\n                    $$.api.focus(id);\n                }\n            }\n        }).on('mouseout', function (id) {\n            if (config.legend_item_onmouseout) {\n                config.legend_item_onmouseout.call($$, id);\n            } else {\n                $$.d3.select(this).classed(CLASS.legendItemFocused, false);\n                $$.api.revert();\n            }\n        });\n        l.append('text').text(function (id) {\n            return isDefined(config.data_names[id]) ? config.data_names[id] : id;\n        }).each(function (id, i) {\n            updatePositions(this, id, i);\n        }).style(\"pointer-events\", \"none\").attr('x', $$.isLegendRight || $$.isLegendInset ? xForLegendText : -200).attr('y', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendText);\n        l.append('rect').attr(\"class\", CLASS.legendItemEvent).style('fill-opacity', 0).attr('x', $$.isLegendRight || $$.isLegendInset ? xForLegendRect : -200).attr('y', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendRect);\n        l.append('line').attr('class', CLASS.legendItemTile).style('stroke', $$.color).style(\"pointer-events\", \"none\").attr('x1', $$.isLegendRight || $$.isLegendInset ? x1ForLegendTile : -200).attr('y1', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendTile).attr('x2', $$.isLegendRight || $$.isLegendInset ? x2ForLegendTile : -200).attr('y2', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendTile).attr('stroke-width', config.legend_item_tile_height);\n\n        // Set background for inset legend\n        background = $$.legend.select('.' + CLASS.legendBackground + ' rect');\n        if ($$.isLegendInset && maxWidth > 0 && background.size() === 0) {\n            background = $$.legend.insert('g', '.' + CLASS.legendItem).attr(\"class\", CLASS.legendBackground).append('rect');\n        }\n\n        texts = $$.legend.selectAll('text').data(targetIds).text(function (id) {\n            return isDefined(config.data_names[id]) ? config.data_names[id] : id;\n        }) // MEMO: needed for update\n        .each(function (id, i) {\n            updatePositions(this, id, i);\n        });\n        (withTransition ? texts.transition() : texts).attr('x', xForLegendText).attr('y', yForLegendText);\n\n        rects = $$.legend.selectAll('rect.' + CLASS.legendItemEvent).data(targetIds);\n        (withTransition ? rects.transition() : rects).attr('width', function (id) {\n            return widths[id];\n        }).attr('height', function (id) {\n            return heights[id];\n        }).attr('x', xForLegendRect).attr('y', yForLegendRect);\n\n        tiles = $$.legend.selectAll('line.' + CLASS.legendItemTile).data(targetIds);\n        (withTransition ? tiles.transition() : tiles).style('stroke', $$.levelColor ? function (id) {\n            return $$.levelColor($$.cache[id].values[0].value);\n        } : $$.color).attr('x1', x1ForLegendTile).attr('y1', yForLegendTile).attr('x2', x2ForLegendTile).attr('y2', yForLegendTile);\n\n        if (background) {\n            (withTransition ? background.transition() : background).attr('height', $$.getLegendHeight() - 12).attr('width', maxWidth * (step + 1) + 10);\n        }\n\n        // toggle legend state\n        $$.legend.selectAll('.' + CLASS.legendItem).classed(CLASS.legendItemHidden, function (id) {\n            return !$$.isTargetToShow(id);\n        });\n\n        // Update all to reflect change of legend\n        $$.updateLegendItemWidth(maxWidth);\n        $$.updateLegendItemHeight(maxHeight);\n        $$.updateLegendStep(step);\n        // Update size and scale\n        $$.updateSizes();\n        $$.updateScales();\n        $$.updateSvgSize();\n        // Update g positions\n        $$.transformAll(withTransitionForTransform, transitions);\n        $$.legendHasRendered = true;\n    };\n\n    c3_chart_internal_fn.initRegion = function () {\n        var $$ = this;\n        $$.region = $$.main.append('g').attr(\"clip-path\", $$.clipPath).attr(\"class\", CLASS.regions);\n    };\n    c3_chart_internal_fn.updateRegion = function (duration) {\n        var $$ = this,\n            config = $$.config;\n\n        // hide if arc type\n        $$.region.style('visibility', $$.hasArcType() ? 'hidden' : 'visible');\n\n        var mainRegion = $$.main.select('.' + CLASS.regions).selectAll('.' + CLASS.region).data(config.regions);\n        var mainRegionEnter = mainRegion.enter().append('rect').attr(\"x\", $$.regionX.bind($$)).attr(\"y\", $$.regionY.bind($$)).attr(\"width\", $$.regionWidth.bind($$)).attr(\"height\", $$.regionHeight.bind($$)).style(\"fill-opacity\", 0);\n        $$.mainRegion = mainRegionEnter.merge(mainRegion).attr('class', $$.classRegion.bind($$));\n        mainRegion.exit().transition().duration(duration).style(\"opacity\", 0).remove();\n    };\n    c3_chart_internal_fn.redrawRegion = function (withTransition, transition) {\n        var $$ = this,\n            regions = $$.mainRegion;\n        return [(withTransition ? regions.transition(transition) : regions).attr(\"x\", $$.regionX.bind($$)).attr(\"y\", $$.regionY.bind($$)).attr(\"width\", $$.regionWidth.bind($$)).attr(\"height\", $$.regionHeight.bind($$)).style(\"fill-opacity\", function (d) {\n            return isValue(d.opacity) ? d.opacity : 0.1;\n        })];\n    };\n    c3_chart_internal_fn.regionX = function (d) {\n        var $$ = this,\n            config = $$.config,\n            xPos,\n            yScale = d.axis === 'y' ? $$.y : $$.y2;\n        if (d.axis === 'y' || d.axis === 'y2') {\n            xPos = config.axis_rotated ? 'start' in d ? yScale(d.start) : 0 : 0;\n        } else {\n            xPos = config.axis_rotated ? 0 : 'start' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.start) : d.start) : 0;\n        }\n        return xPos;\n    };\n    c3_chart_internal_fn.regionY = function (d) {\n        var $$ = this,\n            config = $$.config,\n            yPos,\n            yScale = d.axis === 'y' ? $$.y : $$.y2;\n        if (d.axis === 'y' || d.axis === 'y2') {\n            yPos = config.axis_rotated ? 0 : 'end' in d ? yScale(d.end) : 0;\n        } else {\n            yPos = config.axis_rotated ? 'start' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.start) : d.start) : 0 : 0;\n        }\n        return yPos;\n    };\n    c3_chart_internal_fn.regionWidth = function (d) {\n        var $$ = this,\n            config = $$.config,\n            start = $$.regionX(d),\n            end,\n            yScale = d.axis === 'y' ? $$.y : $$.y2;\n        if (d.axis === 'y' || d.axis === 'y2') {\n            end = config.axis_rotated ? 'end' in d ? yScale(d.end) : $$.width : $$.width;\n        } else {\n            end = config.axis_rotated ? $$.width : 'end' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.end) : d.end) : $$.width;\n        }\n        return end < start ? 0 : end - start;\n    };\n    c3_chart_internal_fn.regionHeight = function (d) {\n        var $$ = this,\n            config = $$.config,\n            start = this.regionY(d),\n            end,\n            yScale = d.axis === 'y' ? $$.y : $$.y2;\n        if (d.axis === 'y' || d.axis === 'y2') {\n            end = config.axis_rotated ? $$.height : 'start' in d ? yScale(d.start) : $$.height;\n        } else {\n            end = config.axis_rotated ? 'end' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.end) : d.end) : $$.height : $$.height;\n        }\n        return end < start ? 0 : end - start;\n    };\n    c3_chart_internal_fn.isRegionOnX = function (d) {\n        return !d.axis || d.axis === 'x';\n    };\n\n    c3_chart_internal_fn.getScale = function (min, max, forTimeseries) {\n        return (forTimeseries ? this.d3.scaleTime() : this.d3.scaleLinear()).range([min, max]);\n    };\n    c3_chart_internal_fn.getX = function (min, max, domain, offset) {\n        var $$ = this,\n            scale = $$.getScale(min, max, $$.isTimeSeries()),\n            _scale = domain ? scale.domain(domain) : scale,\n            key;\n        // Define customized scale if categorized axis\n        if ($$.isCategorized()) {\n            offset = offset || function () {\n                return 0;\n            };\n            scale = function scale(d, raw) {\n                var v = _scale(d) + offset(d);\n                return raw ? v : Math.ceil(v);\n            };\n        } else {\n            scale = function scale(d, raw) {\n                var v = _scale(d);\n                return raw ? v : Math.ceil(v);\n            };\n        }\n        // define functions\n        for (key in _scale) {\n            scale[key] = _scale[key];\n        }\n        scale.orgDomain = function () {\n            return _scale.domain();\n        };\n        // define custom domain() for categorized axis\n        if ($$.isCategorized()) {\n            scale.domain = function (domain) {\n                if (!arguments.length) {\n                    domain = this.orgDomain();\n                    return [domain[0], domain[1] + 1];\n                }\n                _scale.domain(domain);\n                return scale;\n            };\n        }\n        return scale;\n    };\n    c3_chart_internal_fn.getY = function (min, max, domain) {\n        var scale = this.getScale(min, max, this.isTimeSeriesY());\n        if (domain) {\n            scale.domain(domain);\n        }\n        return scale;\n    };\n    c3_chart_internal_fn.getYScale = function (id) {\n        return this.axis.getId(id) === 'y2' ? this.y2 : this.y;\n    };\n    c3_chart_internal_fn.getSubYScale = function (id) {\n        return this.axis.getId(id) === 'y2' ? this.subY2 : this.subY;\n    };\n    c3_chart_internal_fn.updateScales = function () {\n        var $$ = this,\n            config = $$.config,\n            forInit = !$$.x;\n        // update edges\n        $$.xMin = config.axis_rotated ? 1 : 0;\n        $$.xMax = config.axis_rotated ? $$.height : $$.width;\n        $$.yMin = config.axis_rotated ? 0 : $$.height;\n        $$.yMax = config.axis_rotated ? $$.width : 1;\n        $$.subXMin = $$.xMin;\n        $$.subXMax = $$.xMax;\n        $$.subYMin = config.axis_rotated ? 0 : $$.height2;\n        $$.subYMax = config.axis_rotated ? $$.width2 : 1;\n        // update scales\n        $$.x = $$.getX($$.xMin, $$.xMax, forInit ? undefined : $$.x.orgDomain(), function () {\n            return $$.xAxis.tickOffset();\n        });\n        $$.y = $$.getY($$.yMin, $$.yMax, forInit ? config.axis_y_default : $$.y.domain());\n        $$.y2 = $$.getY($$.yMin, $$.yMax, forInit ? config.axis_y2_default : $$.y2.domain());\n        $$.subX = $$.getX($$.xMin, $$.xMax, $$.orgXDomain, function (d) {\n            return d % 1 ? 0 : $$.subXAxis.tickOffset();\n        });\n        $$.subY = $$.getY($$.subYMin, $$.subYMax, forInit ? config.axis_y_default : $$.subY.domain());\n        $$.subY2 = $$.getY($$.subYMin, $$.subYMax, forInit ? config.axis_y2_default : $$.subY2.domain());\n        // update axes\n        $$.xAxisTickFormat = $$.axis.getXAxisTickFormat();\n        $$.xAxisTickValues = $$.axis.getXAxisTickValues();\n        $$.yAxisTickValues = $$.axis.getYAxisTickValues();\n        $$.y2AxisTickValues = $$.axis.getY2AxisTickValues();\n\n        $$.xAxis = $$.axis.getXAxis($$.x, $$.xOrient, $$.xAxisTickFormat, $$.xAxisTickValues, config.axis_x_tick_outer);\n        $$.subXAxis = $$.axis.getXAxis($$.subX, $$.subXOrient, $$.xAxisTickFormat, $$.xAxisTickValues, config.axis_x_tick_outer);\n        $$.yAxis = $$.axis.getYAxis($$.y, $$.yOrient, config.axis_y_tick_format, $$.yAxisTickValues, config.axis_y_tick_outer);\n        $$.y2Axis = $$.axis.getYAxis($$.y2, $$.y2Orient, config.axis_y2_tick_format, $$.y2AxisTickValues, config.axis_y2_tick_outer);\n\n        // Set initialized scales to brush and zoom\n        if (!forInit) {\n            if ($$.brush) {\n                $$.brush.updateScale($$.subX);\n            }\n        }\n        // update for arc\n        if ($$.updateArc) {\n            $$.updateArc();\n        }\n    };\n\n    c3_chart_internal_fn.selectPoint = function (target, d, i) {\n        var $$ = this,\n            config = $$.config,\n            cx = (config.axis_rotated ? $$.circleY : $$.circleX).bind($$),\n            cy = (config.axis_rotated ? $$.circleX : $$.circleY).bind($$),\n            r = $$.pointSelectR.bind($$);\n        config.data_onselected.call($$.api, d, target.node());\n        // add selected-circle on low layer g\n        $$.main.select('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(d.id)).selectAll('.' + CLASS.selectedCircle + '-' + i).data([d]).enter().append('circle').attr(\"class\", function () {\n            return $$.generateClass(CLASS.selectedCircle, i);\n        }).attr(\"cx\", cx).attr(\"cy\", cy).attr(\"stroke\", function () {\n            return $$.color(d);\n        }).attr(\"r\", function (d) {\n            return $$.pointSelectR(d) * 1.4;\n        }).transition().duration(100).attr(\"r\", r);\n    };\n    c3_chart_internal_fn.unselectPoint = function (target, d, i) {\n        var $$ = this;\n        $$.config.data_onunselected.call($$.api, d, target.node());\n        // remove selected-circle from low layer g\n        $$.main.select('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(d.id)).selectAll('.' + CLASS.selectedCircle + '-' + i).transition().duration(100).attr('r', 0).remove();\n    };\n    c3_chart_internal_fn.togglePoint = function (selected, target, d, i) {\n        selected ? this.selectPoint(target, d, i) : this.unselectPoint(target, d, i);\n    };\n    c3_chart_internal_fn.selectPath = function (target, d) {\n        var $$ = this;\n        $$.config.data_onselected.call($$, d, target.node());\n        if ($$.config.interaction_brighten) {\n            target.transition().duration(100).style(\"fill\", function () {\n                return $$.d3.rgb($$.color(d)).brighter(0.75);\n            });\n        }\n    };\n    c3_chart_internal_fn.unselectPath = function (target, d) {\n        var $$ = this;\n        $$.config.data_onunselected.call($$, d, target.node());\n        if ($$.config.interaction_brighten) {\n            target.transition().duration(100).style(\"fill\", function () {\n                return $$.color(d);\n            });\n        }\n    };\n    c3_chart_internal_fn.togglePath = function (selected, target, d, i) {\n        selected ? this.selectPath(target, d, i) : this.unselectPath(target, d, i);\n    };\n    c3_chart_internal_fn.getToggle = function (that, d) {\n        var $$ = this,\n            toggle;\n        if (that.nodeName === 'circle') {\n            if ($$.isStepType(d)) {\n                // circle is hidden in step chart, so treat as within the click area\n                toggle = function toggle() {}; // TODO: how to select step chart?\n            } else {\n                toggle = $$.togglePoint;\n            }\n        } else if (that.nodeName === 'path') {\n            toggle = $$.togglePath;\n        }\n        return toggle;\n    };\n    c3_chart_internal_fn.toggleShape = function (that, d, i) {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config,\n            shape = d3.select(that),\n            isSelected = shape.classed(CLASS.SELECTED),\n            toggle = $$.getToggle(that, d).bind($$);\n\n        if (config.data_selection_enabled && config.data_selection_isselectable(d)) {\n            if (!config.data_selection_multiple) {\n                $$.main.selectAll('.' + CLASS.shapes + (config.data_selection_grouped ? $$.getTargetSelectorSuffix(d.id) : \"\")).selectAll('.' + CLASS.shape).each(function (d, i) {\n                    var shape = d3.select(this);\n                    if (shape.classed(CLASS.SELECTED)) {\n                        toggle(false, shape.classed(CLASS.SELECTED, false), d, i);\n                    }\n                });\n            }\n            shape.classed(CLASS.SELECTED, !isSelected);\n            toggle(!isSelected, shape, d, i);\n        }\n    };\n\n    c3_chart_internal_fn.initBar = function () {\n        var $$ = this;\n        $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartBars);\n    };\n    c3_chart_internal_fn.updateTargetsForBar = function (targets) {\n        var $$ = this,\n            config = $$.config,\n            mainBars,\n            mainBarEnter,\n            classChartBar = $$.classChartBar.bind($$),\n            classBars = $$.classBars.bind($$),\n            classFocus = $$.classFocus.bind($$);\n        mainBars = $$.main.select('.' + CLASS.chartBars).selectAll('.' + CLASS.chartBar).data(targets).attr('class', function (d) {\n            return classChartBar(d) + classFocus(d);\n        });\n        mainBarEnter = mainBars.enter().append('g').attr('class', classChartBar).style(\"pointer-events\", \"none\");\n        // Bars for each data\n        mainBarEnter.append('g').attr(\"class\", classBars).style(\"cursor\", function (d) {\n            return config.data_selection_isselectable(d) ? \"pointer\" : null;\n        });\n    };\n    c3_chart_internal_fn.updateBar = function (durationForExit) {\n        var $$ = this,\n            barData = $$.barData.bind($$),\n            classBar = $$.classBar.bind($$),\n            initialOpacity = $$.initialOpacity.bind($$),\n            color = function color(d) {\n            return $$.color(d.id);\n        };\n        var mainBar = $$.main.selectAll('.' + CLASS.bars).selectAll('.' + CLASS.bar).data(barData);\n        var mainBarEnter = mainBar.enter().append('path').attr(\"class\", classBar).style(\"stroke\", color).style(\"fill\", color);\n        $$.mainBar = mainBarEnter.merge(mainBar).style(\"opacity\", initialOpacity);\n        mainBar.exit().transition().duration(durationForExit).style(\"opacity\", 0);\n    };\n    c3_chart_internal_fn.redrawBar = function (drawBar, withTransition, transition) {\n        return [(withTransition ? this.mainBar.transition(transition) : this.mainBar).attr('d', drawBar).style(\"stroke\", this.color).style(\"fill\", this.color).style(\"opacity\", 1)];\n    };\n    c3_chart_internal_fn.getBarW = function (axis, barTargetsNum) {\n        var $$ = this,\n            config = $$.config,\n            w = typeof config.bar_width === 'number' ? config.bar_width : barTargetsNum ? axis.tickInterval() * config.bar_width_ratio / barTargetsNum : 0;\n        return config.bar_width_max && w > config.bar_width_max ? config.bar_width_max : w;\n    };\n    c3_chart_internal_fn.getBars = function (i, id) {\n        var $$ = this;\n        return (id ? $$.main.selectAll('.' + CLASS.bars + $$.getTargetSelectorSuffix(id)) : $$.main).selectAll('.' + CLASS.bar + (isValue(i) ? '-' + i : ''));\n    };\n    c3_chart_internal_fn.expandBars = function (i, id, reset) {\n        var $$ = this;\n        if (reset) {\n            $$.unexpandBars();\n        }\n        $$.getBars(i, id).classed(CLASS.EXPANDED, true);\n    };\n    c3_chart_internal_fn.unexpandBars = function (i) {\n        var $$ = this;\n        $$.getBars(i).classed(CLASS.EXPANDED, false);\n    };\n    c3_chart_internal_fn.generateDrawBar = function (barIndices, isSub) {\n        var $$ = this,\n            config = $$.config,\n            getPoints = $$.generateGetBarPoints(barIndices, isSub);\n        return function (d, i) {\n            // 4 points that make a bar\n            var points = getPoints(d, i);\n\n            // switch points if axis is rotated, not applicable for sub chart\n            var indexX = config.axis_rotated ? 1 : 0;\n            var indexY = config.axis_rotated ? 0 : 1;\n\n            var path = 'M ' + points[0][indexX] + ',' + points[0][indexY] + ' ' + 'L' + points[1][indexX] + ',' + points[1][indexY] + ' ' + 'L' + points[2][indexX] + ',' + points[2][indexY] + ' ' + 'L' + points[3][indexX] + ',' + points[3][indexY] + ' ' + 'z';\n\n            return path;\n        };\n    };\n    c3_chart_internal_fn.generateGetBarPoints = function (barIndices, isSub) {\n        var $$ = this,\n            axis = isSub ? $$.subXAxis : $$.xAxis,\n            barTargetsNum = barIndices.__max__ + 1,\n            barW = $$.getBarW(axis, barTargetsNum),\n            barX = $$.getShapeX(barW, barTargetsNum, barIndices, !!isSub),\n            barY = $$.getShapeY(!!isSub),\n            barOffset = $$.getShapeOffset($$.isBarType, barIndices, !!isSub),\n            barSpaceOffset = barW * ($$.config.bar_space / 2),\n            yScale = isSub ? $$.getSubYScale : $$.getYScale;\n        return function (d, i) {\n            var y0 = yScale.call($$, d.id)(0),\n                offset = barOffset(d, i) || y0,\n                // offset is for stacked bar chart\n            posX = barX(d),\n                posY = barY(d);\n            // fix posY not to overflow opposite quadrant\n            if ($$.config.axis_rotated) {\n                if (0 < d.value && posY < y0 || d.value < 0 && y0 < posY) {\n                    posY = y0;\n                }\n            }\n            // 4 points that make a bar\n            return [[posX + barSpaceOffset, offset], [posX + barSpaceOffset, posY - (y0 - offset)], [posX + barW - barSpaceOffset, posY - (y0 - offset)], [posX + barW - barSpaceOffset, offset]];\n        };\n    };\n    c3_chart_internal_fn.isWithinBar = function (mouse, that) {\n        var box = that.getBoundingClientRect(),\n            seg0 = that.pathSegList.getItem(0),\n            seg1 = that.pathSegList.getItem(1),\n            x = Math.min(seg0.x, seg1.x),\n            y = Math.min(seg0.y, seg1.y),\n            w = box.width,\n            h = box.height,\n            offset = 2,\n            sx = x - offset,\n            ex = x + w + offset,\n            sy = y + h + offset,\n            ey = y - offset;\n        return sx < mouse[0] && mouse[0] < ex && ey < mouse[1] && mouse[1] < sy;\n    };\n\n    c3_chart_internal_fn.getShapeIndices = function (typeFilter) {\n        var $$ = this,\n            config = $$.config,\n            indices = {},\n            i = 0,\n            j,\n            k;\n        $$.filterTargetsToShow($$.data.targets.filter(typeFilter, $$)).forEach(function (d) {\n            for (j = 0; j < config.data_groups.length; j++) {\n                if (config.data_groups[j].indexOf(d.id) < 0) {\n                    continue;\n                }\n                for (k = 0; k < config.data_groups[j].length; k++) {\n                    if (config.data_groups[j][k] in indices) {\n                        indices[d.id] = indices[config.data_groups[j][k]];\n                        break;\n                    }\n                }\n            }\n            if (isUndefined(indices[d.id])) {\n                indices[d.id] = i++;\n            }\n        });\n        indices.__max__ = i - 1;\n        return indices;\n    };\n    c3_chart_internal_fn.getShapeX = function (offset, targetsNum, indices, isSub) {\n        var $$ = this,\n            scale = isSub ? $$.subX : $$.x;\n        return function (d) {\n            var index = d.id in indices ? indices[d.id] : 0;\n            return d.x || d.x === 0 ? scale(d.x) - offset * (targetsNum / 2 - index) : 0;\n        };\n    };\n    c3_chart_internal_fn.getShapeY = function (isSub) {\n        var $$ = this;\n        return function (d) {\n            var scale = isSub ? $$.getSubYScale(d.id) : $$.getYScale(d.id);\n            return scale(d.value);\n        };\n    };\n    c3_chart_internal_fn.getShapeOffset = function (typeFilter, indices, isSub) {\n        var $$ = this,\n            targets = $$.orderTargets($$.filterTargetsToShow($$.data.targets.filter(typeFilter, $$))),\n            targetIds = targets.map(function (t) {\n            return t.id;\n        });\n        return function (d, i) {\n            var scale = isSub ? $$.getSubYScale(d.id) : $$.getYScale(d.id),\n                y0 = scale(0),\n                offset = y0;\n            targets.forEach(function (t) {\n                var values = $$.isStepType(d) ? $$.convertValuesToStep(t.values) : t.values;\n                if (t.id === d.id || indices[t.id] !== indices[d.id]) {\n                    return;\n                }\n                if (targetIds.indexOf(t.id) < targetIds.indexOf(d.id)) {\n                    // check if the x values line up\n                    if (typeof values[i] === 'undefined' || +values[i].x !== +d.x) {\n                        // \"+\" for timeseries\n                        // if not, try to find the value that does line up\n                        i = -1;\n                        values.forEach(function (v, j) {\n                            if (v.x === d.x) {\n                                i = j;\n                            }\n                        });\n                    }\n                    if (i in values && values[i].value * d.value >= 0) {\n                        offset += scale(values[i].value) - y0;\n                    }\n                }\n            });\n            return offset;\n        };\n    };\n    c3_chart_internal_fn.isWithinShape = function (that, d) {\n        var $$ = this,\n            shape = $$.d3.select(that),\n            isWithin;\n        if (!$$.isTargetToShow(d.id)) {\n            isWithin = false;\n        } else if (that.nodeName === 'circle') {\n            isWithin = $$.isStepType(d) ? $$.isWithinStep(that, $$.getYScale(d.id)(d.value)) : $$.isWithinCircle(that, $$.pointSelectR(d) * 1.5);\n        } else if (that.nodeName === 'path') {\n            isWithin = shape.classed(CLASS.bar) ? $$.isWithinBar($$.d3.mouse(that), that) : true;\n        }\n        return isWithin;\n    };\n\n    c3_chart_internal_fn.getInterpolate = function (d) {\n        var $$ = this,\n            d3 = $$.d3,\n            types = {\n            'linear': d3.curveLinear,\n            'linear-closed': d3.curveLinearClosed,\n            'basis': d3.curveBasis,\n            'basis-open': d3.curveBasisOpen,\n            'basis-closed': d3.curveBasisClosed,\n            'bundle': d3.curveBundle,\n            'cardinal': d3.curveCardinal,\n            'cardinal-open': d3.curveCardinalOpen,\n            'cardinal-closed': d3.curveCardinalClosed,\n            'monotone': d3.curveMonotoneX,\n            'step': d3.curveStep,\n            'step-before': d3.curveStepBefore,\n            'step-after': d3.curveStepAfter\n        },\n            type;\n\n        if ($$.isSplineType(d)) {\n            type = types[$$.config.spline_interpolation_type] || types.cardinal;\n        } else if ($$.isStepType(d)) {\n            type = types[$$.config.line_step_type];\n        } else {\n            type = types.linear;\n        }\n        return type;\n    };\n\n    c3_chart_internal_fn.initLine = function () {\n        var $$ = this;\n        $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartLines);\n    };\n    c3_chart_internal_fn.updateTargetsForLine = function (targets) {\n        var $$ = this,\n            config = $$.config,\n            mainLines,\n            mainLineEnter,\n            classChartLine = $$.classChartLine.bind($$),\n            classLines = $$.classLines.bind($$),\n            classAreas = $$.classAreas.bind($$),\n            classCircles = $$.classCircles.bind($$),\n            classFocus = $$.classFocus.bind($$);\n        mainLines = $$.main.select('.' + CLASS.chartLines).selectAll('.' + CLASS.chartLine).data(targets).attr('class', function (d) {\n            return classChartLine(d) + classFocus(d);\n        });\n        mainLineEnter = mainLines.enter().append('g').attr('class', classChartLine).style('opacity', 0).style(\"pointer-events\", \"none\");\n        // Lines for each data\n        mainLineEnter.append('g').attr(\"class\", classLines);\n        // Areas\n        mainLineEnter.append('g').attr('class', classAreas);\n        // Circles for each data point on lines\n        mainLineEnter.append('g').attr(\"class\", function (d) {\n            return $$.generateClass(CLASS.selectedCircles, d.id);\n        });\n        mainLineEnter.append('g').attr(\"class\", classCircles).style(\"cursor\", function (d) {\n            return config.data_selection_isselectable(d) ? \"pointer\" : null;\n        });\n        // Update date for selected circles\n        targets.forEach(function (t) {\n            $$.main.selectAll('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(t.id)).selectAll('.' + CLASS.selectedCircle).each(function (d) {\n                d.value = t.values[d.index].value;\n            });\n        });\n        // MEMO: can not keep same color...\n        //mainLineUpdate.exit().remove();\n    };\n    c3_chart_internal_fn.updateLine = function (durationForExit) {\n        var $$ = this;\n        var mainLine = $$.main.selectAll('.' + CLASS.lines).selectAll('.' + CLASS.line).data($$.lineData.bind($$));\n        var mainLineEnter = mainLine.enter().append('path').attr('class', $$.classLine.bind($$)).style(\"stroke\", $$.color);\n        $$.mainLine = mainLineEnter.merge(mainLine).style(\"opacity\", $$.initialOpacity.bind($$)).style('shape-rendering', function (d) {\n            return $$.isStepType(d) ? 'crispEdges' : '';\n        }).attr('transform', null);\n        mainLine.exit().transition().duration(durationForExit).style('opacity', 0);\n    };\n    c3_chart_internal_fn.redrawLine = function (drawLine, withTransition, transition) {\n        return [(withTransition ? this.mainLine.transition(transition) : this.mainLine).attr(\"d\", drawLine).style(\"stroke\", this.color).style(\"opacity\", 1)];\n    };\n    c3_chart_internal_fn.generateDrawLine = function (lineIndices, isSub) {\n        var $$ = this,\n            config = $$.config,\n            line = $$.d3.line(),\n            getPoints = $$.generateGetLinePoints(lineIndices, isSub),\n            yScaleGetter = isSub ? $$.getSubYScale : $$.getYScale,\n            xValue = function xValue(d) {\n            return (isSub ? $$.subxx : $$.xx).call($$, d);\n        },\n            yValue = function yValue(d, i) {\n            return config.data_groups.length > 0 ? getPoints(d, i)[0][1] : yScaleGetter.call($$, d.id)(d.value);\n        };\n\n        line = config.axis_rotated ? line.x(yValue).y(xValue) : line.x(xValue).y(yValue);\n        if (!config.line_connectNull) {\n            line = line.defined(function (d) {\n                return d.value != null;\n            });\n        }\n        return function (d) {\n            var values = config.line_connectNull ? $$.filterRemoveNull(d.values) : d.values,\n                x = isSub ? $$.subX : $$.x,\n                y = yScaleGetter.call($$, d.id),\n                x0 = 0,\n                y0 = 0,\n                path;\n            if ($$.isLineType(d)) {\n                if (config.data_regions[d.id]) {\n                    path = $$.lineWithRegions(values, x, y, config.data_regions[d.id]);\n                } else {\n                    if ($$.isStepType(d)) {\n                        values = $$.convertValuesToStep(values);\n                    }\n                    path = line.curve($$.getInterpolate(d))(values);\n                }\n            } else {\n                if (values[0]) {\n                    x0 = x(values[0].x);\n                    y0 = y(values[0].value);\n                }\n                path = config.axis_rotated ? \"M \" + y0 + \" \" + x0 : \"M \" + x0 + \" \" + y0;\n            }\n            return path ? path : \"M 0 0\";\n        };\n    };\n    c3_chart_internal_fn.generateGetLinePoints = function (lineIndices, isSub) {\n        // partial duplication of generateGetBarPoints\n        var $$ = this,\n            config = $$.config,\n            lineTargetsNum = lineIndices.__max__ + 1,\n            x = $$.getShapeX(0, lineTargetsNum, lineIndices, !!isSub),\n            y = $$.getShapeY(!!isSub),\n            lineOffset = $$.getShapeOffset($$.isLineType, lineIndices, !!isSub),\n            yScale = isSub ? $$.getSubYScale : $$.getYScale;\n        return function (d, i) {\n            var y0 = yScale.call($$, d.id)(0),\n                offset = lineOffset(d, i) || y0,\n                // offset is for stacked area chart\n            posX = x(d),\n                posY = y(d);\n            // fix posY not to overflow opposite quadrant\n            if (config.axis_rotated) {\n                if (0 < d.value && posY < y0 || d.value < 0 && y0 < posY) {\n                    posY = y0;\n                }\n            }\n            // 1 point that marks the line position\n            return [[posX, posY - (y0 - offset)], [posX, posY - (y0 - offset)], // needed for compatibility\n            [posX, posY - (y0 - offset)], // needed for compatibility\n            [posX, posY - (y0 - offset)] // needed for compatibility\n            ];\n        };\n    };\n\n    c3_chart_internal_fn.lineWithRegions = function (d, x, y, _regions) {\n        var $$ = this,\n            config = $$.config,\n            prev = -1,\n            i,\n            j,\n            s = \"M\",\n            sWithRegion,\n            xp,\n            yp,\n            dx,\n            dy,\n            dd,\n            diff,\n            diffx2,\n            xOffset = $$.isCategorized() ? 0.5 : 0,\n            xValue,\n            yValue,\n            regions = [];\n\n        function isWithinRegions(x, regions) {\n            var i;\n            for (i = 0; i < regions.length; i++) {\n                if (regions[i].start < x && x <= regions[i].end) {\n                    return true;\n                }\n            }\n            return false;\n        }\n\n        // Check start/end of regions\n        if (isDefined(_regions)) {\n            for (i = 0; i < _regions.length; i++) {\n                regions[i] = {};\n                if (isUndefined(_regions[i].start)) {\n                    regions[i].start = d[0].x;\n                } else {\n                    regions[i].start = $$.isTimeSeries() ? $$.parseDate(_regions[i].start) : _regions[i].start;\n                }\n                if (isUndefined(_regions[i].end)) {\n                    regions[i].end = d[d.length - 1].x;\n                } else {\n                    regions[i].end = $$.isTimeSeries() ? $$.parseDate(_regions[i].end) : _regions[i].end;\n                }\n            }\n        }\n\n        // Set scales\n        xValue = config.axis_rotated ? function (d) {\n            return y(d.value);\n        } : function (d) {\n            return x(d.x);\n        };\n        yValue = config.axis_rotated ? function (d) {\n            return x(d.x);\n        } : function (d) {\n            return y(d.value);\n        };\n\n        // Define svg generator function for region\n        function generateM(points) {\n            return 'M' + points[0][0] + ' ' + points[0][1] + ' ' + points[1][0] + ' ' + points[1][1];\n        }\n        if ($$.isTimeSeries()) {\n            sWithRegion = function sWithRegion(d0, d1, j, diff) {\n                var x0 = d0.x.getTime(),\n                    x_diff = d1.x - d0.x,\n                    xv0 = new Date(x0 + x_diff * j),\n                    xv1 = new Date(x0 + x_diff * (j + diff)),\n                    points;\n                if (config.axis_rotated) {\n                    points = [[y(yp(j)), x(xv0)], [y(yp(j + diff)), x(xv1)]];\n                } else {\n                    points = [[x(xv0), y(yp(j))], [x(xv1), y(yp(j + diff))]];\n                }\n                return generateM(points);\n            };\n        } else {\n            sWithRegion = function sWithRegion(d0, d1, j, diff) {\n                var points;\n                if (config.axis_rotated) {\n                    points = [[y(yp(j), true), x(xp(j))], [y(yp(j + diff), true), x(xp(j + diff))]];\n                } else {\n                    points = [[x(xp(j), true), y(yp(j))], [x(xp(j + diff), true), y(yp(j + diff))]];\n                }\n                return generateM(points);\n            };\n        }\n\n        // Generate\n        for (i = 0; i < d.length; i++) {\n\n            // Draw as normal\n            if (isUndefined(regions) || !isWithinRegions(d[i].x, regions)) {\n                s += \" \" + xValue(d[i]) + \" \" + yValue(d[i]);\n            }\n            // Draw with region // TODO: Fix for horizotal charts\n            else {\n                    xp = $$.getScale(d[i - 1].x + xOffset, d[i].x + xOffset, $$.isTimeSeries());\n                    yp = $$.getScale(d[i - 1].value, d[i].value);\n\n                    dx = x(d[i].x) - x(d[i - 1].x);\n                    dy = y(d[i].value) - y(d[i - 1].value);\n                    dd = Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));\n                    diff = 2 / dd;\n                    diffx2 = diff * 2;\n\n                    for (j = diff; j <= 1; j += diffx2) {\n                        s += sWithRegion(d[i - 1], d[i], j, diff);\n                    }\n                }\n            prev = d[i].x;\n        }\n\n        return s;\n    };\n\n    c3_chart_internal_fn.updateArea = function (durationForExit) {\n        var $$ = this,\n            d3 = $$.d3;\n        var mainArea = $$.main.selectAll('.' + CLASS.areas).selectAll('.' + CLASS.area).data($$.lineData.bind($$));\n        var mainAreaEnter = mainArea.enter().append('path').attr(\"class\", $$.classArea.bind($$)).style(\"fill\", $$.color).style(\"opacity\", function () {\n            $$.orgAreaOpacity = +d3.select(this).style('opacity');return 0;\n        });\n        $$.mainArea = mainAreaEnter.merge(mainArea).style(\"opacity\", $$.orgAreaOpacity);\n        mainArea.exit().transition().duration(durationForExit).style('opacity', 0);\n    };\n    c3_chart_internal_fn.redrawArea = function (drawArea, withTransition, transition) {\n        return [(withTransition ? this.mainArea.transition(transition) : this.mainArea).attr(\"d\", drawArea).style(\"fill\", this.color).style(\"opacity\", this.orgAreaOpacity)];\n    };\n    c3_chart_internal_fn.generateDrawArea = function (areaIndices, isSub) {\n        var $$ = this,\n            config = $$.config,\n            area = $$.d3.area(),\n            getPoints = $$.generateGetAreaPoints(areaIndices, isSub),\n            yScaleGetter = isSub ? $$.getSubYScale : $$.getYScale,\n            xValue = function xValue(d) {\n            return (isSub ? $$.subxx : $$.xx).call($$, d);\n        },\n            value0 = function value0(d, i) {\n            return config.data_groups.length > 0 ? getPoints(d, i)[0][1] : yScaleGetter.call($$, d.id)($$.getAreaBaseValue(d.id));\n        },\n            value1 = function value1(d, i) {\n            return config.data_groups.length > 0 ? getPoints(d, i)[1][1] : yScaleGetter.call($$, d.id)(d.value);\n        };\n\n        area = config.axis_rotated ? area.x0(value0).x1(value1).y(xValue) : area.x(xValue).y0(config.area_above ? 0 : value0).y1(value1);\n        if (!config.line_connectNull) {\n            area = area.defined(function (d) {\n                return d.value !== null;\n            });\n        }\n\n        return function (d) {\n            var values = config.line_connectNull ? $$.filterRemoveNull(d.values) : d.values,\n                x0 = 0,\n                y0 = 0,\n                path;\n            if ($$.isAreaType(d)) {\n                if ($$.isStepType(d)) {\n                    values = $$.convertValuesToStep(values);\n                }\n                path = area.curve($$.getInterpolate(d))(values);\n            } else {\n                if (values[0]) {\n                    x0 = $$.x(values[0].x);\n                    y0 = $$.getYScale(d.id)(values[0].value);\n                }\n                path = config.axis_rotated ? \"M \" + y0 + \" \" + x0 : \"M \" + x0 + \" \" + y0;\n            }\n            return path ? path : \"M 0 0\";\n        };\n    };\n    c3_chart_internal_fn.getAreaBaseValue = function () {\n        return 0;\n    };\n    c3_chart_internal_fn.generateGetAreaPoints = function (areaIndices, isSub) {\n        // partial duplication of generateGetBarPoints\n        var $$ = this,\n            config = $$.config,\n            areaTargetsNum = areaIndices.__max__ + 1,\n            x = $$.getShapeX(0, areaTargetsNum, areaIndices, !!isSub),\n            y = $$.getShapeY(!!isSub),\n            areaOffset = $$.getShapeOffset($$.isAreaType, areaIndices, !!isSub),\n            yScale = isSub ? $$.getSubYScale : $$.getYScale;\n        return function (d, i) {\n            var y0 = yScale.call($$, d.id)(0),\n                offset = areaOffset(d, i) || y0,\n                // offset is for stacked area chart\n            posX = x(d),\n                posY = y(d);\n            // fix posY not to overflow opposite quadrant\n            if (config.axis_rotated) {\n                if (0 < d.value && posY < y0 || d.value < 0 && y0 < posY) {\n                    posY = y0;\n                }\n            }\n            // 1 point that marks the area position\n            return [[posX, offset], [posX, posY - (y0 - offset)], [posX, posY - (y0 - offset)], // needed for compatibility\n            [posX, offset] // needed for compatibility\n            ];\n        };\n    };\n\n    c3_chart_internal_fn.updateCircle = function (cx, cy) {\n        var $$ = this;\n        var mainCircle = $$.main.selectAll('.' + CLASS.circles).selectAll('.' + CLASS.circle).data($$.lineOrScatterData.bind($$));\n        var mainCircleEnter = mainCircle.enter().append(\"circle\").attr(\"class\", $$.classCircle.bind($$)).attr(\"cx\", cx).attr(\"cy\", cy).attr(\"r\", $$.pointR.bind($$)).style(\"fill\", $$.color);\n        $$.mainCircle = mainCircleEnter.merge(mainCircle).style(\"opacity\", $$.initialOpacityForCircle.bind($$));\n        mainCircle.exit().style(\"opacity\", 0);\n    };\n    c3_chart_internal_fn.redrawCircle = function (cx, cy, withTransition, transition) {\n        var $$ = this,\n            selectedCircles = $$.main.selectAll('.' + CLASS.selectedCircle);\n        return [(withTransition ? $$.mainCircle.transition(transition) : $$.mainCircle).style('opacity', this.opacityForCircle.bind($$)).style(\"fill\", $$.color).attr(\"cx\", cx).attr(\"cy\", cy), (withTransition ? selectedCircles.transition(transition) : selectedCircles).attr(\"cx\", cx).attr(\"cy\", cy)];\n    };\n    c3_chart_internal_fn.circleX = function (d) {\n        return d.x || d.x === 0 ? this.x(d.x) : null;\n    };\n    c3_chart_internal_fn.updateCircleY = function () {\n        var $$ = this,\n            lineIndices,\n            getPoints;\n        if ($$.config.data_groups.length > 0) {\n            lineIndices = $$.getShapeIndices($$.isLineType), getPoints = $$.generateGetLinePoints(lineIndices);\n            $$.circleY = function (d, i) {\n                return getPoints(d, i)[0][1];\n            };\n        } else {\n            $$.circleY = function (d) {\n                return $$.getYScale(d.id)(d.value);\n            };\n        }\n    };\n    c3_chart_internal_fn.getCircles = function (i, id) {\n        var $$ = this;\n        return (id ? $$.main.selectAll('.' + CLASS.circles + $$.getTargetSelectorSuffix(id)) : $$.main).selectAll('.' + CLASS.circle + (isValue(i) ? '-' + i : ''));\n    };\n    c3_chart_internal_fn.expandCircles = function (i, id, reset) {\n        var $$ = this,\n            r = $$.pointExpandedR.bind($$);\n        if (reset) {\n            $$.unexpandCircles();\n        }\n        $$.getCircles(i, id).classed(CLASS.EXPANDED, true).attr('r', r);\n    };\n    c3_chart_internal_fn.unexpandCircles = function (i) {\n        var $$ = this,\n            r = $$.pointR.bind($$);\n        $$.getCircles(i).filter(function () {\n            return $$.d3.select(this).classed(CLASS.EXPANDED);\n        }).classed(CLASS.EXPANDED, false).attr('r', r);\n    };\n    c3_chart_internal_fn.pointR = function (d) {\n        var $$ = this,\n            config = $$.config;\n        return $$.isStepType(d) ? 0 : isFunction(config.point_r) ? config.point_r(d) : config.point_r;\n    };\n    c3_chart_internal_fn.pointExpandedR = function (d) {\n        var $$ = this,\n            config = $$.config;\n        if (config.point_focus_expand_enabled) {\n            return isFunction(config.point_focus_expand_r) ? config.point_focus_expand_r(d) : config.point_focus_expand_r ? config.point_focus_expand_r : $$.pointR(d) * 1.75;\n        } else {\n            return $$.pointR(d);\n        }\n    };\n    c3_chart_internal_fn.pointSelectR = function (d) {\n        var $$ = this,\n            config = $$.config;\n        return isFunction(config.point_select_r) ? config.point_select_r(d) : config.point_select_r ? config.point_select_r : $$.pointR(d) * 4;\n    };\n    c3_chart_internal_fn.isWithinCircle = function (that, r) {\n        var d3 = this.d3,\n            mouse = d3.mouse(that),\n            d3_this = d3.select(that),\n            cx = +d3_this.attr(\"cx\"),\n            cy = +d3_this.attr(\"cy\");\n        return Math.sqrt(Math.pow(cx - mouse[0], 2) + Math.pow(cy - mouse[1], 2)) < r;\n    };\n    c3_chart_internal_fn.isWithinStep = function (that, y) {\n        return Math.abs(y - this.d3.mouse(that)[1]) < 30;\n    };\n\n    c3_chart_internal_fn.getCurrentWidth = function () {\n        var $$ = this,\n            config = $$.config;\n        return config.size_width ? config.size_width : $$.getParentWidth();\n    };\n    c3_chart_internal_fn.getCurrentHeight = function () {\n        var $$ = this,\n            config = $$.config,\n            h = config.size_height ? config.size_height : $$.getParentHeight();\n        return h > 0 ? h : 320 / ($$.hasType('gauge') && !config.gauge_fullCircle ? 2 : 1);\n    };\n    c3_chart_internal_fn.getCurrentPaddingTop = function () {\n        var $$ = this,\n            config = $$.config,\n            padding = isValue(config.padding_top) ? config.padding_top : 0;\n        if ($$.title && $$.title.node()) {\n            padding += $$.getTitlePadding();\n        }\n        return padding;\n    };\n    c3_chart_internal_fn.getCurrentPaddingBottom = function () {\n        var config = this.config;\n        return isValue(config.padding_bottom) ? config.padding_bottom : 0;\n    };\n    c3_chart_internal_fn.getCurrentPaddingLeft = function (withoutRecompute) {\n        var $$ = this,\n            config = $$.config;\n        if (isValue(config.padding_left)) {\n            return config.padding_left;\n        } else if (config.axis_rotated) {\n            return !config.axis_x_show || config.axis_x_inner ? 1 : Math.max(ceil10($$.getAxisWidthByAxisId('x', withoutRecompute)), 40);\n        } else if (!config.axis_y_show || config.axis_y_inner) {\n            // && !config.axis_rotated\n            return $$.axis.getYAxisLabelPosition().isOuter ? 30 : 1;\n        } else {\n            return ceil10($$.getAxisWidthByAxisId('y', withoutRecompute));\n        }\n    };\n    c3_chart_internal_fn.getCurrentPaddingRight = function () {\n        var $$ = this,\n            config = $$.config,\n            defaultPadding = 10,\n            legendWidthOnRight = $$.isLegendRight ? $$.getLegendWidth() + 20 : 0;\n        if (isValue(config.padding_right)) {\n            return config.padding_right + 1; // 1 is needed not to hide tick line\n        } else if (config.axis_rotated) {\n            return defaultPadding + legendWidthOnRight;\n        } else if (!config.axis_y2_show || config.axis_y2_inner) {\n            // && !config.axis_rotated\n            return 2 + legendWidthOnRight + ($$.axis.getY2AxisLabelPosition().isOuter ? 20 : 0);\n        } else {\n            return ceil10($$.getAxisWidthByAxisId('y2')) + legendWidthOnRight;\n        }\n    };\n\n    c3_chart_internal_fn.getParentRectValue = function (key) {\n        var parent = this.selectChart.node(),\n            v;\n        while (parent && parent.tagName !== 'BODY') {\n            try {\n                v = parent.getBoundingClientRect()[key];\n            } catch (e) {\n                if (key === 'width') {\n                    // In IE in certain cases getBoundingClientRect\n                    // will cause an \"unspecified error\"\n                    v = parent.offsetWidth;\n                }\n            }\n            if (v) {\n                break;\n            }\n            parent = parent.parentNode;\n        }\n        return v;\n    };\n    c3_chart_internal_fn.getParentWidth = function () {\n        return this.getParentRectValue('width');\n    };\n    c3_chart_internal_fn.getParentHeight = function () {\n        var h = this.selectChart.style('height');\n        return h.indexOf('px') > 0 ? +h.replace('px', '') : 0;\n    };\n\n    c3_chart_internal_fn.getSvgLeft = function (withoutRecompute) {\n        var $$ = this,\n            config = $$.config,\n            hasLeftAxisRect = config.axis_rotated || !config.axis_rotated && !config.axis_y_inner,\n            leftAxisClass = config.axis_rotated ? CLASS.axisX : CLASS.axisY,\n            leftAxis = $$.main.select('.' + leftAxisClass).node(),\n            svgRect = leftAxis && hasLeftAxisRect ? leftAxis.getBoundingClientRect() : { right: 0 },\n            chartRect = $$.selectChart.node().getBoundingClientRect(),\n            hasArc = $$.hasArcType(),\n            svgLeft = svgRect.right - chartRect.left - (hasArc ? 0 : $$.getCurrentPaddingLeft(withoutRecompute));\n        return svgLeft > 0 ? svgLeft : 0;\n    };\n\n    c3_chart_internal_fn.getAxisWidthByAxisId = function (id, withoutRecompute) {\n        var $$ = this,\n            position = $$.axis.getLabelPositionById(id);\n        return $$.axis.getMaxTickWidth(id, withoutRecompute) + (position.isInner ? 20 : 40);\n    };\n    c3_chart_internal_fn.getHorizontalAxisHeight = function (axisId) {\n        var $$ = this,\n            config = $$.config,\n            h = 30;\n        if (axisId === 'x' && !config.axis_x_show) {\n            return 8;\n        }\n        if (axisId === 'x' && config.axis_x_height) {\n            return config.axis_x_height;\n        }\n        if (axisId === 'y' && !config.axis_y_show) {\n            return config.legend_show && !$$.isLegendRight && !$$.isLegendInset ? 10 : 1;\n        }\n        if (axisId === 'y2' && !config.axis_y2_show) {\n            return $$.rotated_padding_top;\n        }\n        // Calculate x axis height when tick rotated\n        if (axisId === 'x' && !config.axis_rotated && config.axis_x_tick_rotate) {\n            h = 30 + $$.axis.getMaxTickWidth(axisId) * Math.cos(Math.PI * (90 - Math.abs(config.axis_x_tick_rotate)) / 180);\n        }\n        // Calculate y axis height when tick rotated\n        if (axisId === 'y' && config.axis_rotated && config.axis_y_tick_rotate) {\n            h = 30 + $$.axis.getMaxTickWidth(axisId) * Math.cos(Math.PI * (90 - Math.abs(config.axis_y_tick_rotate)) / 180);\n        }\n        return h + ($$.axis.getLabelPositionById(axisId).isInner ? 0 : 10) + (axisId === 'y2' ? -10 : 0);\n    };\n\n    c3_chart_internal_fn.initBrush = function (scale) {\n        var $$ = this,\n            d3 = $$.d3;\n        // TODO: dynamically change brushY/brushX according to axis_rotated.\n        $$.brush = ($$.config.axis_rotated ? d3.brushY() : d3.brushX()).on(\"brush\", function () {\n            var event = d3.event.sourceEvent;\n            if (event && event.type === \"zoom\") {\n                return;\n            }\n            $$.redrawForBrush();\n        }).on(\"end\", function () {\n            var event = d3.event.sourceEvent;\n            if (event && event.type === \"zoom\") {\n                return;\n            }\n            if ($$.brush.empty() && event && event.type !== 'end') {\n                $$.brush.clear();\n            }\n        });\n        $$.brush.updateExtent = function () {\n            var range = this.scale.range(),\n                extent;\n            if ($$.config.axis_rotated) {\n                extent = [[0, range[0]], [$$.width2, range[1]]];\n            } else {\n                extent = [[range[0], 0], [range[1], $$.height2]];\n            }\n            this.extent(extent);\n            return this;\n        };\n        $$.brush.updateScale = function (scale) {\n            this.scale = scale;\n            return this;\n        };\n        $$.brush.update = function (scale) {\n            this.updateScale(scale || $$.subX).updateExtent();\n            $$.context.select('.' + CLASS.brush).call(this);\n        };\n        $$.brush.clear = function () {\n            $$.context.select('.' + CLASS.brush).call($$.brush.move, null);\n        };\n        $$.brush.selection = function () {\n            return d3.brushSelection($$.context.select('.' + CLASS.brush).node());\n        };\n        $$.brush.selectionAsValue = function (selectionAsValue, withTransition) {\n            var selection, brush;\n            if (selectionAsValue) {\n                if ($$.context) {\n                    selection = [this.scale(selectionAsValue[0]), this.scale(selectionAsValue[1])];\n                    brush = $$.context.select('.' + CLASS.brush);\n                    if (withTransition) {\n                        brush = brush.transition();\n                    }\n                    $$.brush.move(brush, selection);\n                }\n                return [];\n            }\n            selection = $$.brush.selection() || [0, 0];\n            return [this.scale.invert(selection[0]), this.scale.invert(selection[1])];\n        };\n        $$.brush.empty = function () {\n            var selection = $$.brush.selection();\n            return !selection || selection[0] === selection[1];\n        };\n        return $$.brush.updateScale(scale);\n    };\n    c3_chart_internal_fn.initSubchart = function () {\n        var $$ = this,\n            config = $$.config,\n            context = $$.context = $$.svg.append(\"g\").attr(\"transform\", $$.getTranslate('context')),\n            visibility = config.subchart_show ? 'visible' : 'hidden';\n\n        // set style\n        context.style('visibility', visibility);\n\n        // Define g for chart area\n        context.append('g').attr(\"clip-path\", $$.clipPathForSubchart).attr('class', CLASS.chart);\n\n        // Define g for bar chart area\n        context.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartBars);\n\n        // Define g for line chart area\n        context.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartLines);\n\n        // Add extent rect for Brush\n        context.append(\"g\").attr(\"clip-path\", $$.clipPath).attr(\"class\", CLASS.brush);\n\n        // ATTENTION: This must be called AFTER chart added\n        // Add Axis\n        $$.axes.subx = context.append(\"g\").attr(\"class\", CLASS.axisX).attr(\"transform\", $$.getTranslate('subx')).attr(\"clip-path\", config.axis_rotated ? \"\" : $$.clipPathForXAxis);\n    };\n    c3_chart_internal_fn.initSubchartBrush = function () {\n        var $$ = this;\n        // Add extent rect for Brush\n        $$.initBrush($$.subX).updateExtent();\n        $$.context.select('.' + CLASS.brush).call($$.brush);\n    };\n    c3_chart_internal_fn.updateTargetsForSubchart = function (targets) {\n        var $$ = this,\n            context = $$.context,\n            config = $$.config,\n            contextLineEnter,\n            contextLine,\n            contextBarEnter,\n            contextBar,\n            classChartBar = $$.classChartBar.bind($$),\n            classBars = $$.classBars.bind($$),\n            classChartLine = $$.classChartLine.bind($$),\n            classLines = $$.classLines.bind($$),\n            classAreas = $$.classAreas.bind($$);\n\n        if (config.subchart_show) {\n            //-- Bar --//\n            contextBar = context.select('.' + CLASS.chartBars).selectAll('.' + CLASS.chartBar).data(targets);\n            contextBarEnter = contextBar.enter().append('g').style('opacity', 0);\n            contextBarEnter.merge(contextBar).attr('class', classChartBar);\n            // Bars for each data\n            contextBarEnter.append('g').attr(\"class\", classBars);\n\n            //-- Line --//\n            contextLine = context.select('.' + CLASS.chartLines).selectAll('.' + CLASS.chartLine).data(targets);\n            contextLineEnter = contextLine.enter().append('g').style('opacity', 0);\n            contextLineEnter.merge(contextLine).attr('class', classChartLine);\n            // Lines for each data\n            contextLineEnter.append(\"g\").attr(\"class\", classLines);\n            // Area\n            contextLineEnter.append(\"g\").attr(\"class\", classAreas);\n\n            //-- Brush --//\n            context.selectAll('.' + CLASS.brush + ' rect').attr(config.axis_rotated ? \"width\" : \"height\", config.axis_rotated ? $$.width2 : $$.height2);\n        }\n    };\n    c3_chart_internal_fn.updateBarForSubchart = function (durationForExit) {\n        var $$ = this;\n        var contextBar = $$.context.selectAll('.' + CLASS.bars).selectAll('.' + CLASS.bar).data($$.barData.bind($$));\n        var contextBarEnter = contextBar.enter().append('path').attr(\"class\", $$.classBar.bind($$)).style(\"stroke\", 'none').style(\"fill\", $$.color);\n        contextBar.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n        $$.contextBar = contextBarEnter.merge(contextBar).style(\"opacity\", $$.initialOpacity.bind($$));\n    };\n    c3_chart_internal_fn.redrawBarForSubchart = function (drawBarOnSub, withTransition, duration) {\n        (withTransition ? this.contextBar.transition(Math.random().toString()).duration(duration) : this.contextBar).attr('d', drawBarOnSub).style('opacity', 1);\n    };\n    c3_chart_internal_fn.updateLineForSubchart = function (durationForExit) {\n        var $$ = this;\n        var contextLine = $$.context.selectAll('.' + CLASS.lines).selectAll('.' + CLASS.line).data($$.lineData.bind($$));\n        var contextLineEnter = contextLine.enter().append('path').attr('class', $$.classLine.bind($$)).style('stroke', $$.color);\n        contextLine.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n        $$.contextLine = contextLineEnter.merge(contextLine).style(\"opacity\", $$.initialOpacity.bind($$));\n    };\n    c3_chart_internal_fn.redrawLineForSubchart = function (drawLineOnSub, withTransition, duration) {\n        (withTransition ? this.contextLine.transition(Math.random().toString()).duration(duration) : this.contextLine).attr(\"d\", drawLineOnSub).style('opacity', 1);\n    };\n    c3_chart_internal_fn.updateAreaForSubchart = function (durationForExit) {\n        var $$ = this,\n            d3 = $$.d3;\n        var contextArea = $$.context.selectAll('.' + CLASS.areas).selectAll('.' + CLASS.area).data($$.lineData.bind($$));\n        var contextAreaEnter = contextArea.enter().append('path').attr(\"class\", $$.classArea.bind($$)).style(\"fill\", $$.color).style(\"opacity\", function () {\n            $$.orgAreaOpacity = +d3.select(this).style('opacity');return 0;\n        });\n        contextArea.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n        $$.contextArea = contextAreaEnter.merge(contextArea).style(\"opacity\", 0);\n    };\n    c3_chart_internal_fn.redrawAreaForSubchart = function (drawAreaOnSub, withTransition, duration) {\n        (withTransition ? this.contextArea.transition(Math.random().toString()).duration(duration) : this.contextArea).attr(\"d\", drawAreaOnSub).style(\"fill\", this.color).style(\"opacity\", this.orgAreaOpacity);\n    };\n    c3_chart_internal_fn.redrawSubchart = function (withSubchart, transitions, duration, durationForExit, areaIndices, barIndices, lineIndices) {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config,\n            drawAreaOnSub,\n            drawBarOnSub,\n            drawLineOnSub;\n\n        $$.context.style('visibility', config.subchart_show ? 'visible' : 'hidden');\n\n        // subchart\n        if (config.subchart_show) {\n            // reflect main chart to extent on subchart if zoomed\n            if (d3.event && d3.event.type === 'zoom') {\n                $$.brush.selectionAsValue($$.x.orgDomain());\n            }\n            // update subchart elements if needed\n            if (withSubchart) {\n                // extent rect\n                if (!$$.brush.empty()) {\n                    $$.brush.selectionAsValue($$.x.orgDomain());\n                }\n                // setup drawer - MEMO: this must be called after axis updated\n                drawAreaOnSub = $$.generateDrawArea(areaIndices, true);\n                drawBarOnSub = $$.generateDrawBar(barIndices, true);\n                drawLineOnSub = $$.generateDrawLine(lineIndices, true);\n\n                $$.updateBarForSubchart(duration);\n                $$.updateLineForSubchart(duration);\n                $$.updateAreaForSubchart(duration);\n\n                $$.redrawBarForSubchart(drawBarOnSub, duration, duration);\n                $$.redrawLineForSubchart(drawLineOnSub, duration, duration);\n                $$.redrawAreaForSubchart(drawAreaOnSub, duration, duration);\n            }\n        }\n    };\n    c3_chart_internal_fn.redrawForBrush = function () {\n        var $$ = this,\n            x = $$.x,\n            d3 = $$.d3,\n            s;\n        $$.redraw({\n            withTransition: false,\n            withY: $$.config.zoom_rescale,\n            withSubchart: false,\n            withUpdateXDomain: true,\n            withEventRect: false,\n            withDimension: false\n        });\n        // update zoom transation binded to event rect\n        s = d3.event.selection || $$.brush.scale.range();\n        $$.main.select('.' + CLASS.eventRect).call($$.zoom.transform, d3.zoomIdentity.scale($$.width / (s[1] - s[0])).translate(-s[0], 0));\n        $$.config.subchart_onbrush.call($$.api, x.orgDomain());\n    };\n    c3_chart_internal_fn.transformContext = function (withTransition, transitions) {\n        var $$ = this,\n            subXAxis;\n        if (transitions && transitions.axisSubX) {\n            subXAxis = transitions.axisSubX;\n        } else {\n            subXAxis = $$.context.select('.' + CLASS.axisX);\n            if (withTransition) {\n                subXAxis = subXAxis.transition();\n            }\n        }\n        $$.context.attr(\"transform\", $$.getTranslate('context'));\n        subXAxis.attr(\"transform\", $$.getTranslate('subx'));\n    };\n    c3_chart_internal_fn.getDefaultSelection = function () {\n        var $$ = this,\n            config = $$.config,\n            selection = isFunction(config.axis_x_selection) ? config.axis_x_selection($$.getXDomain($$.data.targets)) : config.axis_x_selection;\n        if ($$.isTimeSeries()) {\n            selection = [$$.parseDate(selection[0]), $$.parseDate(selection[1])];\n        }\n        return selection;\n    };\n\n    c3_chart_internal_fn.initText = function () {\n        var $$ = this;\n        $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartTexts);\n        $$.mainText = $$.d3.selectAll([]);\n    };\n    c3_chart_internal_fn.updateTargetsForText = function (targets) {\n        var $$ = this,\n            classChartText = $$.classChartText.bind($$),\n            classTexts = $$.classTexts.bind($$),\n            classFocus = $$.classFocus.bind($$);\n        var mainText = $$.main.select('.' + CLASS.chartTexts).selectAll('.' + CLASS.chartText).data(targets);\n        var mainTextEnter = mainText.enter().append('g').attr('class', classChartText).style('opacity', 0).style(\"pointer-events\", \"none\");\n        mainTextEnter.append('g').attr('class', classTexts);\n        mainTextEnter.merge(mainText).attr('class', function (d) {\n            return classChartText(d) + classFocus(d);\n        });\n    };\n    c3_chart_internal_fn.updateText = function (xForText, yForText, durationForExit) {\n        var $$ = this,\n            config = $$.config,\n            barOrLineData = $$.barOrLineData.bind($$),\n            classText = $$.classText.bind($$);\n        var mainText = $$.main.selectAll('.' + CLASS.texts).selectAll('.' + CLASS.text).data(barOrLineData);\n        var mainTextEnter = mainText.enter().append('text').attr(\"class\", classText).attr('text-anchor', function (d) {\n            return config.axis_rotated ? d.value < 0 ? 'end' : 'start' : 'middle';\n        }).style(\"stroke\", 'none').attr('x', xForText).attr('y', yForText).style(\"fill\", function (d) {\n            return $$.color(d);\n        }).style(\"fill-opacity\", 0);\n        $$.mainText = mainTextEnter.merge(mainText).text(function (d, i, j) {\n            return $$.dataLabelFormat(d.id)(d.value, d.id, i, j);\n        });\n        mainText.exit().transition().duration(durationForExit).style('fill-opacity', 0).remove();\n    };\n    c3_chart_internal_fn.redrawText = function (xForText, yForText, forFlow, withTransition, transition) {\n        return [(withTransition ? this.mainText.transition(transition) : this.mainText).attr('x', xForText).attr('y', yForText).style(\"fill\", this.color).style(\"fill-opacity\", forFlow ? 0 : this.opacityForText.bind(this))];\n    };\n    c3_chart_internal_fn.getTextRect = function (text, cls, element) {\n        var dummy = this.d3.select('body').append('div').classed('c3', true),\n            svg = dummy.append(\"svg\").style('visibility', 'hidden').style('position', 'fixed').style('top', 0).style('left', 0),\n            font = this.d3.select(element).style('font'),\n            rect;\n        svg.selectAll('.dummy').data([text]).enter().append('text').classed(cls ? cls : \"\", true).style('font', font).text(text).each(function () {\n            rect = this.getBoundingClientRect();\n        });\n        dummy.remove();\n        return rect;\n    };\n    c3_chart_internal_fn.generateXYForText = function (areaIndices, barIndices, lineIndices, forX) {\n        var $$ = this,\n            getAreaPoints = $$.generateGetAreaPoints(areaIndices, false),\n            getBarPoints = $$.generateGetBarPoints(barIndices, false),\n            getLinePoints = $$.generateGetLinePoints(lineIndices, false),\n            getter = forX ? $$.getXForText : $$.getYForText;\n        return function (d, i) {\n            var getPoints = $$.isAreaType(d) ? getAreaPoints : $$.isBarType(d) ? getBarPoints : getLinePoints;\n            return getter.call($$, getPoints(d, i), d, this);\n        };\n    };\n    c3_chart_internal_fn.getXForText = function (points, d, textElement) {\n        var $$ = this,\n            box = textElement.getBoundingClientRect(),\n            xPos,\n            padding;\n        if ($$.config.axis_rotated) {\n            padding = $$.isBarType(d) ? 4 : 6;\n            xPos = points[2][1] + padding * (d.value < 0 ? -1 : 1);\n        } else {\n            xPos = $$.hasType('bar') ? (points[2][0] + points[0][0]) / 2 : points[0][0];\n        }\n        // show labels regardless of the domain if value is null\n        if (d.value === null) {\n            if (xPos > $$.width) {\n                xPos = $$.width - box.width;\n            } else if (xPos < 0) {\n                xPos = 4;\n            }\n        }\n        return xPos;\n    };\n    c3_chart_internal_fn.getYForText = function (points, d, textElement) {\n        var $$ = this,\n            box = textElement.getBoundingClientRect(),\n            yPos;\n        if ($$.config.axis_rotated) {\n            yPos = (points[0][0] + points[2][0] + box.height * 0.6) / 2;\n        } else {\n            yPos = points[2][1];\n            if (d.value < 0 || d.value === 0 && !$$.hasPositiveValue) {\n                yPos += box.height;\n                if ($$.isBarType(d) && $$.isSafari()) {\n                    yPos -= 3;\n                } else if (!$$.isBarType(d) && $$.isChrome()) {\n                    yPos += 3;\n                }\n            } else {\n                yPos += $$.isBarType(d) ? -3 : -6;\n            }\n        }\n        // show labels regardless of the domain if value is null\n        if (d.value === null && !$$.config.axis_rotated) {\n            if (yPos < box.height) {\n                yPos = box.height;\n            } else if (yPos > this.height) {\n                yPos = this.height - 4;\n            }\n        }\n        return yPos;\n    };\n\n    c3_chart_internal_fn.initTitle = function () {\n        var $$ = this;\n        $$.title = $$.svg.append(\"text\").text($$.config.title_text).attr(\"class\", $$.CLASS.title);\n    };\n    c3_chart_internal_fn.redrawTitle = function () {\n        var $$ = this;\n        $$.title.attr(\"x\", $$.xForTitle.bind($$)).attr(\"y\", $$.yForTitle.bind($$));\n    };\n    c3_chart_internal_fn.xForTitle = function () {\n        var $$ = this,\n            config = $$.config,\n            position = config.title_position || 'left',\n            x;\n        if (position.indexOf('right') >= 0) {\n            x = $$.currentWidth - $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).width - config.title_padding.right;\n        } else if (position.indexOf('center') >= 0) {\n            x = ($$.currentWidth - $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).width) / 2;\n        } else {\n            // left\n            x = config.title_padding.left;\n        }\n        return x;\n    };\n    c3_chart_internal_fn.yForTitle = function () {\n        var $$ = this;\n        return $$.config.title_padding.top + $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).height;\n    };\n    c3_chart_internal_fn.getTitlePadding = function () {\n        var $$ = this;\n        return $$.yForTitle() + $$.config.title_padding.bottom;\n    };\n\n    c3_chart_internal_fn.initTooltip = function () {\n        var $$ = this,\n            config = $$.config,\n            i;\n        $$.tooltip = $$.selectChart.style(\"position\", \"relative\").append(\"div\").attr('class', CLASS.tooltipContainer).style(\"position\", \"absolute\").style(\"pointer-events\", \"none\").style(\"display\", \"none\");\n        // Show tooltip if needed\n        if (config.tooltip_init_show) {\n            if ($$.isTimeSeries() && isString(config.tooltip_init_x)) {\n                config.tooltip_init_x = $$.parseDate(config.tooltip_init_x);\n                for (i = 0; i < $$.data.targets[0].values.length; i++) {\n                    if ($$.data.targets[0].values[i].x - config.tooltip_init_x === 0) {\n                        break;\n                    }\n                }\n                config.tooltip_init_x = i;\n            }\n            $$.tooltip.html(config.tooltip_contents.call($$, $$.data.targets.map(function (d) {\n                return $$.addName(d.values[config.tooltip_init_x]);\n            }), $$.axis.getXAxisTickFormat(), $$.getYFormat($$.hasArcType()), $$.color));\n            $$.tooltip.style(\"top\", config.tooltip_init_position.top).style(\"left\", config.tooltip_init_position.left).style(\"display\", \"block\");\n        }\n    };\n    c3_chart_internal_fn.getTooltipSortFunction = function () {\n        var $$ = this,\n            config = $$.config;\n\n        if (config.data_groups.length === 0 || config.tooltip_order !== undefined) {\n            // if data are not grouped or if an order is specified\n            // for the tooltip values we sort them by their values\n\n            var order = config.tooltip_order;\n            if (order === undefined) {\n                order = config.data_order;\n            }\n\n            var valueOf = function valueOf(obj) {\n                return obj ? obj.value : null;\n            };\n\n            // if data are not grouped, we sort them by their value\n            if (isString(order) && order.toLowerCase() === 'asc') {\n                return function (a, b) {\n                    return valueOf(a) - valueOf(b);\n                };\n            } else if (isString(order) && order.toLowerCase() === 'desc') {\n                return function (a, b) {\n                    return valueOf(b) - valueOf(a);\n                };\n            } else if (isFunction(order)) {\n\n                // if the function is from data_order we need\n                // to wrap the returned function in order to format\n                // the sorted value to the expected format\n\n                var sortFunction = order;\n\n                if (config.tooltip_order === undefined) {\n                    sortFunction = function sortFunction(a, b) {\n                        return order(a ? {\n                            id: a.id,\n                            values: [a]\n                        } : null, b ? {\n                            id: b.id,\n                            values: [b]\n                        } : null);\n                    };\n                }\n\n                return sortFunction;\n            } else if (isArray(order)) {\n                return function (a, b) {\n                    return order.indexOf(a.id) - order.indexOf(b.id);\n                };\n            }\n        } else {\n            // if data are grouped, we follow the order of grouped targets\n            var ids = $$.orderTargets($$.data.targets).map(function (i) {\n                return i.id;\n            });\n\n            // if it was either asc or desc we need to invert the order\n            // returned by orderTargets\n            if ($$.isOrderAsc() || $$.isOrderDesc()) {\n                ids = ids.reverse();\n            }\n\n            return function (a, b) {\n                return ids.indexOf(a.id) - ids.indexOf(b.id);\n            };\n        }\n    };\n    c3_chart_internal_fn.getTooltipContent = function (d, defaultTitleFormat, defaultValueFormat, color) {\n        var $$ = this,\n            config = $$.config,\n            titleFormat = config.tooltip_format_title || defaultTitleFormat,\n            nameFormat = config.tooltip_format_name || function (name) {\n            return name;\n        },\n            valueFormat = config.tooltip_format_value || defaultValueFormat,\n            text,\n            i,\n            title,\n            value,\n            name,\n            bgcolor;\n\n        var tooltipSortFunction = this.getTooltipSortFunction();\n        if (tooltipSortFunction) {\n            d.sort(tooltipSortFunction);\n        }\n\n        for (i = 0; i < d.length; i++) {\n            if (!(d[i] && (d[i].value || d[i].value === 0))) {\n                continue;\n            }\n\n            if (!text) {\n                title = sanitise(titleFormat ? titleFormat(d[i].x) : d[i].x);\n                text = \"<table class='\" + $$.CLASS.tooltip + \"'>\" + (title || title === 0 ? \"<tr><th colspan='2'>\" + title + \"</th></tr>\" : \"\");\n            }\n\n            value = sanitise(valueFormat(d[i].value, d[i].ratio, d[i].id, d[i].index, d));\n            if (value !== undefined) {\n                // Skip elements when their name is set to null\n                if (d[i].name === null) {\n                    continue;\n                }\n                name = sanitise(nameFormat(d[i].name, d[i].ratio, d[i].id, d[i].index));\n                bgcolor = $$.levelColor ? $$.levelColor(d[i].value) : color(d[i].id);\n\n                text += \"<tr class='\" + $$.CLASS.tooltipName + \"-\" + $$.getTargetSelectorSuffix(d[i].id) + \"'>\";\n                text += \"<td class='name'><span style='background-color:\" + bgcolor + \"'></span>\" + name + \"</td>\";\n                text += \"<td class='value'>\" + value + \"</td>\";\n                text += \"</tr>\";\n            }\n        }\n        return text + \"</table>\";\n    };\n    c3_chart_internal_fn.tooltipPosition = function (dataToShow, tWidth, tHeight, element) {\n        var $$ = this,\n            config = $$.config,\n            d3 = $$.d3;\n        var svgLeft, tooltipLeft, tooltipRight, tooltipTop, chartRight;\n        var forArc = $$.hasArcType(),\n            mouse = d3.mouse(element);\n        // Determin tooltip position\n        if (forArc) {\n            tooltipLeft = ($$.width - ($$.isLegendRight ? $$.getLegendWidth() : 0)) / 2 + mouse[0];\n            tooltipTop = ($$.hasType('gauge') ? $$.height : $$.height / 2) + mouse[1] + 20;\n        } else {\n            svgLeft = $$.getSvgLeft(true);\n            if (config.axis_rotated) {\n                tooltipLeft = svgLeft + mouse[0] + 100;\n                tooltipRight = tooltipLeft + tWidth;\n                chartRight = $$.currentWidth - $$.getCurrentPaddingRight();\n                tooltipTop = $$.x(dataToShow[0].x) + 20;\n            } else {\n                tooltipLeft = svgLeft + $$.getCurrentPaddingLeft(true) + $$.x(dataToShow[0].x) + 20;\n                tooltipRight = tooltipLeft + tWidth;\n                chartRight = svgLeft + $$.currentWidth - $$.getCurrentPaddingRight();\n                tooltipTop = mouse[1] + 15;\n            }\n\n            if (tooltipRight > chartRight) {\n                // 20 is needed for Firefox to keep tooltip width\n                tooltipLeft -= tooltipRight - chartRight + 20;\n            }\n            if (tooltipTop + tHeight > $$.currentHeight) {\n                tooltipTop -= tHeight + 30;\n            }\n        }\n        if (tooltipTop < 0) {\n            tooltipTop = 0;\n        }\n        return { top: tooltipTop, left: tooltipLeft };\n    };\n    c3_chart_internal_fn.showTooltip = function (selectedData, element) {\n        var $$ = this,\n            config = $$.config;\n        var tWidth, tHeight, position;\n        var forArc = $$.hasArcType(),\n            dataToShow = selectedData.filter(function (d) {\n            return d && isValue(d.value);\n        }),\n            positionFunction = config.tooltip_position || c3_chart_internal_fn.tooltipPosition;\n        if (dataToShow.length === 0 || !config.tooltip_show) {\n            return;\n        }\n        $$.tooltip.html(config.tooltip_contents.call($$, selectedData, $$.axis.getXAxisTickFormat(), $$.getYFormat(forArc), $$.color)).style(\"display\", \"block\");\n\n        // Get tooltip dimensions\n        tWidth = $$.tooltip.property('offsetWidth');\n        tHeight = $$.tooltip.property('offsetHeight');\n\n        position = positionFunction.call(this, dataToShow, tWidth, tHeight, element);\n        // Set tooltip\n        $$.tooltip.style(\"top\", position.top + \"px\").style(\"left\", position.left + 'px');\n    };\n    c3_chart_internal_fn.hideTooltip = function () {\n        this.tooltip.style(\"display\", \"none\");\n    };\n\n    c3_chart_internal_fn.setTargetType = function (targetIds, type) {\n        var $$ = this,\n            config = $$.config;\n        $$.mapToTargetIds(targetIds).forEach(function (id) {\n            $$.withoutFadeIn[id] = type === config.data_types[id];\n            config.data_types[id] = type;\n        });\n        if (!targetIds) {\n            config.data_type = type;\n        }\n    };\n    c3_chart_internal_fn.hasType = function (type, targets) {\n        var $$ = this,\n            types = $$.config.data_types,\n            has = false;\n        targets = targets || $$.data.targets;\n        if (targets && targets.length) {\n            targets.forEach(function (target) {\n                var t = types[target.id];\n                if (t && t.indexOf(type) >= 0 || !t && type === 'line') {\n                    has = true;\n                }\n            });\n        } else if (Object.keys(types).length) {\n            Object.keys(types).forEach(function (id) {\n                if (types[id] === type) {\n                    has = true;\n                }\n            });\n        } else {\n            has = $$.config.data_type === type;\n        }\n        return has;\n    };\n    c3_chart_internal_fn.hasArcType = function (targets) {\n        return this.hasType('pie', targets) || this.hasType('donut', targets) || this.hasType('gauge', targets);\n    };\n    c3_chart_internal_fn.isLineType = function (d) {\n        var config = this.config,\n            id = isString(d) ? d : d.id;\n        return !config.data_types[id] || ['line', 'spline', 'area', 'area-spline', 'step', 'area-step'].indexOf(config.data_types[id]) >= 0;\n    };\n    c3_chart_internal_fn.isStepType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return ['step', 'area-step'].indexOf(this.config.data_types[id]) >= 0;\n    };\n    c3_chart_internal_fn.isSplineType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return ['spline', 'area-spline'].indexOf(this.config.data_types[id]) >= 0;\n    };\n    c3_chart_internal_fn.isAreaType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return ['area', 'area-spline', 'area-step'].indexOf(this.config.data_types[id]) >= 0;\n    };\n    c3_chart_internal_fn.isBarType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'bar';\n    };\n    c3_chart_internal_fn.isScatterType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'scatter';\n    };\n    c3_chart_internal_fn.isPieType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'pie';\n    };\n    c3_chart_internal_fn.isGaugeType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'gauge';\n    };\n    c3_chart_internal_fn.isDonutType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'donut';\n    };\n    c3_chart_internal_fn.isArcType = function (d) {\n        return this.isPieType(d) || this.isDonutType(d) || this.isGaugeType(d);\n    };\n    c3_chart_internal_fn.lineData = function (d) {\n        return this.isLineType(d) ? [d] : [];\n    };\n    c3_chart_internal_fn.arcData = function (d) {\n        return this.isArcType(d.data) ? [d] : [];\n    };\n    /* not used\n     function scatterData(d) {\n     return isScatterType(d) ? d.values : [];\n     }\n     */\n    c3_chart_internal_fn.barData = function (d) {\n        return this.isBarType(d) ? d.values : [];\n    };\n    c3_chart_internal_fn.lineOrScatterData = function (d) {\n        return this.isLineType(d) || this.isScatterType(d) ? d.values : [];\n    };\n    c3_chart_internal_fn.barOrLineData = function (d) {\n        return this.isBarType(d) || this.isLineType(d) ? d.values : [];\n    };\n\n    c3_chart_internal_fn.isSafari = function () {\n        var ua = window.navigator.userAgent;\n        return ua.indexOf('Safari') >= 0 && ua.indexOf('Chrome') < 0;\n    };\n    c3_chart_internal_fn.isChrome = function () {\n        var ua = window.navigator.userAgent;\n        return ua.indexOf('Chrome') >= 0;\n    };\n\n    c3_chart_internal_fn.initZoom = function () {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config,\n            startEvent;\n\n        $$.zoom = d3.zoom().on(\"start\", function () {\n            var e = d3.event.sourceEvent;\n            if (e && e.type === \"brush\") {\n                return;\n            }\n            startEvent = e;\n            config.zoom_onzoomstart.call($$.api, e);\n        }).on(\"zoom\", function () {\n            var e = d3.event.sourceEvent;\n            if (e && e.type === \"brush\") {\n                return;\n            }\n            $$.redrawForZoom.call($$);\n        }).on('end', function () {\n            var e = d3.event.sourceEvent;\n            if (e && e.type === \"brush\") {\n                return;\n            }\n            // if click, do nothing. otherwise, click interaction will be canceled.\n            if (e && startEvent.clientX === e.clientX && startEvent.clientY === e.clientY) {\n                return;\n            }\n            config.zoom_onzoomend.call($$.api, $$.x.orgDomain());\n        });\n\n        $$.zoom.updateDomain = function () {\n            if (d3.event && d3.event.transform) {\n                $$.x.domain(d3.event.transform.rescaleX($$.subX).domain());\n            }\n            return this;\n        };\n        $$.zoom.updateExtent = function () {\n            this.scaleExtent([1, Infinity]).translateExtent([[0, 0], [$$.width, $$.height]]).extent([[0, 0], [$$.width, $$.height]]);\n            return this;\n        };\n        $$.zoom.update = function () {\n            return this.updateExtent().updateDomain();\n        };\n\n        return $$.zoom.updateExtent();\n    };\n    c3_chart_internal_fn.zoomTransform = function (range) {\n        var $$ = this,\n            s = [$$.x(range[0]), $$.x(range[1])];\n        return $$.d3.zoomIdentity.scale($$.width / (s[1] - s[0])).translate(-s[0], 0);\n    };\n\n    c3_chart_internal_fn.getZoomDomain = function () {\n        var $$ = this,\n            config = $$.config,\n            d3 = $$.d3,\n            min = d3.min([$$.orgXDomain[0], config.zoom_x_min]),\n            max = d3.max([$$.orgXDomain[1], config.zoom_x_max]);\n        return [min, max];\n    };\n    c3_chart_internal_fn.redrawForZoom = function () {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config,\n            zoom = $$.zoom,\n            x = $$.x;\n        if (!config.zoom_enabled) {\n            return;\n        }\n        if ($$.filterTargetsToShow($$.data.targets).length === 0) {\n            return;\n        }\n\n        zoom.update();\n\n        if ($$.isCategorized() && x.orgDomain()[0] === $$.orgXDomain[0]) {\n            x.domain([$$.orgXDomain[0] - 1e-10, x.orgDomain()[1]]);\n        }\n        $$.redraw({\n            withTransition: false,\n            withY: config.zoom_rescale,\n            withSubchart: false,\n            withEventRect: false,\n            withDimension: false\n        });\n        if (d3.event.sourceEvent && d3.event.sourceEvent.type === 'mousemove') {\n            $$.cancelClick = true;\n        }\n        config.zoom_onzoom.call($$.api, x.orgDomain());\n    };\n\n    return c3;\n\n})));\n","import c3 from 'c3';\nimport d3 from 'd3';\n\nimport { each } from '../utils/each';\nimport { extend } from '../utils/extend';\nimport { extendDeep } from '../utils/extend-deep';\nimport isDateString from '../utils/assert-date-string';\nimport c3DefaultDateFormat from './c3/extensions/default-date-format';\nimport c3PaginatingLegend from './c3/extensions/paginating-legend';\nimport c3TooltipContents from './c3/extensions/tooltip-contents';\n\nimport message from './default/message';\nimport metric from './default/metric';\nimport table from './default/table';\nimport spinner from './default/spinner';\n\nconst types = {\n  message,\n  metric,\n  table,\n  spinner,\n};\n\nexport default function(lib) {\n  var timer, delay;\n  bindResizeListener(function(){\n    if (timer) {\n      clearTimeout(timer);\n    }\n    delay = (lib.visuals.length > 12) ? 1000 : 250;\n    timer = setTimeout(function(){\n      each(lib.visuals, function(chart){\n        if (chart.view._artifacts.c3) {\n          chart.view._artifacts.c3.resize();\n        }\n      });\n    }, delay);\n  });\n\n  defineC3();\n  return types;\n};\n\nfunction defineC3(){\n  var c3Types = [\n    // Standard types\n    'area',\n    'area-spline',\n    'area-step',\n    'bar',\n    'donut',\n    'gauge',\n    'line',\n    'pie',\n    'step',\n    'spline',\n\n    // Horizontal variant types\n    'horizontal-area',\n    'horizontal-area-spline',\n    'horizontal-area-step',\n    'horizontal-bar',\n    'horizontal-line',\n    'horizontal-step',\n    'horizontal-spline'\n  ];\n\n  function getDefaultOptions(){\n    var DEFAULT_OPTIONS,\n        ENFORCED_OPTIONS,\n        options;\n\n    DEFAULT_OPTIONS = {\n      axis: {},\n      color: {},\n      data: {\n        order: null\n      },\n      legend: {\n        position: 'right',\n        show: true\n      },\n      padding: {},\n      point: {\n        focus: {\n          expand: {\n            enabled: false\n          }\n        },\n        r: 2,\n        show: true\n      },\n      tooltip: {},\n      transition: {\n        duration: 0\n      }\n    };\n\n    ENFORCED_OPTIONS = {\n      bindto: this.el().querySelector('.' + this.theme() + '-rendering'),\n      color: {\n        pattern: this.colors()\n      },\n      data: {\n        colors: extend({}, this.colorMapping()),\n        columns: [],\n        type: this.type().replace('horizontal-', '')\n      },\n      size: {\n        height: this.height() ? this.height() - this.el().offsetHeight : 400,\n        width: this.width()\n      },\n      tooltip: {}\n    };\n\n    // Apply chartOptions\n    options = extendDeep({}, DEFAULT_OPTIONS, this.chartOptions());\n\n    // Apply enforced options\n    options = extendDeep(options, ENFORCED_OPTIONS);\n    options.color.pattern = ENFORCED_OPTIONS.color.pattern;\n    options.data.colors = ENFORCED_OPTIONS.data.colors;\n    options.data.columns = ENFORCED_OPTIONS.data.columns;\n\n    return options;\n  }\n\n  each(c3Types, function(type, index) {\n    types[type] = {\n      render: function(){\n        var options = getDefaultOptions.call(this);\n\n        if (this.data()[0].length === 1 || this.data().length === 1) {\n          this.message('No data to display');\n          return;\n        }\n\n        if (type === 'gauge') {\n          // Accommodate a neat bug:\n          options.legend.position = 'bottom';\n          options.data.columns = [[\n            this.title() || this.data()[1][0],\n            this.data()[1][1]\n          ]];\n        }\n        else if (type === 'pie' || type === 'donut') {\n          options.data.columns = this.data().slice(1);\n        }\n        else {\n\n          // Apply formatting for horizontal variant types\n          if (type.indexOf('horizontal-') > -1) {\n            options.axis.rotated = type.indexOf('horizontal-') > -1;\n          }\n\n          if (isDateString(this.data()[1][0])) {\n            // TIMESERIES\n            options.axis.x = options.axis.x || {};\n            options.axis.x.type = 'timeseries';\n            options.axis.x.tick = options.axis.x.tick || {\n              format: this.dateFormat() || c3DefaultDateFormat(this.data()[1][0], this.data()[2] ? this.data()[2][0] : this.data()[1][0]),\n              culling: { max: 5 }\n            };\n\n            options.data.columns[0] = [];\n            each(this.dataset.selectColumn(0), function(cell, i){\n              if (i > 0) {\n                cell = new Date(cell);\n              }\n              options.data.columns[0][i] = cell;\n            });\n            options.data.columns[0][0] = 'x';\n            options.data.x = 'x';\n            if (this.stacked() && this.data()[0].length > 2) {\n              options.data.groups = [ this.dataset.selectRow(0).slice(1) ];\n            }\n          }\n          else {\n            // CATEGORIES\n            options.axis.x = options.axis.x || {};\n            options.axis.x.type = 'category';\n            options.axis.x.categories = this.dataset.selectColumn(0).slice(1);\n            if (this.stacked() && this.data()[0].length > 2) {\n              options.data.groups = [ this.dataset.selectRow(0).slice(1) ];\n            }\n          }\n\n          if (this.data()[0].length === 2) {\n            options.legend.show = false;\n          }\n\n          each(this.data()[0], function(cell, i){\n            if (i > 0) {\n              options.data.columns.push(this.dataset.selectColumn(i));\n            }\n          }.bind(this));\n\n        }\n\n        if (options.legend.show === true\n          && options.legend.position === 'right'\n            && ['gauge'].indexOf(type.replace('horizontal-', ''))) {\n\n                // Apply custom color handling\n                options.data.color = c3CustomDataMapping.bind(this);\n\n                // Apply custom tooltip\n                options.tooltip = {\n                  contents: c3TooltipContents,\n                  format: {\n                    value: c3CustomTooltipFiltering.bind(this)\n                  }\n                };\n\n                options.legend.show = false;\n                var paddedWidth = this.el().querySelector('.' + this.theme() + '-rendering').offsetWidth - 100;\n                options.size.width = options.size.width || paddedWidth;\n                this.el().querySelector('.' + this.theme() + '-rendering').setAttribute('style', 'margin-right: 120px;');\n\n                // Render artifacts\n                this.view._artifacts['c3'] = c3.generate(options);\n                c3PaginatingLegend.call(this, options.data.columns);\n        }\n        else {\n          options.legend.show = false;\n          this.view._artifacts['c3'] = c3.generate(options);\n        }\n\n      },\n      update: function(){\n        // no special update handling\n        this.render();\n      },\n      destroy: function(){\n        if (this.view._artifacts['c3']) {\n          this.view._artifacts['c3'].destroy();\n          this.view._artifacts['c3'] = null;\n        }\n      }\n    };\n  });\n}\n\nfunction c3CustomDataMapping(color, d) {\n  var scope;\n  if (this.view._artifacts.pagination\n    && this.type() !== 'gauge'\n      /*&& this.type() !== 'pie'\n        && this.type() !== 'donut'*/) {\n          scope = this.view._artifacts.pagination.labels;\n          if ((d.id && scope.indexOf(d.id) > -1)\n            || (d && !d.id && scope.indexOf(d) > -1)) {\n              return color;\n          }\n          else {\n            if (this.type() === 'donut' || this.type() === 'pie') {\n              return 'rgba(0,0,0,.1)';\n            }\n            else {\n              return 'rgba(0,0,0,.07)';\n            }\n          }\n  }\n  else {\n    return color;\n  }\n}\n\nfunction c3CustomTooltipFiltering(value, ratio, id, index) {\n  var scope;\n  if (this.view._artifacts.pagination\n    && this.type() !== 'gauge'\n      /*&& this.type() !== 'pie'\n        && this.type() !== 'donut'*/) {\n          scope = this.view._artifacts.pagination.labels;\n          if (scope.indexOf(id) > -1) {\n            return value;\n          }\n  }\n  else {\n    return value;\n  }\n}\n\nfunction bindResizeListener(fn){\n  if ('undefined' === typeof window) return;\n  window.onresize = window.resize = function(){};\n  if (window.addEventListener) {\n    window.addEventListener('resize', fn, true);\n  }\n  else if (window.attachEvent) {\n    window.attachEvent('onresize', fn);\n  }\n}\n","import Dataset from './dataset';\nimport { extend } from './utils/extend';\nimport { stripHtmlTags } from './utils/strip-html-tags';\n\nexport default function (data) {\n  if (!arguments.length) return this.dataset.data();\n  if (data instanceof Dataset) {\n    this.dataset = data;\n    return this;\n  }\n  else {\n    return parseResponse.call(this, data);\n  }\n};\n\nfunction parseResponse(response) {\n  var dataset,\n      indexBy,\n      meta,\n      parser,\n      parserArgs = [],\n      query,\n      selectedParser,\n      title,\n      type;\n\n  indexBy = this.indexBy() ? this.indexBy() : 'timestamp.start';\n  meta = response.metadata || {};\n  query = (typeof response.query !== 'undefined') ? response.query : {};\n\n  // Ensure all required params are present\n  query = extend({\n    analysis_type: null,\n    event_collection: null,\n    filters: [],\n    group_by: null,\n    interval: null,\n    timeframe: null,\n    timezone: null\n  }, query);\n\n  if (query.analysis_type === 'funnel') {\n    parser = 'funnel';\n  }\n  else if (query.analysis_type === 'extraction'){\n    parser = 'extraction';\n  }\n  else if (query.analysis_type === 'select_unique') {\n    if (!query.group_by && !query.interval) {\n      parser = 'list';\n    }\n    // else { Not supported }\n  }\n  else if (query.analysis_type) {\n    if (!query.group_by && !query.interval) {\n      parser = 'metric';\n    }\n    else if (query.group_by && !query.interval) {\n      if (query.group_by instanceof Array && query.group_by.length > 1) {\n        parser = 'double-grouped-metric';\n        parserArgs.push(query.group_by);\n      }\n      else {\n        parser = 'grouped-metric';\n      }\n    }\n    else if (query.interval && !query.group_by) {\n      parser = 'interval';\n      parserArgs.push(indexBy);\n    }\n    else if (query.group_by && query.interval) {\n      if (query.group_by instanceof Array && query.group_by.length > 1) {\n        parser = 'double-grouped-interval';\n        parserArgs.push(query.group_by);\n        parserArgs.push(indexBy);\n      }\n      else {\n        parser = 'grouped-interval';\n        parserArgs.push(indexBy);\n      }\n    }\n  }\n\n  if (!parser) {\n\n    // Metric\n    // -------------------------------\n    if (typeof response.result === 'number'){\n      parser = 'metric';\n    }\n\n    // Everything else\n    // -------------------------------\n    if (response.result instanceof Array && response.result.length > 0){\n\n      // Interval w/ single value\n      // -------------------------------\n      if (response.result[0].timeframe && (typeof response.result[0].value == 'number' || response.result[0].value == null)) {\n        parser = 'interval';\n        parserArgs.push(indexBy)\n      }\n\n      // Static GroupBy\n      // -------------------------------\n      if (typeof response.result[0].result == 'number'){\n        parser = 'grouped-metric';\n      }\n\n      // Grouped Interval\n      // -------------------------------\n      if (response.result[0].value instanceof Array){\n        parser = 'grouped-interval';\n        parserArgs.push(indexBy)\n      }\n\n      // Funnel\n      // -------------------------------\n      if (typeof response.result[0] === 'number'\n        && typeof response.steps !== 'undefined'){\n          parser = 'funnel';\n          // Move steps into query object\n          query.steps = response.steps;\n      }\n\n      // Select Unique\n      // -------------------------------\n      if ((typeof response.result[0] === 'string' || typeof response.result[0] == 'number') && typeof response.steps === 'undefined'){\n        parser = 'list';\n      }\n\n      // Extraction\n      // -------------------------------\n      if (!parser) {\n        parser = 'extraction';\n      }\n    }\n  }\n\n  // Set title from saved query body, or create a default title\n  if (!this.title()) {\n    if (meta.display_name) {\n      title = meta.display_name;\n    }\n    else {\n      title = getDefaultTitle(query);\n    }\n    this.title(title);\n  }\n\n  // Set type from saved query body, or use a default type\n  if (!this.type()) {\n    if (meta.visualization && meta.visualization.chart_type) {\n      type = meta.visualization.chart_type;\n    }\n    else {\n      type = getDefaultType(parser);\n    }\n    this.type(type);\n  }\n\n  // Define the appropriate parser\n  selectedParser = Dataset.parser.apply(this, [parser].concat(parserArgs));\n\n  // Parse the response with augmented query body\n  dataset = selectedParser(extend(response, { 'query': query }));\n\n  // Set true dates for 'interval' data\n  if (parser.indexOf('interval') > -1) {\n    dataset.updateColumn(0, function(value, i){\n      return new Date(value);\n    });\n  }\n\n  dataset.updateRow(0, function(value, i){\n    return stripHtmlTags(value);\n  });\n\n  this.dataset = dataset;\n\n  return this;\n}\n\nfunction getDefaultTitle(query) {\n  var analysis = query.analysis_type ? query.analysis_type.replace('_', ' ') : '',\n      title;\n\n  title = analysis.replace( /\\b./g, function(a){\n    return a.toUpperCase();\n  });\n\n  if (query.event_collection) {\n    title += ' - ' + query.event_collection;\n  }\n  return title;\n}\n\nfunction getDefaultType(parser) {\n  let type;\n  switch (parser) {\n    case 'metric':\n      type = 'metric';\n      break;\n    case 'interval':\n      type = 'area';\n      break;\n    case 'grouped-metric':\n    case 'double-grouped-metric':\n      type = 'bar';\n      break;\n    case 'grouped-interval':\n    case 'double-grouped-interval':\n      type = 'line';\n      break;\n    case 'funnel':\n      type = 'horizontal-bar';\n      break;\n    case 'list':\n    case 'extraction':\n    default:\n      type = 'table';\n  }\n  return type;\n}\n","export function valueAtDeepKey(obj, is, value) {\n  if (typeof is == 'string')\n    return valueAtDeepKey(obj, is.split('.'), value);\n  else if (is.length==1 && value!==undefined && obj !== null &&\n    typeof obj[is[0]] !== 'undefined')\n    return obj[is[0]] = value;\n  else if (is.length==0)\n    return obj;\n  else if (typeof is === 'undefined' || typeof obj === 'undefined'\n    || is === null || obj === null\n    || typeof obj[is[0]] === 'undefined')\n    return null;\n  else\n    return valueAtDeepKey(obj[is[0]], is.slice(1), value);\n}\n","// Pure awesomeness by Will Rayner (penguinboy)\n// https://gist.github.com/penguinboy/762197\n\nexport function flatten(ob){\n  var toReturn = {};\n  for (var i in ob) {\n    if (!ob.hasOwnProperty(i)) continue;\n    if ((typeof ob[i]) == 'object' && ob[i] !== null) {\n      var flatObject = flatten(ob[i]);\n      for (var x in flatObject) {\n        if (!flatObject.hasOwnProperty(x)) continue;\n        toReturn[i + '.' + x] = flatObject[x];\n      }\n    } else {\n      toReturn[i] = ob[i];\n    }\n  }\n  return toReturn;\n};\n","let Dataset; /* injected */\n\nimport { each } from '../../utils/each';\nimport { flatten } from '../utils/flatten';\nimport { valueAtDeepKey } from '../utils/object';\n\nexport default function initialize(lib){\n  Dataset = lib;\n  return function(name){\n    var options = Array.prototype.slice.call(arguments, 1);\n\n    if (!parsers[name]) {\n      throw 'Requested parser does not exist';\n    }\n    else {\n      return parsers[name].apply(this, options);\n    }\n  };\n}\n\nfunction parseMetric(){\n  return function(res){\n    return new Dataset()\n      .set(['Value', 'Result'], res.result)\n      .type('metric');\n  }\n}\n\n//var myParser = Dataset.parser('interval', 'timeframe.end');\nfunction parseInterval(){\n  var options = Array.prototype.slice.call(arguments);\n  return function(res){\n    var dataset = new Dataset()\n      .type('interval');\n    each(res.result, function(record, i){\n      var index = options[0] && options[0] === 'timeframe.end' ? record.timeframe.end : record.timeframe.start;\n      dataset.set(['Result', index], record.value);\n    });\n    return dataset;\n  }\n}\n\nfunction parseGroupedMetric(){\n  return function(res){\n    var dataset = new Dataset()\n      .type('grouped-metric');\n    each(res.result, function(record, i){\n      var label;\n      each(record, function(value, key){\n        if (key !== 'result') {\n          label = key;\n        }\n      });\n      dataset.set(['Result', String(record[label])], record.result);\n    });\n    return dataset;\n  }\n}\n\n//var myParser = Dataset.parser('grouped-interval', 'timeframe.end');\nfunction parseGroupedInterval(){\n  var options = Array.prototype.slice.call(arguments);\n  return function(res){\n    var dataset = new Dataset()\n      .type('grouped-interval');\n    each(res.result, function(record, i){\n      var index = options[0] && options[0] === 'timeframe.end' ? record.timeframe.end : record.timeframe.start;\n      if (record.value.length) {\n        each(record.value, function(group, j){\n          var label;\n          each(group, function(value, key){\n            if (key !== 'result') {\n              label = key;\n            }\n          });\n          dataset.set([ String(group[label]), index ], group.result);\n        });\n      }\n      else {\n        dataset.appendRow(index);\n      }\n    });\n    return dataset;\n  }\n}\n\n//var myParser = Dataset.parser('double-grouped-metric', ['first', 'second']);\nfunction parseDoubleGroupedMetric(){\n  var options = Array.prototype.slice.call(arguments);\n  if (!options[0]) throw 'Requested parser requires a sequential list (array) of properties to target as a second argument';\n  return function(res){\n    var dataset = new Dataset()\n      .type('double-grouped-metric');\n    each(res.result, function(record, i){\n      var rowLabel = record[options[0][0]] + ' ' + record[options[0][1]];\n      dataset.set([ 'Result', rowLabel ], record.result);\n    });\n    return dataset;\n  }\n}\n\n//var myParser = Dataset.parser('double-grouped-interval', ['first', 'second'], 'timeframe.end');\nfunction parseDoubleGroupedInterval(){\n  var options = Array.prototype.slice.call(arguments);\n  if (!options[0]) throw 'Requested parser requires a sequential list (array) of properties to target as a second argument';\n  return function(res){\n    var dataset = new Dataset()\n      .type('double-grouped-interval');\n    each(res.result, function(record, i){\n      var index = options[1] && options[1] === 'timeframe.end' ? record.timeframe.end : record.timeframe.start;\n      each(record['value'], function(value, j){\n        var label = value[options[0][0]] + ' ' + value[options[0][1]];\n        dataset.set([ label, index ], value.result);\n      });\n    });\n    return dataset;\n  }\n}\n\nfunction parseFunnel(){\n  return function(res){\n    var result, steps, dataset;\n    if (typeof res.steps !== 'undefined'\n        && typeof res.result !== 'undefined'\n          && res.result instanceof Array) {\n            // Ad-hoc funnel response\n            result = res.result;\n            steps = res.steps;\n    }\n    else if (typeof res.result.steps !== 'undefined'\n        && typeof res.result.result !== 'undefined'\n          && res.result.result instanceof Array) {\n            // Saved funnel response\n            result = res.result.result;\n            steps = res.result.steps;\n    }\n    dataset = new Dataset().type('funnel');\n    dataset.appendColumn('Step Value');\n    each(result, function(value, i){\n      if (typeof steps !== 'undefined' && steps[i]) {\n        dataset.appendRow(String(steps[i].event_collection), [value]);\n      }\n    });\n    return dataset;\n  }\n}\n\nfunction parseList(){\n  return function(res){\n    var dataset = new Dataset()\n      .type('list');\n    each(res.result, function(value, i){\n      dataset.set( [ 'Result', String(i+1) ], value );\n    });\n    return dataset;\n  }\n}\n\nfunction parseExtraction(){\n  return function(res){\n    var dataset = new Dataset()\n      .type('extraction');\n    // create header\n    for (let i=0; i<1; i++){\n      let record = res.result[i];\n      each(flatten(record), function(value, key){\n        dataset.set([ key, String(i+1) ], value);\n      });\n    }\n\n    // get keys of the Object\n    const names = Object.keys(flatten(res.result[0]));\n\n    for (let i=1; i<res.result.length; i++){\n      let record = [i+1];\n      for (let iNames=0; iNames<names.length; iNames++){\n        record.push(valueAtDeepKey(res.result[i], names[iNames]));\n      }\n      dataset.matrix[String(i+1)] = record;\n    }\n\n    dataset.deleteColumn(0);\n    return dataset;\n  }\n}\n\n// Parser definitions\nconst parsers = {\n  metric: parseMetric,\n  interval: parseInterval,\n  'grouped-metric': parseGroupedMetric,\n  'grouped-interval': parseGroupedInterval,\n  'double-grouped-metric': parseDoubleGroupedMetric,\n  'double-grouped-interval': parseDoubleGroupedInterval,\n  funnel: parseFunnel,\n  list: parseList,\n  extraction: parseExtraction,\n};\n","import { each } from '../../utils/each';\nimport createNullList from '../utils/create-null-list';\nimport { appendRow, appendColumn } from './append';\n\nexport function updateColumn(q, input) {\n  var self = this,\n      index = (typeof q === 'number') ? q : this.matrix[0].indexOf(q);\n\n  if (index > -1) {\n\n    if (typeof input === 'function') {\n\n      each(self.data(), function(row, i){\n        var cell;\n        if (i > 0) {\n          cell = input.call(self, row[index], i, row);\n          if (typeof cell !== 'undefined') {\n            self.matrix[i][index] = cell;\n          }\n        }\n      });\n\n    } else if (!input || input instanceof Array) {\n      input = input || [];\n\n      if (input.length <= self.data().length - 1) {\n        input = input.concat( createNullList(self.data().length - 1 - input.length) );\n      }\n      else {\n        // If this new column is longer than existing columns,\n        // we need to update the rest to match ...\n        each(input, function(value, i){\n          if (self.matrix.length -1 < input.length) {\n            appendRow.call(self, String( self.matrix.length ));\n          }\n        });\n      }\n\n      each(input, function(value, i){\n        self.matrix[i+1][index] = value;\n      });\n\n    }\n\n  }\n  return self;\n}\n\nexport function updateRow(q, input){\n  var self = this,\n      index = (typeof q === 'number') ? q : this.selectColumn(0).indexOf(q);\n\n  if (index > -1) {\n\n    if (typeof input === 'function') {\n\n      each(self.data()[index], function(value, i){\n        var col = self.selectColumn(i),\n        cell = input.call(self, value, i, col);\n        if (typeof cell !== 'undefined') {\n          self.matrix[index][i] = cell;\n        }\n      });\n\n    } else if (!input || input instanceof Array) {\n      input = input || [];\n\n      if (input.length <= self.matrix[0].length - 1) {\n        input = input.concat( createNullList( self.matrix[0].length - 1 - input.length ) );\n      }\n      else {\n        each(input, function(value, i){\n          if (self.matrix[0].length -1 < input.length) {\n            appendColumn.call(self, String( self.matrix[0].length ));\n          }\n        });\n      }\n\n      each(input, function(value, i){\n        self.matrix[index][i+1] = value;\n      });\n    }\n\n  }\n  return self;\n}\n","import { each } from '../../utils/each';\nimport analysesUtilMethods from '../utils/analyses';\n\nexport function sortColumns(str, comp) {\n  var self = this,\n      head = this.matrix[0].slice(1), // minus index\n      cols = [],\n      clone = [],\n      fn = comp || analysesUtilMethods.getColumnLabel;\n\n  // Isolate each column (except the index)\n  each(head, function(cell, i) {\n    cols.push(self.selectColumn(i+1).slice(0));\n  });\n  cols.sort(function(a,b){\n    // If fn(a) > fn(b)\n    var op = fn.call(self, a) > fn.call(self, b);\n    if (op) {\n      return (str === 'asc' ? 1 : -1);\n    } else if (!op) {\n      return (str === 'asc' ? -1 : 1);\n    } else {\n      return 0;\n    }\n  });\n  each(cols, function(col, i) {\n    self\n      .deleteColumn(i+1)\n      .insertColumn(i+1, col[0], col.slice(1));\n  });\n  return self;\n}\n\nexport function sortRows(str, comp) {\n  var self = this,\n      head = this.matrix.slice(0,1),\n      body = this.matrix.slice(1),\n      fn = comp || analysesUtilMethods.getRowIndex;\n  body.sort(function(a, b){\n    // If fn(a) > fn(b)\n    var op = fn.call(self, a) > fn.call(self, b);\n    if (op) {\n      return (str === 'asc' ? 1 : -1);\n    } else if (!op) {\n      return (str === 'asc' ? -1 : 1);\n    } else {\n      return 0;\n    }\n  });\n  self.data(head.concat(body));\n  return self;\n}\n","import { each } from '../../utils/each';\n\nexport function selectColumn(q) {\n  const result = [];\n  const index = (typeof q === 'number') ? q : this.matrix[0].indexOf(q);\n\n  if (index > -1 && typeof this.matrix[0][index] !== 'undefined') {\n    each(this.matrix, function(row, i) {\n      result.push(row[index]);\n    });\n  }\n  return result;\n}\n\nexport function selectRow(q) {\n  let result = [];\n  const index = (typeof q === 'number') ? q : this.selectColumn(0).indexOf(q);\n\n  if (index > -1 && typeof this.matrix[index] !== 'undefined') {\n    result = this.matrix[index];\n  }\n  return result;\n}\n","import { each } from '../../utils/each';\nimport createNullList from '../utils/create-null-list';\nimport { appendRow, appendColumn } from './append';\n\nexport function insertColumn(index, str, input) {\n  const self = this;\n  const label = (str !== undefined) ? str : null;\n\n  if (typeof input === 'function') {\n\n    self.matrix[0].splice(index, 0, label);\n    each(self.matrix, function(row, i) {\n      var cell;\n      if (i > 0) {\n        cell = input.call(self, row, i);\n        if (typeof cell === 'undefined') {\n          cell = null;\n        }\n        self.matrix[i].splice(index, 0, cell);\n      }\n    });\n\n  }\n\n  else if (!input || input instanceof Array) {\n    input = input || [];\n\n    if (input.length <= self.matrix.length - 1) {\n      input = input.concat( createNullList(self.matrix.length - 1 - input.length) );\n    }\n    else {\n      // If this new column is longer than existing columns,\n      // we need to update the rest to match ...\n      each(input, function(value, i){\n        if (self.matrix.length -1 < input.length) {\n          appendRow.call(self, String( self.matrix.length ));\n        }\n      });\n    }\n\n    self.matrix[0].splice(index, 0, label);\n    each(input, function(value, i){\n      self.matrix[i+1].splice(index, 0, value);\n    });\n\n  }\n  return self;\n}\n\nexport function insertRow(index, str, input) {\n  const self = this;\n  const newRow = [];\n  const label = (str !== undefined) ? str : null;\n  newRow.push(label);\n\n  if (typeof input === 'function') {\n    each(self.matrix[0], function(label, i) {\n      let col;\n      let cell;\n      if (i > 0) {\n        col = self.selectColumn(i);\n        cell = input.call(self, col, i);\n        if (typeof cell === 'undefined') {\n          cell = null;\n        }\n        newRow.push(cell);\n      }\n    });\n    self.matrix.splice(index, 0, newRow);\n  }\n\n  else if (!input || input instanceof Array) {\n    input = input || [];\n\n    if (input.length <= self.matrix[0].length - 1) {\n      input = input.concat( createNullList( self.matrix[0].length - 1 - input.length ) );\n    }\n    else {\n      each(input, function(value, i){\n        if (self.matrix[0].length -1 < input.length) {\n          appendColumn.call(self, String( self.matrix[0].length ));\n        }\n      });\n    }\n\n    self.matrix.splice(index, 0, newRow.concat(input) );\n  }\n\n  return self;\n}\n","import { each } from '../../utils/each';\n\nexport function filterColumns(fn) {\n  const self = this;\n  const clone = [];\n\n  each(self.matrix, function(row, i) {\n    clone.push([]);\n  });\n\n  each(self.matrix[0], function(col, i){\n    var selectedColumn = self.selectColumn(i);\n    if (i == 0 || fn.call(self, selectedColumn, i)) {\n      each(selectedColumn, function(cell, ri){\n        clone[ri].push(cell);\n      });\n    }\n  });\n\n  self.data(clone);\n  return self;\n}\n\nexport function filterRows(fn) {\n  const self = this;\n  const clone = [];\n\n  each(self.matrix, function(row, i){\n    if (i == 0 || fn.call(self, row, i)) {\n      clone.push(row);\n    }\n  });\n\n  self.data(clone);\n  return self;\n}\n","import { each } from '../../utils/each';\n\nexport function deleteColumn(q) {\n  const self = this;\n  const index = (typeof q === 'number') ? q : this.matrix[0].indexOf(q);\n\n  if (index > -1) {\n    each(self.matrix, function(row, i){\n      self.matrix[i].splice(index, 1);\n    });\n  }\n  return self;\n}\n\nexport function deleteRow(q) {\n  var index = (typeof q === 'number') ? q : this.selectColumn(0).indexOf(q);\n\n  if (index > -1) {\n    this.matrix.splice(index, 1);\n  }\n  return this;\n}\n","import data from './data';\nimport { Dataset } from './dataset';\n// Utils\nimport { each } from './utils/each';\nimport isDateString from './utils/assert-date-string';\nimport { stripHtmlTags } from './utils/strip-html-tags';\nimport { escapeHtml } from './utils/escape-html';\nimport libraries from './libraries';\n\n// Constructor\nexport const Dataviz = function () {\n  if (this instanceof Dataviz === false) {\n    return new Dataviz();\n  }\n\n  this.dataset = new Dataset();\n  this.view = {\n    _prepared: false,\n    _rendered: false,\n    _artifacts: { /* state bin */ },\n\n    chartOptions: {},\n    colors: [\n      '#00bbde', '#fe6672', '#eeb058', '#8a8ad6', '#ff855c', '#00cfbb',\n      '#5a9eed', '#73d483', '#c879bb', '#0099b6', '#d74d58', '#cb9141',\n      '#6b6bb6', '#d86945', '#00aa99', '#4281c9', '#57b566', '#ac5c9e',\n      '#27cceb', '#ff818b', '#f6bf71', '#9b9be1', '#ff9b79', '#26dfcd',\n      '#73aff4', '#87e096', '#d88bcb',\n    ],\n    colorMapping: {},\n    dateFormat: undefined,\n    el: undefined,\n    height: undefined,\n    indexBy: 'timeframe.start',\n    labels: [],\n    labelMapping: {},\n    library: 'default',\n    notes: undefined,\n    sortGroups: undefined,\n    sortIntervals: undefined,\n    stacked: false,\n    theme: 'keen-dataviz',\n    title: undefined,\n    type: undefined,\n    width: undefined,\n  };\n\n  Dataviz.visuals.push(this);\n};\n\nDataviz.libraries = { default: {} };\nif (typeof window !== 'undefined') {\n  Dataviz.libraries.default = libraries(Dataviz);\n}\nDataviz.visuals = [];\n\nDataviz.register = function (name, actions) {\n  Dataviz.libraries[name] = Dataviz.libraries[name] || {};\n  each(actions, function(method, key){\n    Dataviz.libraries[name][key] = method;\n  });\n};\n\nDataviz.find = function(target){\n    if (!arguments.length) return Dataviz.visuals;\n    var el = target.nodeName ? target : document.querySelector(target),\n        match = null;\n    each(Dataviz.visuals, function(visual){\n      if (el == visual.el()){\n        match = visual;\n        return false;\n      }\n    });\n    return match;\n};\n\n\n  // Prototype\n  // ------------\n\nDataviz.prototype.attributes = function(obj){\n    if (!arguments.length) return this.view;\n    var view = this.view;\n    each(obj, function(prop, key){\n      // Handle deprecated property names\n      if (key === 'chartType') {\n        key = 'type';\n      }\n      view[key] = prop;\n    });\n    return this;\n};\n\nDataviz.prototype.call = function(fn){\n    fn.call(this);\n    return this;\n};\n\nDataviz.prototype.chartOptions = function(obj){\n    var self = this;\n    if (!arguments.length) return this.view.chartOptions;\n    if (obj === null) {\n      this.view.chartOptions = {};\n    }\n    else if (typeof obj === 'object') {\n      each(obj, function(value, key){\n        self.view.chartOptions[key] = (value ? value : null);\n      });\n    }\n    return this;\n};\n\nDataviz.prototype.colors = function(arr){\n    if (!arguments.length) return this.view.colors;\n    this.view.colors = (arr instanceof Array ? arr : []);\n    return this;\n};\n\nDataviz.prototype.colorMapping = function(obj){\n    var self = this;\n    if (!arguments.length) return this.view.colorMapping;\n    if (obj === null) {\n      this.view.colorMapping = {};\n    }\n    else if (typeof obj === 'object') {\n      each(obj, function(value, key){\n        self.view.colorMapping[key] = (value ? value : null);\n      });\n    }\n    return this;\n};\n\nDataviz.prototype.data = data;\n\nDataviz.prototype.dateFormat = function(val){\n    if (!arguments.length) return this.view.dateFormat;\n    if (typeof val === 'string' || typeof val === 'function') {\n      this.view.dateFormat = val;\n    }\n    else {\n      this.view.dateFormat = undefined;\n    }\n    return this;\n};\n\nDataviz.prototype.destroy = function(){\n    var library = this.library(),\n        type = this.type(),\n        element = this.el();\n\n    // Call destroy method if present\n  if (Dataviz.libraries[library]\n      && Dataviz.libraries[library][type]){\n        Dataviz.libraries[library][type].destroy.call(this);\n  }\n\n    // Clear rendered artifacts, state bin\n    if (element) {\n      element.innerHTML = '';\n    }\n    this.view._prepared = false;\n    this.view._rendered = false;\n    this.view._artifacts = {};\n    return this;\n};\n\nDataviz.prototype.el = function(target){\n    var self = this;\n    if (!arguments.length) return this.view.el;\n    domReady(function(){\n      if (target && target !== null) {\n        if (target.nodeName) {\n          self.view.el = target;\n        }\n        else if (document.querySelector) {\n          self.view.el = document.querySelector(target);\n        }\n      }\n      else {\n        self.view.el = undefined;\n      }\n    });\n    return this;\n};\n\nDataviz.prototype.height = function(num){\n    if (!arguments.length) return this.view['height'];\n    this.view['height'] = (!isNaN(parseInt(num)) ? parseInt(num) : null);\n    return this;\n};\n\n// IMPORTANT: Must be run before data parsing\nDataviz.prototype.indexBy = function(str){\n    if (!arguments.length) return this.view.indexBy;\n    this.view.indexBy = (str ? String(str) : 'timeframe.start');\n    return this;\n};\n\nDataviz.prototype.labels = function(arr){\n    if (!arguments.length) return this.view.labels;\n    this.view.labels = (arr instanceof Array ? arr : []);\n\n    // Write labels\n    if (this.data()[0].length === 2 && !isDateString(this.data()[1][0])) {\n      this.dataset.updateColumn(0, function(value, index){\n        if (this.view.labels[index-1]) {\n          return stripHtmlTags(String(this.view.labels[index-1]));\n        }\n        return stripHtmlTags(value);\n      }.bind(this));\n    }\n    else {\n      this.dataset.updateRow(0, function(value, index){\n        if (index > 0 && this.view.labels[index-1]) {\n          return stripHtmlTags(String(this.view.labels[index-1]));\n        }\n        return stripHtmlTags(value);\n      }.bind(this));\n    }\n    return this;\n};\n\nDataviz.prototype.labelMapping = function(obj){\n    if (!arguments.length) return this.view.labelMapping;\n    if (obj === null) {\n      this.view.labelMapping = {};\n    }\n    else if (typeof obj === 'object') {\n      each(obj, function(value, key){\n        this.view.labelMapping[key] = (value ? value : null);\n      }.bind(this));\n}\n\n    // Write labels\n    if (this.data()[0].length === 2 && !isDateString(this.data()[1][0])) {\n      this.dataset.updateColumn(0, function(value){\n        if (this.view.labelMapping[value]) {\n          return stripHtmlTags(String(this.view.labelMapping[value]));\n        }\n        return stripHtmlTags(value);\n      }.bind(this));\n    }\n    else {\n      this.dataset.updateRow(0, function(value){\n        if (this.view.labelMapping[value]) {\n          return stripHtmlTags(String(this.view.labelMapping[value]));\n        }\n        return stripHtmlTags(value);\n      }.bind(this));\n    }\n    return this;\n  };\n\nDataviz.prototype.library = function(str){\n    if (!arguments.length) return this.view['library'];\n    this.view['library'] = (str ? String(str) : null);\n    return this;\n};\n\nDataviz.prototype.message = function(){\n    var loader;\n    if (this.view._rendered) {\n      this.destroy();\n    }\n    if (this.el()) {\n      this.el().innerHTML = '';\n      var message = Dataviz.libraries['default'].message;\n      if (message.render) {\n        message.render.apply(this, arguments);\n      }\n    }\n    return this;\n};\n\nDataviz.prototype.notes = function(str){\n    if (!arguments.length) return this.view['notes'];\n    this.view['notes'] = (str ? String(str) : null);\n    return this;\n};\n\nDataviz.prototype.prepare = function(){\n    var self = this, loader;\n\n    if (!this.el()) {\n      throw 'A DOM element is required. Check out the .el() method.';\n      return;\n    }\n\n    domReady(function(){\n      if (self.view._rendered) {\n        self.destroy();\n      }\n      if (self.el()) {\n        self.el().innerHTML = '';\n        loader = Dataviz.libraries['default'].spinner;\n        if (loader.render) {\n          loader.render.call(self);\n        }\n        self.view._prepared = true;\n      }\n    });\n    return this;\n};\n\nDataviz.prototype.render = function(){\n    var self = this,\n        loader = Dataviz.libraries['default'].spinner,\n        library = this.library(),\n        type = this.type(),\n        element = this.el();\n\n    if (!this.el()) {\n      this.message('A DOM element is required. Check out the .el() method.');\n      throw 'A DOM element is required. Check out the .el() method.';\n      return;\n    }\n\n    if (!this.type()) {\n      this.message('A chart type is required. Check out the .type() method.');\n      throw 'A chart type is required. Check out the .type() method.';\n      return;\n    }\n\n    domReady(function(){\n      if (self.view._prepared && loader.destroy) {\n        loader.destroy.apply(self, arguments);\n      }\n      self.el().innerHTML = '';\n\n      if (Dataviz.libraries[library] === 'undefined'){\n        // Error: Unregistered library\n        self.message('Incorrect library');\n        throw 'Incorrect library';\n        return;\n      }\n      else {\n        if (typeof Dataviz.libraries[library][type] === 'undefined') {\n          self.message('Incorrect chart type');\n          throw 'Incorrect chart type';\n          return;\n        }\n        else {\n          buildDomWrapper(self.el(), {\n            notes: self.notes(),\n            theme: self.theme(),\n            title: self['title']()\n          });\n          Dataviz.libraries[library][type].render.call(self);\n          self.view._rendered = true;\n        }\n      }\n    });\n    return this;\n};\n\nDataviz.prototype.sortGroups = function(str){\n    if (!arguments.length) return this.view.sortGroups;\n    this.view.sortGroups = (str ? String(str) : null);\n\n    // Sort groups\n    if (this.view.sortGroups && this.data().length > 1) {\n      if (isDateString(this.data()[1][0])) {\n        this.dataset.sortColumns(this.view.sortGroups, this.dataset.getColumnSum);\n      }\n      else {\n        this.dataset.sortRows(this.view.sortGroups, this.dataset.getRowSum);\n      }\n    }\n    return this;\n};\n\nDataviz.prototype.sortIntervals = function(str){\n    if (!arguments.length) return this.view.sortIntervals;\n    this.view.sortIntervals = (str ? String(str) : null);\n    if (this.view.sortIntervals) {\n      this.dataset.sortRows(this.view.sortIntervals);\n    }\n    return this;\n};\n\nDataviz.prototype.stacked = function(bool){\n    if (!arguments.length) return this.view['stacked'];\n    this.view['stacked'] = bool ? true : false;\n    return this;\n};\n\nDataviz.prototype.theme = function(str){\n    if (!arguments.length) return this.view.theme;\n    this.view.theme = (str ? String(str) : null);\n    return this;\n};\n\nDataviz.prototype.title = function(str){\n    if (!arguments.length) return this.view['title'];\n    this.view['title'] = (str ? String(str) : null);\n    return this;\n};\n\nDataviz.prototype.type = function(str){\n    if (!arguments.length) return this.view['type'];\n    this.view['type'] = (str ? convertChartTypes(str) : null);\n    return this;\n};\n\nDataviz.prototype.update = function(){\n    var library = this.library(),\n        type = this.type(),\n        element = this.el();\n    if (library && type && element && Dataviz.libraries[library][type].update) {\n      Dataviz.libraries[library][type].update.apply(this, arguments);\n    }\n    return this;\n};\n\nDataviz.prototype.width = function(num){\n    if (!arguments.length) return this.view['width'];\n    this.view['width'] = (!isNaN(parseInt(num)) ? parseInt(num) : null);\n    return this;\n};\n\n  // Deprecations\n  Dataviz.prototype.chartType = Dataviz.prototype.type;\n  Dataviz.prototype.error = Dataviz.prototype.message;\n  Dataviz.prototype.parseRawData = Dataviz.prototype.data;\n  Dataviz.prototype.parseRequest = function(){\n    // this.emit('error', 'This method is no longer supported. Use .data() instead: https://github.com/keen/keen-dataviz.js#data');\n    return this;\n  };\n  Dataviz.prototype.initialize = function(){\n    // this.emit('error', 'This method is no longer supported, and can be omitted as it has no impact');\n    return this;\n  };\n\n  // Private\n  // ------------\n\nfunction buildDomWrapper(el, options) {\n  let html = '';\n  html += '<div class=\"' + options.theme + '\">';\n  if (options['title']) {\n    html += '<div class=\"' + options.theme + '-title\">' + escapeHtml(options['title']) + '</div>';\n  }\n  html += '<div class=\"' + options.theme + '-stage\"><div class=\"' + options.theme + '-rendering\"></div></div>';\n  if (options.notes) {\n    html += '<div class=\"' + options.theme + '-notes\">' + escapeHtml(options.notes) + '</div>';\n  }\n  html += '</div>';\n  el.innerHTML = html;\n}\n\nfunction convertChartTypes(str) {\n  const map = {\n    areachart: 'area',\n    barchart: 'horizontal-bar',\n    columnchart: 'bar',\n    linechart: 'line',\n    piechart: 'pie',\n  };\n  return map[str] || str;\n}\n\nfunction testDom(fn) {\n  if (/in/.test(document.readyState)) {\n    setTimeout(function(){\n      testDom(fn);\n    }, 9);\n  } else {\n    fn();\n  }\n}\n\nfunction domReady(fn) {\n  if (typeof document !== 'undefined' || typeof window === 'undefined') {\n    fn();\n    return;\n  }\n  // Firefox 3.5 shim\n  if (document.readyState == null && document.addEventListener) {\n    document.addEventListener('DOMContentLoaded', function DOMContentLoaded() {\n      document.removeEventListener('DOMContentLoaded', DOMContentLoaded, false);\n      document.readyState = 'complete';\n    }, false);\n    document.readyState = 'loading';\n  }\n  testDom(fn);\n}\n\nexport { Dataset } from './dataset';\n\nexport default Dataviz;\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","import { Dataviz, Dataset } from './index';\n\nconst env = typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : {};\n\nexport const extendKeenGlobalObject = function(env) {\n  env.Keen = env.Keen || {};\n  env.Keen.Dataset = Dataset;\n  env.Keen.Dataviz = Dataviz;\n};\n\nif (\n     (typeof KEEN_GLOBAL_OBJECT !== 'undefined'\n      && KEEN_GLOBAL_OBJECT)\n     || typeof KEEN_EXPOSE_AS_GLOBAL_OBJECT !== 'undefined'\n   ) {\n  extendKeenGlobalObject(env);\n}\n\nexport { Dataviz, Dataset } from './index';\nexport default Dataviz;\n"],"sourceRoot":""}